Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> compilation_unit
Rule 1     compilation_unit -> sections main_section
Rule 2     main_section -> MAIN COLON main_body
Rule 3     main_body -> stm main_body
Rule 4     main_body -> var_definition main_body
Rule 5     main_body -> ENDMAIN
Rule 6     sections -> var_definition sections
Rule 7     sections -> class_definition sections
Rule 8     sections -> <empty>
Rule 9     var_definition -> type var_list
Rule 10    var_definition -> PERMANENT type var_list
Rule 11    var_definition -> CONST type var_list
Rule 12    var_definition -> PERMANENT CONST type var_list
Rule 13    var_definition -> CONST PERMANENT type var_list
Rule 14    class_definition -> CLASS class_header
Rule 15    class_header -> ID_COLON class_body
Rule 16    class_header -> ID EXTENDS ID_COLON class_body
Rule 17    var_list -> ID SEMI
Rule 18    var_list -> ID COMMA var_list_tail
Rule 19    var_list -> ID ASSIG expression SEMI
Rule 20    var_list -> ID ASSIG expression COMMA var_list_tail
Rule 21    var_list -> ID PASSIG expression SEMI
Rule 22    var_list -> ID PASSIG expression COMMA var_list_tail
Rule 23    var_list -> ID PASSIG ALLOC ID_LP par_list SEMI
Rule 24    var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail
Rule 25    var_list_tail -> ID SEMI
Rule 26    var_list_tail -> ID COMMA var_list_tail
Rule 27    var_list_tail -> ID ASSIG expression SEMI
Rule 28    var_list_tail -> ID ASSIG expression COMMA var_list_tail
Rule 29    var_list_tail -> ID PASSIG expression SEMI
Rule 30    var_list_tail -> ID PASSIG expression COMMA var_list_tail
Rule 31    var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI
Rule 32    var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail
Rule 33    type -> BOOL
Rule 34    type -> CHAR
Rule 35    type -> STRING
Rule 36    type -> INT
Rule 37    type -> FLOAT
Rule 38    type -> ID
Rule 39    type -> BOOL_LS type_tail
Rule 40    type -> CHAR_LS type_tail
Rule 41    type -> STRING_LS type_tail
Rule 42    type -> INT_LS type_tail
Rule 43    type -> FLOAT_LS type_tail
Rule 44    type -> ID_LS type_tail
Rule 45    type -> FILE
Rule 46    type_tail -> RLS type_tail
Rule 47    type_tail -> RS
Rule 48    atype -> BOOL
Rule 49    atype -> CHAR
Rule 50    atype -> STRING
Rule 51    atype -> INT
Rule 52    atype -> FLOAT
Rule 53    atype -> ID
Rule 54    atype -> BOOL_AT
Rule 55    atype -> CHAR_AT
Rule 56    atype -> STRING_AT
Rule 57    atype -> INT_AT
Rule 58    atype -> FLOAT_AT
Rule 59    atype -> ID_AT
Rule 60    atype -> BOOL_LS atype_tail
Rule 61    atype -> CHAR_LS atype_tail
Rule 62    atype -> STRING_LS atype_tail
Rule 63    atype -> INT_LS atype_tail
Rule 64    atype -> FLOAT_LS atype_tail
Rule 65    atype -> ID_LS atype_tail
Rule 66    atype -> FILE
Rule 67    atype_tail -> RLS atype_tail
Rule 68    atype_tail -> RS_AT
Rule 69    atype_tail -> RS
Rule 70    stms -> stm stms
Rule 71    stms -> stm
Rule 72    stm -> ID_COLON ustm
Rule 73    stm -> ustm
Rule 74    class_body -> ENDCLASS
Rule 75    class_body -> attr_definition class_body
Rule 76    class_body -> method_header method_body class_body
Rule 77    class_body -> PUBLIC method_header method_body class_body
Rule 78    class_body -> PRIVATE method_header method_body class_body
Rule 79    attr_definition -> PUBLIC SHARED CONST type var_list
Rule 80    attr_definition -> PUBLIC CONST SHARED type var_list
Rule 81    attr_definition -> PRIVATE SHARED CONST type var_list
Rule 82    attr_definition -> PRIVATE CONST SHARED type var_list
Rule 83    attr_definition -> PUBLIC SHARED type var_list
Rule 84    attr_definition -> PUBLIC CONST type var_list
Rule 85    attr_definition -> SHARED CONST type var_list
Rule 86    attr_definition -> CONST SHARED type var_list
Rule 87    attr_definition -> PRIVATE SHARED type var_list
Rule 88    attr_definition -> PRIVATE CONST type var_list
Rule 89    attr_definition -> PUBLIC type var_list
Rule 90    attr_definition -> SHARED type var_list
Rule 91    attr_definition -> CONST type var_list
Rule 92    attr_definition -> PRIVATE type var_list
Rule 93    attr_definition -> type var_list
Rule 94    method_header -> METHOD ID_LP arg_list ARROW type COLON
Rule 95    method_header -> METHOD ID_LP arg_list COLON
Rule 96    arg_list -> RP
Rule 97    arg_list -> atype ID RP
Rule 98    arg_list -> atype ID COMMA arg_list_tail
Rule 99    arg_list -> CONST atype ID RP
Rule 100   arg_list -> CONST atype ID COMMA arg_list_tail
Rule 101   arg_list_tail -> RP
Rule 102   arg_list_tail -> atype ID RP
Rule 103   arg_list_tail -> atype ID COMMA arg_list_tail
Rule 104   arg_list_tail -> CONST atype ID RP
Rule 105   arg_list_tail -> CONST atype ID COMMA arg_list_tail
Rule 106   method_body -> stm method_body
Rule 107   method_body -> var_definition method_body
Rule 108   method_body -> ENDMETHOD
Rule 109   ustm -> null_stm
Rule 110   ustm -> assig_stm
Rule 111   ustm -> passig_stm
Rule 112   ustm -> return_stm
Rule 113   ustm -> preturn_stm
Rule 114   ustm -> call_stm
Rule 115   ustm -> if_stm
Rule 116   ustm -> while_stm
Rule 117   ustm -> for_stm
Rule 118   ustm -> goto_stm
Rule 119   ustm -> break_stm
Rule 120   ustm -> continue_stm
Rule 121   ustm -> guard_stm
Rule 122   ustm -> raise_stm
Rule 123   ustm -> terminate_stm
Rule 124   break_stm -> BREAK SEMI
Rule 125   continue_stm -> CONTINUE SEMI
Rule 126   terminate_stm -> TERMINATE SEMI
Rule 127   null_stm -> SEMI
Rule 128   assig_stm -> storage ASSIG expression SEMI
Rule 129   passig_stm -> storage PASSIG expression SEMI
Rule 130   passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI
Rule 131   call_stm -> call SEMI
Rule 132   if_stm -> IF expression THEN stms ENDIF
Rule 133   if_stm -> IF expression THEN stms ELSE stms ENDIF
Rule 134   while_stm -> WHILE expression DO stms ENDWHILE
Rule 135   while_stm -> WHILE expression DO ENDWHILE
Rule 136   while_stm -> WHILE DO stms ENDWHILE
Rule 137   while_stm -> WHILE DO ENDWHILE
Rule 138   for_stm -> FOR prologue condition epilogue stms ENDFOR
Rule 139   for_stm -> FOR prologue condition epilogue ENDFOR
Rule 140   goto_stm -> GOTO ID SEMI
Rule 141   prologue -> storage ASSIG expression prologue_tail
Rule 142   prologue -> SEMI
Rule 143   prologue_tail -> COMMA storage ASSIG expression prologue_tail
Rule 144   prologue_tail -> SEMI
Rule 145   condition -> expression SEMI
Rule 146   condition -> SEMI
Rule 147   epilogue -> storage ASSIG expression epilogue_tail
Rule 148   epilogue -> DO
Rule 149   epilogue_tail -> COMMA storage ASSIG expression epilogue_tail
Rule 150   epilogue_tail -> DO
Rule 151   storage -> arr
Rule 152   storage -> var
Rule 153   return_stm -> RETURN SEMI
Rule 154   return_stm -> RETURN expression SEMI
Rule 155   preturn_stm -> PRETURN expression SEMI
Rule 156   guard_stm -> GUARD COLON stms CATCH COLON catch_block
Rule 157   catch_block -> STRING_LIT COLON stms catch_block_tail
Rule 158   catch_block_tail -> ENDCATCH
Rule 159   catch_block_tail -> STRING_LIT COLON stms catch_block_tail
Rule 160   raise_stm -> RAISE expression SEMI
Rule 161   expression -> simple_expression
Rule 162   expression -> expression PLUS expression
Rule 163   expression -> expression MINUS expression
Rule 164   expression -> expression STAR expression
Rule 165   expression -> expression DIV expression
Rule 166   expression -> expression IDIV expression
Rule 167   expression -> expression MOD expression
Rule 168   expression -> expression AND expression
Rule 169   expression -> expression OR expression
Rule 170   expression -> expression LT expression
Rule 171   expression -> expression LE expression
Rule 172   expression -> expression GT expression
Rule 173   expression -> expression GE expression
Rule 174   expression -> expression EQ expression
Rule 175   expression -> expression NEQ expression
Rule 176   expression -> MINUS simple_expression
Rule 177   expression -> NOT simple_expression
Rule 178   simple_expression -> LP expression RP
Rule 179   simple_expression -> INT_LIT
Rule 180   simple_expression -> FLOAT_LIT
Rule 181   simple_expression -> FALSE
Rule 182   simple_expression -> TRUE
Rule 183   simple_expression -> NOREF
Rule 184   simple_expression -> CHAR_LIT
Rule 185   simple_expression -> STRING_LIT
Rule 186   simple_expression -> var
Rule 187   simple_expression -> arr
Rule 188   simple_expression -> call
Rule 189   arr -> ID_LS COLON RS
Rule 190   arr -> ID_LS COLON expression RS
Rule 191   arr -> ID_LS expression COLON RS
Rule 192   arr -> ID_LS expression COLON expression RS
Rule 193   arr -> qualifier ID_LS COLON RS
Rule 194   arr -> qualifier ID_LS COLON expression RS
Rule 195   arr -> qualifier ID_LS expression COLON RS
Rule 196   arr -> qualifier ID_LS expression COLON expression RS
Rule 197   arr -> ID_LS expression RS arr_tail
Rule 198   arr -> qualifier ID_LS expression RS arr_tail
Rule 199   arr_tail -> LS expression RS arr_tail
Rule 200   arr_tail -> <empty>
Rule 201   call -> ID_LP par_list
Rule 202   call -> BOOL_LP expression RP
Rule 203   call -> CHAR_LP expression RP
Rule 204   call -> STRING_LP expression RP
Rule 205   call -> INT_LP expression RP
Rule 206   call -> FLOAT_LP expression RP
Rule 207   call -> FIN_DOT ID_LP par_list
Rule 208   call -> FOUT_DOT ID_LP par_list
Rule 209   call -> IDOF_LP expression RP
Rule 210   call -> SIZEOF_LP size_par RP
Rule 211   call -> TYPEOF_LP expression RP
Rule 212   call -> qualifier ID_LP par_list
Rule 213   size_par -> ID
Rule 214   size_par -> ID_LS type_tail
Rule 215   size_par -> qualifier ID
Rule 216   size_par -> qualifier ID_LS type_tail
Rule 217   qualifier -> PARENT_DOT qualifier
Rule 218   qualifier -> ID_DOT qualifier
Rule 219   qualifier -> ID_DOT
Rule 220   var -> ID
Rule 221   var -> qualifier ID
Rule 222   par_list -> RP
Rule 223   par_list -> expression RP
Rule 224   par_list -> expression COMMA par_list_tail
Rule 225   par_list_tail -> RP
Rule 226   par_list_tail -> expression RP
Rule 227   par_list_tail -> expression COMMA par_list_tail

Terminals, with rules where they appear

ALLOC                : 23 24 31 32 130
AND                  : 168
ARROW                : 94
ASSIG                : 19 20 27 28 128 141 143 147 149
BOOL                 : 33 48
BOOL_AT              : 54
BOOL_LP              : 202
BOOL_LS              : 39 60
BREAK                : 124
CATCH                : 156
CHAR                 : 34 49
CHAR_AT              : 55
CHAR_LIT             : 184
CHAR_LP              : 203
CHAR_LS              : 40 61
CLASS                : 14
COLON                : 2 94 95 156 156 157 159 189 190 191 192 193 194 195 196
COMMA                : 18 20 22 24 26 28 30 32 98 100 103 105 143 149 224 227
CONST                : 11 12 13 79 80 81 82 84 85 86 88 91 99 100 104 105
CONTINUE             : 125
DIV                  : 165
DO                   : 134 135 136 137 148 150
ELSE                 : 133
ENDCATCH             : 158
ENDCLASS             : 74
ENDFOR               : 138 139
ENDIF                : 132 133
ENDMAIN              : 5
ENDMETHOD            : 108
ENDWHILE             : 134 135 136 137
EQ                   : 174
EXTENDS              : 16
FALSE                : 181
FILE                 : 45 66
FIN_DOT              : 207
FLOAT                : 37 52
FLOAT_AT             : 58
FLOAT_LIT            : 180
FLOAT_LP             : 206
FLOAT_LS             : 43 64
FOR                  : 138 139
FOUT_DOT             : 208
GE                   : 173
GOTO                 : 140
GT                   : 172
GUARD                : 156
ID                   : 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 38 53 97 98 99 100 102 103 104 105 140 213 215 220 221
IDIV                 : 166
IDOF_LP              : 209
ID_AT                : 59
ID_COLON             : 15 16 72
ID_DOT               : 218 219
ID_LP                : 23 24 31 32 94 95 130 201 207 208 212
ID_LS                : 44 65 189 190 191 192 193 194 195 196 197 198 214 216
IF                   : 132 133
INT                  : 36 51
INT_AT               : 57
INT_LIT              : 179
INT_LP               : 205
INT_LS               : 42 63
LE                   : 171
LP                   : 178
LS                   : 199
LT                   : 170
MAIN                 : 2
METHOD               : 94 95
MINUS                : 163 176
MOD                  : 167
NEQ                  : 175
NOREF                : 183
NOT                  : 177
OR                   : 169
PARENT_DOT           : 217
PASSIG               : 21 22 23 24 29 30 31 32 129 130
PERMANENT            : 10 12 13
PLUS                 : 162
PRETURN              : 155
PRIVATE              : 78 81 82 87 88 92
PUBLIC               : 77 79 80 83 84 89
RAISE                : 160
RETURN               : 153 154
RLS                  : 46 67
RP                   : 96 97 99 101 102 104 178 202 203 204 205 206 209 210 211 222 223 225 226
RS                   : 47 69 189 190 191 192 193 194 195 196 197 198 199
RS_AT                : 68
SEMI                 : 17 19 21 23 25 27 29 31 124 125 126 127 128 129 130 131 140 142 144 145 146 153 154 155 160
SHARED               : 79 80 81 82 83 85 86 87 90
SIZEOF_LP            : 210
STAR                 : 164
STRING               : 35 50
STRING_AT            : 56
STRING_LIT           : 157 159 185
STRING_LP            : 204
STRING_LS            : 41 62
TERMINATE            : 126
THEN                 : 132 133
TRUE                 : 182
TYPEOF_LP            : 211
WHILE                : 134 135 136 137
error                : 

Nonterminals, with rules where they appear

arg_list             : 94 95
arg_list_tail        : 98 100 103 105
arr                  : 151 187
arr_tail             : 197 198 199
assig_stm            : 110
attr_definition      : 75
atype                : 97 98 99 100 102 103 104 105
atype_tail           : 60 61 62 63 64 65 67
break_stm            : 119
call                 : 131 188
call_stm             : 114
catch_block          : 156
catch_block_tail     : 157 159
class_body           : 15 16 75 76 77 78
class_definition     : 7
class_header         : 14
compilation_unit     : 0
condition            : 138 139
continue_stm         : 120
epilogue             : 138 139
epilogue_tail        : 147 149
expression           : 19 20 21 22 27 28 29 30 128 129 132 133 134 135 141 143 145 147 149 154 155 160 162 162 163 163 164 164 165 165 166 166 167 167 168 168 169 169 170 170 171 171 172 172 173 173 174 174 175 175 178 190 191 192 192 194 195 196 196 197 198 199 202 203 204 205 206 209 211 223 224 226 227
for_stm              : 117
goto_stm             : 118
guard_stm            : 121
if_stm               : 115
main_body            : 2 3 4
main_section         : 1
method_body          : 76 77 78 106 107
method_header        : 76 77 78
null_stm             : 109
par_list             : 23 24 31 32 130 201 207 208 212
par_list_tail        : 224 227
passig_stm           : 111
preturn_stm          : 113
prologue             : 138 139
prologue_tail        : 141 143
qualifier            : 193 194 195 196 198 212 215 216 217 218 221
raise_stm            : 122
return_stm           : 112
sections             : 1 6 7
simple_expression    : 161 176 177
size_par             : 210
stm                  : 3 70 71 106
stms                 : 70 132 133 133 134 136 138 156 157 159
storage              : 128 129 130 141 143 147 149
terminate_stm        : 123
type                 : 9 10 11 12 13 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94
type_tail            : 39 40 41 42 43 44 46 214 216
ustm                 : 72 73
var                  : 152 186
var_definition       : 4 6 107
var_list             : 9 10 11 12 13 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
var_list_tail        : 18 20 22 24 26 28 30 32
while_stm            : 116

Parsing method: LALR

state 0

    (0) S' -> . compilation_unit
    (1) compilation_unit -> . sections main_section
    (6) sections -> . var_definition sections
    (7) sections -> . class_definition sections
    (8) sections -> .
    (9) var_definition -> . type var_list
    (10) var_definition -> . PERMANENT type var_list
    (11) var_definition -> . CONST type var_list
    (12) var_definition -> . PERMANENT CONST type var_list
    (13) var_definition -> . CONST PERMANENT type var_list
    (14) class_definition -> . CLASS class_header
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    MAIN            reduce using rule 8 (sections -> .)
    PERMANENT       shift and go to state 6
    CONST           shift and go to state 7
    CLASS           shift and go to state 8
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    compilation_unit               shift and go to state 1
    sections                       shift and go to state 2
    var_definition                 shift and go to state 3
    class_definition               shift and go to state 4
    type                           shift and go to state 5

state 1

    (0) S' -> compilation_unit .



state 2

    (1) compilation_unit -> sections . main_section
    (2) main_section -> . MAIN COLON main_body

    MAIN            shift and go to state 23

    main_section                   shift and go to state 22

state 3

    (6) sections -> var_definition . sections
    (6) sections -> . var_definition sections
    (7) sections -> . class_definition sections
    (8) sections -> .
    (9) var_definition -> . type var_list
    (10) var_definition -> . PERMANENT type var_list
    (11) var_definition -> . CONST type var_list
    (12) var_definition -> . PERMANENT CONST type var_list
    (13) var_definition -> . CONST PERMANENT type var_list
    (14) class_definition -> . CLASS class_header
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    MAIN            reduce using rule 8 (sections -> .)
    PERMANENT       shift and go to state 6
    CONST           shift and go to state 7
    CLASS           shift and go to state 8
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    var_definition                 shift and go to state 3
    sections                       shift and go to state 24
    class_definition               shift and go to state 4
    type                           shift and go to state 5

state 4

    (7) sections -> class_definition . sections
    (6) sections -> . var_definition sections
    (7) sections -> . class_definition sections
    (8) sections -> .
    (9) var_definition -> . type var_list
    (10) var_definition -> . PERMANENT type var_list
    (11) var_definition -> . CONST type var_list
    (12) var_definition -> . PERMANENT CONST type var_list
    (13) var_definition -> . CONST PERMANENT type var_list
    (14) class_definition -> . CLASS class_header
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    MAIN            reduce using rule 8 (sections -> .)
    PERMANENT       shift and go to state 6
    CONST           shift and go to state 7
    CLASS           shift and go to state 8
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    class_definition               shift and go to state 4
    sections                       shift and go to state 25
    var_definition                 shift and go to state 3
    type                           shift and go to state 5

state 5

    (9) var_definition -> type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 26

state 6

    (10) var_definition -> PERMANENT . type var_list
    (12) var_definition -> PERMANENT . CONST type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    CONST           shift and go to state 29
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 28

state 7

    (11) var_definition -> CONST . type var_list
    (13) var_definition -> CONST . PERMANENT type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    PERMANENT       shift and go to state 31
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 30

state 8

    (14) class_definition -> CLASS . class_header
    (15) class_header -> . ID_COLON class_body
    (16) class_header -> . ID EXTENDS ID_COLON class_body

    ID_COLON        shift and go to state 33
    ID              shift and go to state 34

    class_header                   shift and go to state 32

state 9

    (33) type -> BOOL .

    ID              reduce using rule 33 (type -> BOOL .)
    COLON           reduce using rule 33 (type -> BOOL .)


state 10

    (34) type -> CHAR .

    ID              reduce using rule 34 (type -> CHAR .)
    COLON           reduce using rule 34 (type -> CHAR .)


state 11

    (35) type -> STRING .

    ID              reduce using rule 35 (type -> STRING .)
    COLON           reduce using rule 35 (type -> STRING .)


state 12

    (36) type -> INT .

    ID              reduce using rule 36 (type -> INT .)
    COLON           reduce using rule 36 (type -> INT .)


state 13

    (37) type -> FLOAT .

    ID              reduce using rule 37 (type -> FLOAT .)
    COLON           reduce using rule 37 (type -> FLOAT .)


state 14

    (38) type -> ID .

    ID              reduce using rule 38 (type -> ID .)
    COLON           reduce using rule 38 (type -> ID .)


state 15

    (39) type -> BOOL_LS . type_tail
    (46) type_tail -> . RLS type_tail
    (47) type_tail -> . RS

    RLS             shift and go to state 36
    RS              shift and go to state 37

    type_tail                      shift and go to state 35

state 16

    (40) type -> CHAR_LS . type_tail
    (46) type_tail -> . RLS type_tail
    (47) type_tail -> . RS

    RLS             shift and go to state 36
    RS              shift and go to state 37

    type_tail                      shift and go to state 38

state 17

    (41) type -> STRING_LS . type_tail
    (46) type_tail -> . RLS type_tail
    (47) type_tail -> . RS

    RLS             shift and go to state 36
    RS              shift and go to state 37

    type_tail                      shift and go to state 39

state 18

    (42) type -> INT_LS . type_tail
    (46) type_tail -> . RLS type_tail
    (47) type_tail -> . RS

    RLS             shift and go to state 36
    RS              shift and go to state 37

    type_tail                      shift and go to state 40

state 19

    (43) type -> FLOAT_LS . type_tail
    (46) type_tail -> . RLS type_tail
    (47) type_tail -> . RS

    RLS             shift and go to state 36
    RS              shift and go to state 37

    type_tail                      shift and go to state 41

state 20

    (44) type -> ID_LS . type_tail
    (46) type_tail -> . RLS type_tail
    (47) type_tail -> . RS

    RLS             shift and go to state 36
    RS              shift and go to state 37

    type_tail                      shift and go to state 42

state 21

    (45) type -> FILE .

    ID              reduce using rule 45 (type -> FILE .)
    COLON           reduce using rule 45 (type -> FILE .)


state 22

    (1) compilation_unit -> sections main_section .

    $end            reduce using rule 1 (compilation_unit -> sections main_section .)


state 23

    (2) main_section -> MAIN . COLON main_body

    COLON           shift and go to state 43


state 24

    (6) sections -> var_definition sections .

    MAIN            reduce using rule 6 (sections -> var_definition sections .)


state 25

    (7) sections -> class_definition sections .

    MAIN            reduce using rule 7 (sections -> class_definition sections .)


state 26

    (9) var_definition -> type var_list .

    PERMANENT       reduce using rule 9 (var_definition -> type var_list .)
    CONST           reduce using rule 9 (var_definition -> type var_list .)
    CLASS           reduce using rule 9 (var_definition -> type var_list .)
    BOOL            reduce using rule 9 (var_definition -> type var_list .)
    CHAR            reduce using rule 9 (var_definition -> type var_list .)
    STRING          reduce using rule 9 (var_definition -> type var_list .)
    INT             reduce using rule 9 (var_definition -> type var_list .)
    FLOAT           reduce using rule 9 (var_definition -> type var_list .)
    ID              reduce using rule 9 (var_definition -> type var_list .)
    BOOL_LS         reduce using rule 9 (var_definition -> type var_list .)
    CHAR_LS         reduce using rule 9 (var_definition -> type var_list .)
    STRING_LS       reduce using rule 9 (var_definition -> type var_list .)
    INT_LS          reduce using rule 9 (var_definition -> type var_list .)
    FLOAT_LS        reduce using rule 9 (var_definition -> type var_list .)
    ID_LS           reduce using rule 9 (var_definition -> type var_list .)
    FILE            reduce using rule 9 (var_definition -> type var_list .)
    MAIN            reduce using rule 9 (var_definition -> type var_list .)
    ENDMAIN         reduce using rule 9 (var_definition -> type var_list .)
    ID_COLON        reduce using rule 9 (var_definition -> type var_list .)
    SEMI            reduce using rule 9 (var_definition -> type var_list .)
    RETURN          reduce using rule 9 (var_definition -> type var_list .)
    PRETURN         reduce using rule 9 (var_definition -> type var_list .)
    IF              reduce using rule 9 (var_definition -> type var_list .)
    WHILE           reduce using rule 9 (var_definition -> type var_list .)
    FOR             reduce using rule 9 (var_definition -> type var_list .)
    GOTO            reduce using rule 9 (var_definition -> type var_list .)
    BREAK           reduce using rule 9 (var_definition -> type var_list .)
    CONTINUE        reduce using rule 9 (var_definition -> type var_list .)
    GUARD           reduce using rule 9 (var_definition -> type var_list .)
    RAISE           reduce using rule 9 (var_definition -> type var_list .)
    TERMINATE       reduce using rule 9 (var_definition -> type var_list .)
    ID_LP           reduce using rule 9 (var_definition -> type var_list .)
    BOOL_LP         reduce using rule 9 (var_definition -> type var_list .)
    CHAR_LP         reduce using rule 9 (var_definition -> type var_list .)
    STRING_LP       reduce using rule 9 (var_definition -> type var_list .)
    INT_LP          reduce using rule 9 (var_definition -> type var_list .)
    FLOAT_LP        reduce using rule 9 (var_definition -> type var_list .)
    FIN_DOT         reduce using rule 9 (var_definition -> type var_list .)
    FOUT_DOT        reduce using rule 9 (var_definition -> type var_list .)
    IDOF_LP         reduce using rule 9 (var_definition -> type var_list .)
    SIZEOF_LP       reduce using rule 9 (var_definition -> type var_list .)
    TYPEOF_LP       reduce using rule 9 (var_definition -> type var_list .)
    PARENT_DOT      reduce using rule 9 (var_definition -> type var_list .)
    ID_DOT          reduce using rule 9 (var_definition -> type var_list .)
    ENDMETHOD       reduce using rule 9 (var_definition -> type var_list .)


state 27

    (17) var_list -> ID . SEMI
    (18) var_list -> ID . COMMA var_list_tail
    (19) var_list -> ID . ASSIG expression SEMI
    (20) var_list -> ID . ASSIG expression COMMA var_list_tail
    (21) var_list -> ID . PASSIG expression SEMI
    (22) var_list -> ID . PASSIG expression COMMA var_list_tail
    (23) var_list -> ID . PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> ID . PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    SEMI            shift and go to state 44
    COMMA           shift and go to state 45
    ASSIG           shift and go to state 46
    PASSIG          shift and go to state 47


state 28

    (10) var_definition -> PERMANENT type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 48

state 29

    (12) var_definition -> PERMANENT CONST . type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 49

state 30

    (11) var_definition -> CONST type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 50

state 31

    (13) var_definition -> CONST PERMANENT . type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 51

state 32

    (14) class_definition -> CLASS class_header .

    PERMANENT       reduce using rule 14 (class_definition -> CLASS class_header .)
    CONST           reduce using rule 14 (class_definition -> CLASS class_header .)
    CLASS           reduce using rule 14 (class_definition -> CLASS class_header .)
    BOOL            reduce using rule 14 (class_definition -> CLASS class_header .)
    CHAR            reduce using rule 14 (class_definition -> CLASS class_header .)
    STRING          reduce using rule 14 (class_definition -> CLASS class_header .)
    INT             reduce using rule 14 (class_definition -> CLASS class_header .)
    FLOAT           reduce using rule 14 (class_definition -> CLASS class_header .)
    ID              reduce using rule 14 (class_definition -> CLASS class_header .)
    BOOL_LS         reduce using rule 14 (class_definition -> CLASS class_header .)
    CHAR_LS         reduce using rule 14 (class_definition -> CLASS class_header .)
    STRING_LS       reduce using rule 14 (class_definition -> CLASS class_header .)
    INT_LS          reduce using rule 14 (class_definition -> CLASS class_header .)
    FLOAT_LS        reduce using rule 14 (class_definition -> CLASS class_header .)
    ID_LS           reduce using rule 14 (class_definition -> CLASS class_header .)
    FILE            reduce using rule 14 (class_definition -> CLASS class_header .)
    MAIN            reduce using rule 14 (class_definition -> CLASS class_header .)


state 33

    (15) class_header -> ID_COLON . class_body
    (74) class_body -> . ENDCLASS
    (75) class_body -> . attr_definition class_body
    (76) class_body -> . method_header method_body class_body
    (77) class_body -> . PUBLIC method_header method_body class_body
    (78) class_body -> . PRIVATE method_header method_body class_body
    (79) attr_definition -> . PUBLIC SHARED CONST type var_list
    (80) attr_definition -> . PUBLIC CONST SHARED type var_list
    (81) attr_definition -> . PRIVATE SHARED CONST type var_list
    (82) attr_definition -> . PRIVATE CONST SHARED type var_list
    (83) attr_definition -> . PUBLIC SHARED type var_list
    (84) attr_definition -> . PUBLIC CONST type var_list
    (85) attr_definition -> . SHARED CONST type var_list
    (86) attr_definition -> . CONST SHARED type var_list
    (87) attr_definition -> . PRIVATE SHARED type var_list
    (88) attr_definition -> . PRIVATE CONST type var_list
    (89) attr_definition -> . PUBLIC type var_list
    (90) attr_definition -> . SHARED type var_list
    (91) attr_definition -> . CONST type var_list
    (92) attr_definition -> . PRIVATE type var_list
    (93) attr_definition -> . type var_list
    (94) method_header -> . METHOD ID_LP arg_list ARROW type COLON
    (95) method_header -> . METHOD ID_LP arg_list COLON
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    ENDCLASS        shift and go to state 53
    PUBLIC          shift and go to state 56
    PRIVATE         shift and go to state 57
    SHARED          shift and go to state 58
    CONST           shift and go to state 59
    METHOD          shift and go to state 61
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    class_body                     shift and go to state 52
    attr_definition                shift and go to state 54
    method_header                  shift and go to state 55
    type                           shift and go to state 60

state 34

    (16) class_header -> ID . EXTENDS ID_COLON class_body

    EXTENDS         shift and go to state 62


state 35

    (39) type -> BOOL_LS type_tail .

    ID              reduce using rule 39 (type -> BOOL_LS type_tail .)
    COLON           reduce using rule 39 (type -> BOOL_LS type_tail .)


state 36

    (46) type_tail -> RLS . type_tail
    (46) type_tail -> . RLS type_tail
    (47) type_tail -> . RS

    RLS             shift and go to state 36
    RS              shift and go to state 37

    type_tail                      shift and go to state 63

state 37

    (47) type_tail -> RS .

    ID              reduce using rule 47 (type_tail -> RS .)
    COLON           reduce using rule 47 (type_tail -> RS .)
    RP              reduce using rule 47 (type_tail -> RS .)


state 38

    (40) type -> CHAR_LS type_tail .

    ID              reduce using rule 40 (type -> CHAR_LS type_tail .)
    COLON           reduce using rule 40 (type -> CHAR_LS type_tail .)


state 39

    (41) type -> STRING_LS type_tail .

    ID              reduce using rule 41 (type -> STRING_LS type_tail .)
    COLON           reduce using rule 41 (type -> STRING_LS type_tail .)


state 40

    (42) type -> INT_LS type_tail .

    ID              reduce using rule 42 (type -> INT_LS type_tail .)
    COLON           reduce using rule 42 (type -> INT_LS type_tail .)


state 41

    (43) type -> FLOAT_LS type_tail .

    ID              reduce using rule 43 (type -> FLOAT_LS type_tail .)
    COLON           reduce using rule 43 (type -> FLOAT_LS type_tail .)


state 42

    (44) type -> ID_LS type_tail .

    ID              reduce using rule 44 (type -> ID_LS type_tail .)
    COLON           reduce using rule 44 (type -> ID_LS type_tail .)


state 43

    (2) main_section -> MAIN COLON . main_body
    (3) main_body -> . stm main_body
    (4) main_body -> . var_definition main_body
    (5) main_body -> . ENDMAIN
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (9) var_definition -> . type var_list
    (10) var_definition -> . PERMANENT type var_list
    (11) var_definition -> . CONST type var_list
    (12) var_definition -> . PERMANENT CONST type var_list
    (13) var_definition -> . CONST PERMANENT type var_list
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ENDMAIN         shift and go to state 67
    ID_COLON        shift and go to state 68
    PERMANENT       shift and go to state 6
    CONST           shift and go to state 7
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 85
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 86
    FILE            shift and go to state 21
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    main_body                      shift and go to state 64
    stm                            shift and go to state 65
    var_definition                 shift and go to state 66
    ustm                           shift and go to state 69
    type                           shift and go to state 5
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 44

    (17) var_list -> ID SEMI .

    PERMANENT       reduce using rule 17 (var_list -> ID SEMI .)
    CONST           reduce using rule 17 (var_list -> ID SEMI .)
    CLASS           reduce using rule 17 (var_list -> ID SEMI .)
    BOOL            reduce using rule 17 (var_list -> ID SEMI .)
    CHAR            reduce using rule 17 (var_list -> ID SEMI .)
    STRING          reduce using rule 17 (var_list -> ID SEMI .)
    INT             reduce using rule 17 (var_list -> ID SEMI .)
    FLOAT           reduce using rule 17 (var_list -> ID SEMI .)
    ID              reduce using rule 17 (var_list -> ID SEMI .)
    BOOL_LS         reduce using rule 17 (var_list -> ID SEMI .)
    CHAR_LS         reduce using rule 17 (var_list -> ID SEMI .)
    STRING_LS       reduce using rule 17 (var_list -> ID SEMI .)
    INT_LS          reduce using rule 17 (var_list -> ID SEMI .)
    FLOAT_LS        reduce using rule 17 (var_list -> ID SEMI .)
    ID_LS           reduce using rule 17 (var_list -> ID SEMI .)
    FILE            reduce using rule 17 (var_list -> ID SEMI .)
    MAIN            reduce using rule 17 (var_list -> ID SEMI .)
    ENDMAIN         reduce using rule 17 (var_list -> ID SEMI .)
    ID_COLON        reduce using rule 17 (var_list -> ID SEMI .)
    SEMI            reduce using rule 17 (var_list -> ID SEMI .)
    RETURN          reduce using rule 17 (var_list -> ID SEMI .)
    PRETURN         reduce using rule 17 (var_list -> ID SEMI .)
    IF              reduce using rule 17 (var_list -> ID SEMI .)
    WHILE           reduce using rule 17 (var_list -> ID SEMI .)
    FOR             reduce using rule 17 (var_list -> ID SEMI .)
    GOTO            reduce using rule 17 (var_list -> ID SEMI .)
    BREAK           reduce using rule 17 (var_list -> ID SEMI .)
    CONTINUE        reduce using rule 17 (var_list -> ID SEMI .)
    GUARD           reduce using rule 17 (var_list -> ID SEMI .)
    RAISE           reduce using rule 17 (var_list -> ID SEMI .)
    TERMINATE       reduce using rule 17 (var_list -> ID SEMI .)
    ID_LP           reduce using rule 17 (var_list -> ID SEMI .)
    BOOL_LP         reduce using rule 17 (var_list -> ID SEMI .)
    CHAR_LP         reduce using rule 17 (var_list -> ID SEMI .)
    STRING_LP       reduce using rule 17 (var_list -> ID SEMI .)
    INT_LP          reduce using rule 17 (var_list -> ID SEMI .)
    FLOAT_LP        reduce using rule 17 (var_list -> ID SEMI .)
    FIN_DOT         reduce using rule 17 (var_list -> ID SEMI .)
    FOUT_DOT        reduce using rule 17 (var_list -> ID SEMI .)
    IDOF_LP         reduce using rule 17 (var_list -> ID SEMI .)
    SIZEOF_LP       reduce using rule 17 (var_list -> ID SEMI .)
    TYPEOF_LP       reduce using rule 17 (var_list -> ID SEMI .)
    PARENT_DOT      reduce using rule 17 (var_list -> ID SEMI .)
    ID_DOT          reduce using rule 17 (var_list -> ID SEMI .)
    ENDMETHOD       reduce using rule 17 (var_list -> ID SEMI .)
    ENDCLASS        reduce using rule 17 (var_list -> ID SEMI .)
    PUBLIC          reduce using rule 17 (var_list -> ID SEMI .)
    PRIVATE         reduce using rule 17 (var_list -> ID SEMI .)
    SHARED          reduce using rule 17 (var_list -> ID SEMI .)
    METHOD          reduce using rule 17 (var_list -> ID SEMI .)


state 45

    (18) var_list -> ID COMMA . var_list_tail
    (25) var_list_tail -> . ID SEMI
    (26) var_list_tail -> . ID COMMA var_list_tail
    (27) var_list_tail -> . ID ASSIG expression SEMI
    (28) var_list_tail -> . ID ASSIG expression COMMA var_list_tail
    (29) var_list_tail -> . ID PASSIG expression SEMI
    (30) var_list_tail -> . ID PASSIG expression COMMA var_list_tail
    (31) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (32) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 117

    var_list_tail                  shift and go to state 118

state 46

    (19) var_list -> ID ASSIG . expression SEMI
    (20) var_list -> ID ASSIG . expression COMMA var_list_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 120
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 47

    (21) var_list -> ID PASSIG . expression SEMI
    (22) var_list -> ID PASSIG . expression COMMA var_list_tail
    (23) var_list -> ID PASSIG . ALLOC ID_LP par_list SEMI
    (24) var_list -> ID PASSIG . ALLOC ID_LP par_list COMMA var_list_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ALLOC           shift and go to state 138
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 137
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 48

    (10) var_definition -> PERMANENT type var_list .

    PERMANENT       reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    CONST           reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    CLASS           reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    BOOL            reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    CHAR            reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    STRING          reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    INT             reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    FLOAT           reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    ID              reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    BOOL_LS         reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    CHAR_LS         reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    STRING_LS       reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    INT_LS          reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    FLOAT_LS        reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    ID_LS           reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    FILE            reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    MAIN            reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    ENDMAIN         reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    ID_COLON        reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    SEMI            reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    RETURN          reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    PRETURN         reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    IF              reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    WHILE           reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    FOR             reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    GOTO            reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    BREAK           reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    CONTINUE        reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    GUARD           reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    RAISE           reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    TERMINATE       reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    ID_LP           reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    BOOL_LP         reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    CHAR_LP         reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    STRING_LP       reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    INT_LP          reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    FLOAT_LP        reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    FIN_DOT         reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    FOUT_DOT        reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    IDOF_LP         reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    SIZEOF_LP       reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    TYPEOF_LP       reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    PARENT_DOT      reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    ID_DOT          reduce using rule 10 (var_definition -> PERMANENT type var_list .)
    ENDMETHOD       reduce using rule 10 (var_definition -> PERMANENT type var_list .)


state 49

    (12) var_definition -> PERMANENT CONST type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 139

state 50

    (11) var_definition -> CONST type var_list .

    PERMANENT       reduce using rule 11 (var_definition -> CONST type var_list .)
    CONST           reduce using rule 11 (var_definition -> CONST type var_list .)
    CLASS           reduce using rule 11 (var_definition -> CONST type var_list .)
    BOOL            reduce using rule 11 (var_definition -> CONST type var_list .)
    CHAR            reduce using rule 11 (var_definition -> CONST type var_list .)
    STRING          reduce using rule 11 (var_definition -> CONST type var_list .)
    INT             reduce using rule 11 (var_definition -> CONST type var_list .)
    FLOAT           reduce using rule 11 (var_definition -> CONST type var_list .)
    ID              reduce using rule 11 (var_definition -> CONST type var_list .)
    BOOL_LS         reduce using rule 11 (var_definition -> CONST type var_list .)
    CHAR_LS         reduce using rule 11 (var_definition -> CONST type var_list .)
    STRING_LS       reduce using rule 11 (var_definition -> CONST type var_list .)
    INT_LS          reduce using rule 11 (var_definition -> CONST type var_list .)
    FLOAT_LS        reduce using rule 11 (var_definition -> CONST type var_list .)
    ID_LS           reduce using rule 11 (var_definition -> CONST type var_list .)
    FILE            reduce using rule 11 (var_definition -> CONST type var_list .)
    MAIN            reduce using rule 11 (var_definition -> CONST type var_list .)
    ENDMAIN         reduce using rule 11 (var_definition -> CONST type var_list .)
    ID_COLON        reduce using rule 11 (var_definition -> CONST type var_list .)
    SEMI            reduce using rule 11 (var_definition -> CONST type var_list .)
    RETURN          reduce using rule 11 (var_definition -> CONST type var_list .)
    PRETURN         reduce using rule 11 (var_definition -> CONST type var_list .)
    IF              reduce using rule 11 (var_definition -> CONST type var_list .)
    WHILE           reduce using rule 11 (var_definition -> CONST type var_list .)
    FOR             reduce using rule 11 (var_definition -> CONST type var_list .)
    GOTO            reduce using rule 11 (var_definition -> CONST type var_list .)
    BREAK           reduce using rule 11 (var_definition -> CONST type var_list .)
    CONTINUE        reduce using rule 11 (var_definition -> CONST type var_list .)
    GUARD           reduce using rule 11 (var_definition -> CONST type var_list .)
    RAISE           reduce using rule 11 (var_definition -> CONST type var_list .)
    TERMINATE       reduce using rule 11 (var_definition -> CONST type var_list .)
    ID_LP           reduce using rule 11 (var_definition -> CONST type var_list .)
    BOOL_LP         reduce using rule 11 (var_definition -> CONST type var_list .)
    CHAR_LP         reduce using rule 11 (var_definition -> CONST type var_list .)
    STRING_LP       reduce using rule 11 (var_definition -> CONST type var_list .)
    INT_LP          reduce using rule 11 (var_definition -> CONST type var_list .)
    FLOAT_LP        reduce using rule 11 (var_definition -> CONST type var_list .)
    FIN_DOT         reduce using rule 11 (var_definition -> CONST type var_list .)
    FOUT_DOT        reduce using rule 11 (var_definition -> CONST type var_list .)
    IDOF_LP         reduce using rule 11 (var_definition -> CONST type var_list .)
    SIZEOF_LP       reduce using rule 11 (var_definition -> CONST type var_list .)
    TYPEOF_LP       reduce using rule 11 (var_definition -> CONST type var_list .)
    PARENT_DOT      reduce using rule 11 (var_definition -> CONST type var_list .)
    ID_DOT          reduce using rule 11 (var_definition -> CONST type var_list .)
    ENDMETHOD       reduce using rule 11 (var_definition -> CONST type var_list .)


state 51

    (13) var_definition -> CONST PERMANENT type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 140

state 52

    (15) class_header -> ID_COLON class_body .

    PERMANENT       reduce using rule 15 (class_header -> ID_COLON class_body .)
    CONST           reduce using rule 15 (class_header -> ID_COLON class_body .)
    CLASS           reduce using rule 15 (class_header -> ID_COLON class_body .)
    BOOL            reduce using rule 15 (class_header -> ID_COLON class_body .)
    CHAR            reduce using rule 15 (class_header -> ID_COLON class_body .)
    STRING          reduce using rule 15 (class_header -> ID_COLON class_body .)
    INT             reduce using rule 15 (class_header -> ID_COLON class_body .)
    FLOAT           reduce using rule 15 (class_header -> ID_COLON class_body .)
    ID              reduce using rule 15 (class_header -> ID_COLON class_body .)
    BOOL_LS         reduce using rule 15 (class_header -> ID_COLON class_body .)
    CHAR_LS         reduce using rule 15 (class_header -> ID_COLON class_body .)
    STRING_LS       reduce using rule 15 (class_header -> ID_COLON class_body .)
    INT_LS          reduce using rule 15 (class_header -> ID_COLON class_body .)
    FLOAT_LS        reduce using rule 15 (class_header -> ID_COLON class_body .)
    ID_LS           reduce using rule 15 (class_header -> ID_COLON class_body .)
    FILE            reduce using rule 15 (class_header -> ID_COLON class_body .)
    MAIN            reduce using rule 15 (class_header -> ID_COLON class_body .)


state 53

    (74) class_body -> ENDCLASS .

    PERMANENT       reduce using rule 74 (class_body -> ENDCLASS .)
    CONST           reduce using rule 74 (class_body -> ENDCLASS .)
    CLASS           reduce using rule 74 (class_body -> ENDCLASS .)
    BOOL            reduce using rule 74 (class_body -> ENDCLASS .)
    CHAR            reduce using rule 74 (class_body -> ENDCLASS .)
    STRING          reduce using rule 74 (class_body -> ENDCLASS .)
    INT             reduce using rule 74 (class_body -> ENDCLASS .)
    FLOAT           reduce using rule 74 (class_body -> ENDCLASS .)
    ID              reduce using rule 74 (class_body -> ENDCLASS .)
    BOOL_LS         reduce using rule 74 (class_body -> ENDCLASS .)
    CHAR_LS         reduce using rule 74 (class_body -> ENDCLASS .)
    STRING_LS       reduce using rule 74 (class_body -> ENDCLASS .)
    INT_LS          reduce using rule 74 (class_body -> ENDCLASS .)
    FLOAT_LS        reduce using rule 74 (class_body -> ENDCLASS .)
    ID_LS           reduce using rule 74 (class_body -> ENDCLASS .)
    FILE            reduce using rule 74 (class_body -> ENDCLASS .)
    MAIN            reduce using rule 74 (class_body -> ENDCLASS .)


state 54

    (75) class_body -> attr_definition . class_body
    (74) class_body -> . ENDCLASS
    (75) class_body -> . attr_definition class_body
    (76) class_body -> . method_header method_body class_body
    (77) class_body -> . PUBLIC method_header method_body class_body
    (78) class_body -> . PRIVATE method_header method_body class_body
    (79) attr_definition -> . PUBLIC SHARED CONST type var_list
    (80) attr_definition -> . PUBLIC CONST SHARED type var_list
    (81) attr_definition -> . PRIVATE SHARED CONST type var_list
    (82) attr_definition -> . PRIVATE CONST SHARED type var_list
    (83) attr_definition -> . PUBLIC SHARED type var_list
    (84) attr_definition -> . PUBLIC CONST type var_list
    (85) attr_definition -> . SHARED CONST type var_list
    (86) attr_definition -> . CONST SHARED type var_list
    (87) attr_definition -> . PRIVATE SHARED type var_list
    (88) attr_definition -> . PRIVATE CONST type var_list
    (89) attr_definition -> . PUBLIC type var_list
    (90) attr_definition -> . SHARED type var_list
    (91) attr_definition -> . CONST type var_list
    (92) attr_definition -> . PRIVATE type var_list
    (93) attr_definition -> . type var_list
    (94) method_header -> . METHOD ID_LP arg_list ARROW type COLON
    (95) method_header -> . METHOD ID_LP arg_list COLON
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    ENDCLASS        shift and go to state 53
    PUBLIC          shift and go to state 56
    PRIVATE         shift and go to state 57
    SHARED          shift and go to state 58
    CONST           shift and go to state 59
    METHOD          shift and go to state 61
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    attr_definition                shift and go to state 54
    class_body                     shift and go to state 141
    method_header                  shift and go to state 55
    type                           shift and go to state 60

state 55

    (76) class_body -> method_header . method_body class_body
    (106) method_body -> . stm method_body
    (107) method_body -> . var_definition method_body
    (108) method_body -> . ENDMETHOD
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (9) var_definition -> . type var_list
    (10) var_definition -> . PERMANENT type var_list
    (11) var_definition -> . CONST type var_list
    (12) var_definition -> . PERMANENT CONST type var_list
    (13) var_definition -> . CONST PERMANENT type var_list
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ENDMETHOD       shift and go to state 145
    ID_COLON        shift and go to state 68
    PERMANENT       shift and go to state 6
    CONST           shift and go to state 7
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 85
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 86
    FILE            shift and go to state 21
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    method_body                    shift and go to state 142
    stm                            shift and go to state 143
    var_definition                 shift and go to state 144
    ustm                           shift and go to state 69
    type                           shift and go to state 5
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 56

    (77) class_body -> PUBLIC . method_header method_body class_body
    (79) attr_definition -> PUBLIC . SHARED CONST type var_list
    (80) attr_definition -> PUBLIC . CONST SHARED type var_list
    (83) attr_definition -> PUBLIC . SHARED type var_list
    (84) attr_definition -> PUBLIC . CONST type var_list
    (89) attr_definition -> PUBLIC . type var_list
    (94) method_header -> . METHOD ID_LP arg_list ARROW type COLON
    (95) method_header -> . METHOD ID_LP arg_list COLON
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    SHARED          shift and go to state 147
    CONST           shift and go to state 148
    METHOD          shift and go to state 61
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    method_header                  shift and go to state 146
    type                           shift and go to state 149

state 57

    (78) class_body -> PRIVATE . method_header method_body class_body
    (81) attr_definition -> PRIVATE . SHARED CONST type var_list
    (82) attr_definition -> PRIVATE . CONST SHARED type var_list
    (87) attr_definition -> PRIVATE . SHARED type var_list
    (88) attr_definition -> PRIVATE . CONST type var_list
    (92) attr_definition -> PRIVATE . type var_list
    (94) method_header -> . METHOD ID_LP arg_list ARROW type COLON
    (95) method_header -> . METHOD ID_LP arg_list COLON
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    SHARED          shift and go to state 151
    CONST           shift and go to state 152
    METHOD          shift and go to state 61
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    method_header                  shift and go to state 150
    type                           shift and go to state 153

state 58

    (85) attr_definition -> SHARED . CONST type var_list
    (90) attr_definition -> SHARED . type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    CONST           shift and go to state 154
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 155

state 59

    (86) attr_definition -> CONST . SHARED type var_list
    (91) attr_definition -> CONST . type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    SHARED          shift and go to state 156
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 157

state 60

    (93) attr_definition -> type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 158

state 61

    (94) method_header -> METHOD . ID_LP arg_list ARROW type COLON
    (95) method_header -> METHOD . ID_LP arg_list COLON

    ID_LP           shift and go to state 159


state 62

    (16) class_header -> ID EXTENDS . ID_COLON class_body

    ID_COLON        shift and go to state 160


state 63

    (46) type_tail -> RLS type_tail .

    ID              reduce using rule 46 (type_tail -> RLS type_tail .)
    COLON           reduce using rule 46 (type_tail -> RLS type_tail .)
    RP              reduce using rule 46 (type_tail -> RLS type_tail .)


state 64

    (2) main_section -> MAIN COLON main_body .

    $end            reduce using rule 2 (main_section -> MAIN COLON main_body .)


state 65

    (3) main_body -> stm . main_body
    (3) main_body -> . stm main_body
    (4) main_body -> . var_definition main_body
    (5) main_body -> . ENDMAIN
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (9) var_definition -> . type var_list
    (10) var_definition -> . PERMANENT type var_list
    (11) var_definition -> . CONST type var_list
    (12) var_definition -> . PERMANENT CONST type var_list
    (13) var_definition -> . CONST PERMANENT type var_list
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ENDMAIN         shift and go to state 67
    ID_COLON        shift and go to state 68
    PERMANENT       shift and go to state 6
    CONST           shift and go to state 7
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 85
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 86
    FILE            shift and go to state 21
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    stm                            shift and go to state 65
    main_body                      shift and go to state 161
    var_definition                 shift and go to state 66
    ustm                           shift and go to state 69
    type                           shift and go to state 5
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 66

    (4) main_body -> var_definition . main_body
    (3) main_body -> . stm main_body
    (4) main_body -> . var_definition main_body
    (5) main_body -> . ENDMAIN
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (9) var_definition -> . type var_list
    (10) var_definition -> . PERMANENT type var_list
    (11) var_definition -> . CONST type var_list
    (12) var_definition -> . PERMANENT CONST type var_list
    (13) var_definition -> . CONST PERMANENT type var_list
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ENDMAIN         shift and go to state 67
    ID_COLON        shift and go to state 68
    PERMANENT       shift and go to state 6
    CONST           shift and go to state 7
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 85
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 86
    FILE            shift and go to state 21
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    var_definition                 shift and go to state 66
    main_body                      shift and go to state 162
    stm                            shift and go to state 65
    ustm                           shift and go to state 69
    type                           shift and go to state 5
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 67

    (5) main_body -> ENDMAIN .

    $end            reduce using rule 5 (main_body -> ENDMAIN .)


state 68

    (72) stm -> ID_COLON . ustm
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    ID_LS           shift and go to state 136
    ID              shift and go to state 119
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    ustm                           shift and go to state 163
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 69

    (73) stm -> ustm .

    ENDMAIN         reduce using rule 73 (stm -> ustm .)
    ID_COLON        reduce using rule 73 (stm -> ustm .)
    PERMANENT       reduce using rule 73 (stm -> ustm .)
    CONST           reduce using rule 73 (stm -> ustm .)
    BOOL            reduce using rule 73 (stm -> ustm .)
    CHAR            reduce using rule 73 (stm -> ustm .)
    STRING          reduce using rule 73 (stm -> ustm .)
    INT             reduce using rule 73 (stm -> ustm .)
    FLOAT           reduce using rule 73 (stm -> ustm .)
    ID              reduce using rule 73 (stm -> ustm .)
    BOOL_LS         reduce using rule 73 (stm -> ustm .)
    CHAR_LS         reduce using rule 73 (stm -> ustm .)
    STRING_LS       reduce using rule 73 (stm -> ustm .)
    INT_LS          reduce using rule 73 (stm -> ustm .)
    FLOAT_LS        reduce using rule 73 (stm -> ustm .)
    ID_LS           reduce using rule 73 (stm -> ustm .)
    FILE            reduce using rule 73 (stm -> ustm .)
    SEMI            reduce using rule 73 (stm -> ustm .)
    RETURN          reduce using rule 73 (stm -> ustm .)
    PRETURN         reduce using rule 73 (stm -> ustm .)
    IF              reduce using rule 73 (stm -> ustm .)
    WHILE           reduce using rule 73 (stm -> ustm .)
    FOR             reduce using rule 73 (stm -> ustm .)
    GOTO            reduce using rule 73 (stm -> ustm .)
    BREAK           reduce using rule 73 (stm -> ustm .)
    CONTINUE        reduce using rule 73 (stm -> ustm .)
    GUARD           reduce using rule 73 (stm -> ustm .)
    RAISE           reduce using rule 73 (stm -> ustm .)
    TERMINATE       reduce using rule 73 (stm -> ustm .)
    ID_LP           reduce using rule 73 (stm -> ustm .)
    BOOL_LP         reduce using rule 73 (stm -> ustm .)
    CHAR_LP         reduce using rule 73 (stm -> ustm .)
    STRING_LP       reduce using rule 73 (stm -> ustm .)
    INT_LP          reduce using rule 73 (stm -> ustm .)
    FLOAT_LP        reduce using rule 73 (stm -> ustm .)
    FIN_DOT         reduce using rule 73 (stm -> ustm .)
    FOUT_DOT        reduce using rule 73 (stm -> ustm .)
    IDOF_LP         reduce using rule 73 (stm -> ustm .)
    SIZEOF_LP       reduce using rule 73 (stm -> ustm .)
    TYPEOF_LP       reduce using rule 73 (stm -> ustm .)
    PARENT_DOT      reduce using rule 73 (stm -> ustm .)
    ID_DOT          reduce using rule 73 (stm -> ustm .)
    ENDMETHOD       reduce using rule 73 (stm -> ustm .)
    ENDWHILE        reduce using rule 73 (stm -> ustm .)
    CATCH           reduce using rule 73 (stm -> ustm .)
    ENDIF           reduce using rule 73 (stm -> ustm .)
    ELSE            reduce using rule 73 (stm -> ustm .)
    ENDFOR          reduce using rule 73 (stm -> ustm .)
    ENDCATCH        reduce using rule 73 (stm -> ustm .)
    STRING_LIT      reduce using rule 73 (stm -> ustm .)


state 70

    (109) ustm -> null_stm .

    ENDMAIN         reduce using rule 109 (ustm -> null_stm .)
    ID_COLON        reduce using rule 109 (ustm -> null_stm .)
    PERMANENT       reduce using rule 109 (ustm -> null_stm .)
    CONST           reduce using rule 109 (ustm -> null_stm .)
    BOOL            reduce using rule 109 (ustm -> null_stm .)
    CHAR            reduce using rule 109 (ustm -> null_stm .)
    STRING          reduce using rule 109 (ustm -> null_stm .)
    INT             reduce using rule 109 (ustm -> null_stm .)
    FLOAT           reduce using rule 109 (ustm -> null_stm .)
    ID              reduce using rule 109 (ustm -> null_stm .)
    BOOL_LS         reduce using rule 109 (ustm -> null_stm .)
    CHAR_LS         reduce using rule 109 (ustm -> null_stm .)
    STRING_LS       reduce using rule 109 (ustm -> null_stm .)
    INT_LS          reduce using rule 109 (ustm -> null_stm .)
    FLOAT_LS        reduce using rule 109 (ustm -> null_stm .)
    ID_LS           reduce using rule 109 (ustm -> null_stm .)
    FILE            reduce using rule 109 (ustm -> null_stm .)
    SEMI            reduce using rule 109 (ustm -> null_stm .)
    RETURN          reduce using rule 109 (ustm -> null_stm .)
    PRETURN         reduce using rule 109 (ustm -> null_stm .)
    IF              reduce using rule 109 (ustm -> null_stm .)
    WHILE           reduce using rule 109 (ustm -> null_stm .)
    FOR             reduce using rule 109 (ustm -> null_stm .)
    GOTO            reduce using rule 109 (ustm -> null_stm .)
    BREAK           reduce using rule 109 (ustm -> null_stm .)
    CONTINUE        reduce using rule 109 (ustm -> null_stm .)
    GUARD           reduce using rule 109 (ustm -> null_stm .)
    RAISE           reduce using rule 109 (ustm -> null_stm .)
    TERMINATE       reduce using rule 109 (ustm -> null_stm .)
    ID_LP           reduce using rule 109 (ustm -> null_stm .)
    BOOL_LP         reduce using rule 109 (ustm -> null_stm .)
    CHAR_LP         reduce using rule 109 (ustm -> null_stm .)
    STRING_LP       reduce using rule 109 (ustm -> null_stm .)
    INT_LP          reduce using rule 109 (ustm -> null_stm .)
    FLOAT_LP        reduce using rule 109 (ustm -> null_stm .)
    FIN_DOT         reduce using rule 109 (ustm -> null_stm .)
    FOUT_DOT        reduce using rule 109 (ustm -> null_stm .)
    IDOF_LP         reduce using rule 109 (ustm -> null_stm .)
    SIZEOF_LP       reduce using rule 109 (ustm -> null_stm .)
    TYPEOF_LP       reduce using rule 109 (ustm -> null_stm .)
    PARENT_DOT      reduce using rule 109 (ustm -> null_stm .)
    ID_DOT          reduce using rule 109 (ustm -> null_stm .)
    ENDMETHOD       reduce using rule 109 (ustm -> null_stm .)
    ENDWHILE        reduce using rule 109 (ustm -> null_stm .)
    CATCH           reduce using rule 109 (ustm -> null_stm .)
    ENDIF           reduce using rule 109 (ustm -> null_stm .)
    ELSE            reduce using rule 109 (ustm -> null_stm .)
    ENDFOR          reduce using rule 109 (ustm -> null_stm .)
    ENDCATCH        reduce using rule 109 (ustm -> null_stm .)
    STRING_LIT      reduce using rule 109 (ustm -> null_stm .)


state 71

    (110) ustm -> assig_stm .

    ENDMAIN         reduce using rule 110 (ustm -> assig_stm .)
    ID_COLON        reduce using rule 110 (ustm -> assig_stm .)
    PERMANENT       reduce using rule 110 (ustm -> assig_stm .)
    CONST           reduce using rule 110 (ustm -> assig_stm .)
    BOOL            reduce using rule 110 (ustm -> assig_stm .)
    CHAR            reduce using rule 110 (ustm -> assig_stm .)
    STRING          reduce using rule 110 (ustm -> assig_stm .)
    INT             reduce using rule 110 (ustm -> assig_stm .)
    FLOAT           reduce using rule 110 (ustm -> assig_stm .)
    ID              reduce using rule 110 (ustm -> assig_stm .)
    BOOL_LS         reduce using rule 110 (ustm -> assig_stm .)
    CHAR_LS         reduce using rule 110 (ustm -> assig_stm .)
    STRING_LS       reduce using rule 110 (ustm -> assig_stm .)
    INT_LS          reduce using rule 110 (ustm -> assig_stm .)
    FLOAT_LS        reduce using rule 110 (ustm -> assig_stm .)
    ID_LS           reduce using rule 110 (ustm -> assig_stm .)
    FILE            reduce using rule 110 (ustm -> assig_stm .)
    SEMI            reduce using rule 110 (ustm -> assig_stm .)
    RETURN          reduce using rule 110 (ustm -> assig_stm .)
    PRETURN         reduce using rule 110 (ustm -> assig_stm .)
    IF              reduce using rule 110 (ustm -> assig_stm .)
    WHILE           reduce using rule 110 (ustm -> assig_stm .)
    FOR             reduce using rule 110 (ustm -> assig_stm .)
    GOTO            reduce using rule 110 (ustm -> assig_stm .)
    BREAK           reduce using rule 110 (ustm -> assig_stm .)
    CONTINUE        reduce using rule 110 (ustm -> assig_stm .)
    GUARD           reduce using rule 110 (ustm -> assig_stm .)
    RAISE           reduce using rule 110 (ustm -> assig_stm .)
    TERMINATE       reduce using rule 110 (ustm -> assig_stm .)
    ID_LP           reduce using rule 110 (ustm -> assig_stm .)
    BOOL_LP         reduce using rule 110 (ustm -> assig_stm .)
    CHAR_LP         reduce using rule 110 (ustm -> assig_stm .)
    STRING_LP       reduce using rule 110 (ustm -> assig_stm .)
    INT_LP          reduce using rule 110 (ustm -> assig_stm .)
    FLOAT_LP        reduce using rule 110 (ustm -> assig_stm .)
    FIN_DOT         reduce using rule 110 (ustm -> assig_stm .)
    FOUT_DOT        reduce using rule 110 (ustm -> assig_stm .)
    IDOF_LP         reduce using rule 110 (ustm -> assig_stm .)
    SIZEOF_LP       reduce using rule 110 (ustm -> assig_stm .)
    TYPEOF_LP       reduce using rule 110 (ustm -> assig_stm .)
    PARENT_DOT      reduce using rule 110 (ustm -> assig_stm .)
    ID_DOT          reduce using rule 110 (ustm -> assig_stm .)
    ENDMETHOD       reduce using rule 110 (ustm -> assig_stm .)
    ENDWHILE        reduce using rule 110 (ustm -> assig_stm .)
    CATCH           reduce using rule 110 (ustm -> assig_stm .)
    ENDIF           reduce using rule 110 (ustm -> assig_stm .)
    ELSE            reduce using rule 110 (ustm -> assig_stm .)
    ENDFOR          reduce using rule 110 (ustm -> assig_stm .)
    ENDCATCH        reduce using rule 110 (ustm -> assig_stm .)
    STRING_LIT      reduce using rule 110 (ustm -> assig_stm .)


state 72

    (111) ustm -> passig_stm .

    ENDMAIN         reduce using rule 111 (ustm -> passig_stm .)
    ID_COLON        reduce using rule 111 (ustm -> passig_stm .)
    PERMANENT       reduce using rule 111 (ustm -> passig_stm .)
    CONST           reduce using rule 111 (ustm -> passig_stm .)
    BOOL            reduce using rule 111 (ustm -> passig_stm .)
    CHAR            reduce using rule 111 (ustm -> passig_stm .)
    STRING          reduce using rule 111 (ustm -> passig_stm .)
    INT             reduce using rule 111 (ustm -> passig_stm .)
    FLOAT           reduce using rule 111 (ustm -> passig_stm .)
    ID              reduce using rule 111 (ustm -> passig_stm .)
    BOOL_LS         reduce using rule 111 (ustm -> passig_stm .)
    CHAR_LS         reduce using rule 111 (ustm -> passig_stm .)
    STRING_LS       reduce using rule 111 (ustm -> passig_stm .)
    INT_LS          reduce using rule 111 (ustm -> passig_stm .)
    FLOAT_LS        reduce using rule 111 (ustm -> passig_stm .)
    ID_LS           reduce using rule 111 (ustm -> passig_stm .)
    FILE            reduce using rule 111 (ustm -> passig_stm .)
    SEMI            reduce using rule 111 (ustm -> passig_stm .)
    RETURN          reduce using rule 111 (ustm -> passig_stm .)
    PRETURN         reduce using rule 111 (ustm -> passig_stm .)
    IF              reduce using rule 111 (ustm -> passig_stm .)
    WHILE           reduce using rule 111 (ustm -> passig_stm .)
    FOR             reduce using rule 111 (ustm -> passig_stm .)
    GOTO            reduce using rule 111 (ustm -> passig_stm .)
    BREAK           reduce using rule 111 (ustm -> passig_stm .)
    CONTINUE        reduce using rule 111 (ustm -> passig_stm .)
    GUARD           reduce using rule 111 (ustm -> passig_stm .)
    RAISE           reduce using rule 111 (ustm -> passig_stm .)
    TERMINATE       reduce using rule 111 (ustm -> passig_stm .)
    ID_LP           reduce using rule 111 (ustm -> passig_stm .)
    BOOL_LP         reduce using rule 111 (ustm -> passig_stm .)
    CHAR_LP         reduce using rule 111 (ustm -> passig_stm .)
    STRING_LP       reduce using rule 111 (ustm -> passig_stm .)
    INT_LP          reduce using rule 111 (ustm -> passig_stm .)
    FLOAT_LP        reduce using rule 111 (ustm -> passig_stm .)
    FIN_DOT         reduce using rule 111 (ustm -> passig_stm .)
    FOUT_DOT        reduce using rule 111 (ustm -> passig_stm .)
    IDOF_LP         reduce using rule 111 (ustm -> passig_stm .)
    SIZEOF_LP       reduce using rule 111 (ustm -> passig_stm .)
    TYPEOF_LP       reduce using rule 111 (ustm -> passig_stm .)
    PARENT_DOT      reduce using rule 111 (ustm -> passig_stm .)
    ID_DOT          reduce using rule 111 (ustm -> passig_stm .)
    ENDMETHOD       reduce using rule 111 (ustm -> passig_stm .)
    ENDWHILE        reduce using rule 111 (ustm -> passig_stm .)
    CATCH           reduce using rule 111 (ustm -> passig_stm .)
    ENDIF           reduce using rule 111 (ustm -> passig_stm .)
    ELSE            reduce using rule 111 (ustm -> passig_stm .)
    ENDFOR          reduce using rule 111 (ustm -> passig_stm .)
    ENDCATCH        reduce using rule 111 (ustm -> passig_stm .)
    STRING_LIT      reduce using rule 111 (ustm -> passig_stm .)


state 73

    (112) ustm -> return_stm .

    ENDMAIN         reduce using rule 112 (ustm -> return_stm .)
    ID_COLON        reduce using rule 112 (ustm -> return_stm .)
    PERMANENT       reduce using rule 112 (ustm -> return_stm .)
    CONST           reduce using rule 112 (ustm -> return_stm .)
    BOOL            reduce using rule 112 (ustm -> return_stm .)
    CHAR            reduce using rule 112 (ustm -> return_stm .)
    STRING          reduce using rule 112 (ustm -> return_stm .)
    INT             reduce using rule 112 (ustm -> return_stm .)
    FLOAT           reduce using rule 112 (ustm -> return_stm .)
    ID              reduce using rule 112 (ustm -> return_stm .)
    BOOL_LS         reduce using rule 112 (ustm -> return_stm .)
    CHAR_LS         reduce using rule 112 (ustm -> return_stm .)
    STRING_LS       reduce using rule 112 (ustm -> return_stm .)
    INT_LS          reduce using rule 112 (ustm -> return_stm .)
    FLOAT_LS        reduce using rule 112 (ustm -> return_stm .)
    ID_LS           reduce using rule 112 (ustm -> return_stm .)
    FILE            reduce using rule 112 (ustm -> return_stm .)
    SEMI            reduce using rule 112 (ustm -> return_stm .)
    RETURN          reduce using rule 112 (ustm -> return_stm .)
    PRETURN         reduce using rule 112 (ustm -> return_stm .)
    IF              reduce using rule 112 (ustm -> return_stm .)
    WHILE           reduce using rule 112 (ustm -> return_stm .)
    FOR             reduce using rule 112 (ustm -> return_stm .)
    GOTO            reduce using rule 112 (ustm -> return_stm .)
    BREAK           reduce using rule 112 (ustm -> return_stm .)
    CONTINUE        reduce using rule 112 (ustm -> return_stm .)
    GUARD           reduce using rule 112 (ustm -> return_stm .)
    RAISE           reduce using rule 112 (ustm -> return_stm .)
    TERMINATE       reduce using rule 112 (ustm -> return_stm .)
    ID_LP           reduce using rule 112 (ustm -> return_stm .)
    BOOL_LP         reduce using rule 112 (ustm -> return_stm .)
    CHAR_LP         reduce using rule 112 (ustm -> return_stm .)
    STRING_LP       reduce using rule 112 (ustm -> return_stm .)
    INT_LP          reduce using rule 112 (ustm -> return_stm .)
    FLOAT_LP        reduce using rule 112 (ustm -> return_stm .)
    FIN_DOT         reduce using rule 112 (ustm -> return_stm .)
    FOUT_DOT        reduce using rule 112 (ustm -> return_stm .)
    IDOF_LP         reduce using rule 112 (ustm -> return_stm .)
    SIZEOF_LP       reduce using rule 112 (ustm -> return_stm .)
    TYPEOF_LP       reduce using rule 112 (ustm -> return_stm .)
    PARENT_DOT      reduce using rule 112 (ustm -> return_stm .)
    ID_DOT          reduce using rule 112 (ustm -> return_stm .)
    ENDMETHOD       reduce using rule 112 (ustm -> return_stm .)
    ENDWHILE        reduce using rule 112 (ustm -> return_stm .)
    CATCH           reduce using rule 112 (ustm -> return_stm .)
    ENDIF           reduce using rule 112 (ustm -> return_stm .)
    ELSE            reduce using rule 112 (ustm -> return_stm .)
    ENDFOR          reduce using rule 112 (ustm -> return_stm .)
    ENDCATCH        reduce using rule 112 (ustm -> return_stm .)
    STRING_LIT      reduce using rule 112 (ustm -> return_stm .)


state 74

    (113) ustm -> preturn_stm .

    ENDMAIN         reduce using rule 113 (ustm -> preturn_stm .)
    ID_COLON        reduce using rule 113 (ustm -> preturn_stm .)
    PERMANENT       reduce using rule 113 (ustm -> preturn_stm .)
    CONST           reduce using rule 113 (ustm -> preturn_stm .)
    BOOL            reduce using rule 113 (ustm -> preturn_stm .)
    CHAR            reduce using rule 113 (ustm -> preturn_stm .)
    STRING          reduce using rule 113 (ustm -> preturn_stm .)
    INT             reduce using rule 113 (ustm -> preturn_stm .)
    FLOAT           reduce using rule 113 (ustm -> preturn_stm .)
    ID              reduce using rule 113 (ustm -> preturn_stm .)
    BOOL_LS         reduce using rule 113 (ustm -> preturn_stm .)
    CHAR_LS         reduce using rule 113 (ustm -> preturn_stm .)
    STRING_LS       reduce using rule 113 (ustm -> preturn_stm .)
    INT_LS          reduce using rule 113 (ustm -> preturn_stm .)
    FLOAT_LS        reduce using rule 113 (ustm -> preturn_stm .)
    ID_LS           reduce using rule 113 (ustm -> preturn_stm .)
    FILE            reduce using rule 113 (ustm -> preturn_stm .)
    SEMI            reduce using rule 113 (ustm -> preturn_stm .)
    RETURN          reduce using rule 113 (ustm -> preturn_stm .)
    PRETURN         reduce using rule 113 (ustm -> preturn_stm .)
    IF              reduce using rule 113 (ustm -> preturn_stm .)
    WHILE           reduce using rule 113 (ustm -> preturn_stm .)
    FOR             reduce using rule 113 (ustm -> preturn_stm .)
    GOTO            reduce using rule 113 (ustm -> preturn_stm .)
    BREAK           reduce using rule 113 (ustm -> preturn_stm .)
    CONTINUE        reduce using rule 113 (ustm -> preturn_stm .)
    GUARD           reduce using rule 113 (ustm -> preturn_stm .)
    RAISE           reduce using rule 113 (ustm -> preturn_stm .)
    TERMINATE       reduce using rule 113 (ustm -> preturn_stm .)
    ID_LP           reduce using rule 113 (ustm -> preturn_stm .)
    BOOL_LP         reduce using rule 113 (ustm -> preturn_stm .)
    CHAR_LP         reduce using rule 113 (ustm -> preturn_stm .)
    STRING_LP       reduce using rule 113 (ustm -> preturn_stm .)
    INT_LP          reduce using rule 113 (ustm -> preturn_stm .)
    FLOAT_LP        reduce using rule 113 (ustm -> preturn_stm .)
    FIN_DOT         reduce using rule 113 (ustm -> preturn_stm .)
    FOUT_DOT        reduce using rule 113 (ustm -> preturn_stm .)
    IDOF_LP         reduce using rule 113 (ustm -> preturn_stm .)
    SIZEOF_LP       reduce using rule 113 (ustm -> preturn_stm .)
    TYPEOF_LP       reduce using rule 113 (ustm -> preturn_stm .)
    PARENT_DOT      reduce using rule 113 (ustm -> preturn_stm .)
    ID_DOT          reduce using rule 113 (ustm -> preturn_stm .)
    ENDMETHOD       reduce using rule 113 (ustm -> preturn_stm .)
    ENDWHILE        reduce using rule 113 (ustm -> preturn_stm .)
    CATCH           reduce using rule 113 (ustm -> preturn_stm .)
    ENDIF           reduce using rule 113 (ustm -> preturn_stm .)
    ELSE            reduce using rule 113 (ustm -> preturn_stm .)
    ENDFOR          reduce using rule 113 (ustm -> preturn_stm .)
    ENDCATCH        reduce using rule 113 (ustm -> preturn_stm .)
    STRING_LIT      reduce using rule 113 (ustm -> preturn_stm .)


state 75

    (114) ustm -> call_stm .

    ENDMAIN         reduce using rule 114 (ustm -> call_stm .)
    ID_COLON        reduce using rule 114 (ustm -> call_stm .)
    PERMANENT       reduce using rule 114 (ustm -> call_stm .)
    CONST           reduce using rule 114 (ustm -> call_stm .)
    BOOL            reduce using rule 114 (ustm -> call_stm .)
    CHAR            reduce using rule 114 (ustm -> call_stm .)
    STRING          reduce using rule 114 (ustm -> call_stm .)
    INT             reduce using rule 114 (ustm -> call_stm .)
    FLOAT           reduce using rule 114 (ustm -> call_stm .)
    ID              reduce using rule 114 (ustm -> call_stm .)
    BOOL_LS         reduce using rule 114 (ustm -> call_stm .)
    CHAR_LS         reduce using rule 114 (ustm -> call_stm .)
    STRING_LS       reduce using rule 114 (ustm -> call_stm .)
    INT_LS          reduce using rule 114 (ustm -> call_stm .)
    FLOAT_LS        reduce using rule 114 (ustm -> call_stm .)
    ID_LS           reduce using rule 114 (ustm -> call_stm .)
    FILE            reduce using rule 114 (ustm -> call_stm .)
    SEMI            reduce using rule 114 (ustm -> call_stm .)
    RETURN          reduce using rule 114 (ustm -> call_stm .)
    PRETURN         reduce using rule 114 (ustm -> call_stm .)
    IF              reduce using rule 114 (ustm -> call_stm .)
    WHILE           reduce using rule 114 (ustm -> call_stm .)
    FOR             reduce using rule 114 (ustm -> call_stm .)
    GOTO            reduce using rule 114 (ustm -> call_stm .)
    BREAK           reduce using rule 114 (ustm -> call_stm .)
    CONTINUE        reduce using rule 114 (ustm -> call_stm .)
    GUARD           reduce using rule 114 (ustm -> call_stm .)
    RAISE           reduce using rule 114 (ustm -> call_stm .)
    TERMINATE       reduce using rule 114 (ustm -> call_stm .)
    ID_LP           reduce using rule 114 (ustm -> call_stm .)
    BOOL_LP         reduce using rule 114 (ustm -> call_stm .)
    CHAR_LP         reduce using rule 114 (ustm -> call_stm .)
    STRING_LP       reduce using rule 114 (ustm -> call_stm .)
    INT_LP          reduce using rule 114 (ustm -> call_stm .)
    FLOAT_LP        reduce using rule 114 (ustm -> call_stm .)
    FIN_DOT         reduce using rule 114 (ustm -> call_stm .)
    FOUT_DOT        reduce using rule 114 (ustm -> call_stm .)
    IDOF_LP         reduce using rule 114 (ustm -> call_stm .)
    SIZEOF_LP       reduce using rule 114 (ustm -> call_stm .)
    TYPEOF_LP       reduce using rule 114 (ustm -> call_stm .)
    PARENT_DOT      reduce using rule 114 (ustm -> call_stm .)
    ID_DOT          reduce using rule 114 (ustm -> call_stm .)
    ENDMETHOD       reduce using rule 114 (ustm -> call_stm .)
    ENDWHILE        reduce using rule 114 (ustm -> call_stm .)
    CATCH           reduce using rule 114 (ustm -> call_stm .)
    ENDIF           reduce using rule 114 (ustm -> call_stm .)
    ELSE            reduce using rule 114 (ustm -> call_stm .)
    ENDFOR          reduce using rule 114 (ustm -> call_stm .)
    ENDCATCH        reduce using rule 114 (ustm -> call_stm .)
    STRING_LIT      reduce using rule 114 (ustm -> call_stm .)


state 76

    (115) ustm -> if_stm .

    ENDMAIN         reduce using rule 115 (ustm -> if_stm .)
    ID_COLON        reduce using rule 115 (ustm -> if_stm .)
    PERMANENT       reduce using rule 115 (ustm -> if_stm .)
    CONST           reduce using rule 115 (ustm -> if_stm .)
    BOOL            reduce using rule 115 (ustm -> if_stm .)
    CHAR            reduce using rule 115 (ustm -> if_stm .)
    STRING          reduce using rule 115 (ustm -> if_stm .)
    INT             reduce using rule 115 (ustm -> if_stm .)
    FLOAT           reduce using rule 115 (ustm -> if_stm .)
    ID              reduce using rule 115 (ustm -> if_stm .)
    BOOL_LS         reduce using rule 115 (ustm -> if_stm .)
    CHAR_LS         reduce using rule 115 (ustm -> if_stm .)
    STRING_LS       reduce using rule 115 (ustm -> if_stm .)
    INT_LS          reduce using rule 115 (ustm -> if_stm .)
    FLOAT_LS        reduce using rule 115 (ustm -> if_stm .)
    ID_LS           reduce using rule 115 (ustm -> if_stm .)
    FILE            reduce using rule 115 (ustm -> if_stm .)
    SEMI            reduce using rule 115 (ustm -> if_stm .)
    RETURN          reduce using rule 115 (ustm -> if_stm .)
    PRETURN         reduce using rule 115 (ustm -> if_stm .)
    IF              reduce using rule 115 (ustm -> if_stm .)
    WHILE           reduce using rule 115 (ustm -> if_stm .)
    FOR             reduce using rule 115 (ustm -> if_stm .)
    GOTO            reduce using rule 115 (ustm -> if_stm .)
    BREAK           reduce using rule 115 (ustm -> if_stm .)
    CONTINUE        reduce using rule 115 (ustm -> if_stm .)
    GUARD           reduce using rule 115 (ustm -> if_stm .)
    RAISE           reduce using rule 115 (ustm -> if_stm .)
    TERMINATE       reduce using rule 115 (ustm -> if_stm .)
    ID_LP           reduce using rule 115 (ustm -> if_stm .)
    BOOL_LP         reduce using rule 115 (ustm -> if_stm .)
    CHAR_LP         reduce using rule 115 (ustm -> if_stm .)
    STRING_LP       reduce using rule 115 (ustm -> if_stm .)
    INT_LP          reduce using rule 115 (ustm -> if_stm .)
    FLOAT_LP        reduce using rule 115 (ustm -> if_stm .)
    FIN_DOT         reduce using rule 115 (ustm -> if_stm .)
    FOUT_DOT        reduce using rule 115 (ustm -> if_stm .)
    IDOF_LP         reduce using rule 115 (ustm -> if_stm .)
    SIZEOF_LP       reduce using rule 115 (ustm -> if_stm .)
    TYPEOF_LP       reduce using rule 115 (ustm -> if_stm .)
    PARENT_DOT      reduce using rule 115 (ustm -> if_stm .)
    ID_DOT          reduce using rule 115 (ustm -> if_stm .)
    ENDMETHOD       reduce using rule 115 (ustm -> if_stm .)
    ENDWHILE        reduce using rule 115 (ustm -> if_stm .)
    CATCH           reduce using rule 115 (ustm -> if_stm .)
    ENDIF           reduce using rule 115 (ustm -> if_stm .)
    ELSE            reduce using rule 115 (ustm -> if_stm .)
    ENDFOR          reduce using rule 115 (ustm -> if_stm .)
    ENDCATCH        reduce using rule 115 (ustm -> if_stm .)
    STRING_LIT      reduce using rule 115 (ustm -> if_stm .)


state 77

    (116) ustm -> while_stm .

    ENDMAIN         reduce using rule 116 (ustm -> while_stm .)
    ID_COLON        reduce using rule 116 (ustm -> while_stm .)
    PERMANENT       reduce using rule 116 (ustm -> while_stm .)
    CONST           reduce using rule 116 (ustm -> while_stm .)
    BOOL            reduce using rule 116 (ustm -> while_stm .)
    CHAR            reduce using rule 116 (ustm -> while_stm .)
    STRING          reduce using rule 116 (ustm -> while_stm .)
    INT             reduce using rule 116 (ustm -> while_stm .)
    FLOAT           reduce using rule 116 (ustm -> while_stm .)
    ID              reduce using rule 116 (ustm -> while_stm .)
    BOOL_LS         reduce using rule 116 (ustm -> while_stm .)
    CHAR_LS         reduce using rule 116 (ustm -> while_stm .)
    STRING_LS       reduce using rule 116 (ustm -> while_stm .)
    INT_LS          reduce using rule 116 (ustm -> while_stm .)
    FLOAT_LS        reduce using rule 116 (ustm -> while_stm .)
    ID_LS           reduce using rule 116 (ustm -> while_stm .)
    FILE            reduce using rule 116 (ustm -> while_stm .)
    SEMI            reduce using rule 116 (ustm -> while_stm .)
    RETURN          reduce using rule 116 (ustm -> while_stm .)
    PRETURN         reduce using rule 116 (ustm -> while_stm .)
    IF              reduce using rule 116 (ustm -> while_stm .)
    WHILE           reduce using rule 116 (ustm -> while_stm .)
    FOR             reduce using rule 116 (ustm -> while_stm .)
    GOTO            reduce using rule 116 (ustm -> while_stm .)
    BREAK           reduce using rule 116 (ustm -> while_stm .)
    CONTINUE        reduce using rule 116 (ustm -> while_stm .)
    GUARD           reduce using rule 116 (ustm -> while_stm .)
    RAISE           reduce using rule 116 (ustm -> while_stm .)
    TERMINATE       reduce using rule 116 (ustm -> while_stm .)
    ID_LP           reduce using rule 116 (ustm -> while_stm .)
    BOOL_LP         reduce using rule 116 (ustm -> while_stm .)
    CHAR_LP         reduce using rule 116 (ustm -> while_stm .)
    STRING_LP       reduce using rule 116 (ustm -> while_stm .)
    INT_LP          reduce using rule 116 (ustm -> while_stm .)
    FLOAT_LP        reduce using rule 116 (ustm -> while_stm .)
    FIN_DOT         reduce using rule 116 (ustm -> while_stm .)
    FOUT_DOT        reduce using rule 116 (ustm -> while_stm .)
    IDOF_LP         reduce using rule 116 (ustm -> while_stm .)
    SIZEOF_LP       reduce using rule 116 (ustm -> while_stm .)
    TYPEOF_LP       reduce using rule 116 (ustm -> while_stm .)
    PARENT_DOT      reduce using rule 116 (ustm -> while_stm .)
    ID_DOT          reduce using rule 116 (ustm -> while_stm .)
    ENDMETHOD       reduce using rule 116 (ustm -> while_stm .)
    ENDWHILE        reduce using rule 116 (ustm -> while_stm .)
    CATCH           reduce using rule 116 (ustm -> while_stm .)
    ENDIF           reduce using rule 116 (ustm -> while_stm .)
    ELSE            reduce using rule 116 (ustm -> while_stm .)
    ENDFOR          reduce using rule 116 (ustm -> while_stm .)
    ENDCATCH        reduce using rule 116 (ustm -> while_stm .)
    STRING_LIT      reduce using rule 116 (ustm -> while_stm .)


state 78

    (117) ustm -> for_stm .

    ENDMAIN         reduce using rule 117 (ustm -> for_stm .)
    ID_COLON        reduce using rule 117 (ustm -> for_stm .)
    PERMANENT       reduce using rule 117 (ustm -> for_stm .)
    CONST           reduce using rule 117 (ustm -> for_stm .)
    BOOL            reduce using rule 117 (ustm -> for_stm .)
    CHAR            reduce using rule 117 (ustm -> for_stm .)
    STRING          reduce using rule 117 (ustm -> for_stm .)
    INT             reduce using rule 117 (ustm -> for_stm .)
    FLOAT           reduce using rule 117 (ustm -> for_stm .)
    ID              reduce using rule 117 (ustm -> for_stm .)
    BOOL_LS         reduce using rule 117 (ustm -> for_stm .)
    CHAR_LS         reduce using rule 117 (ustm -> for_stm .)
    STRING_LS       reduce using rule 117 (ustm -> for_stm .)
    INT_LS          reduce using rule 117 (ustm -> for_stm .)
    FLOAT_LS        reduce using rule 117 (ustm -> for_stm .)
    ID_LS           reduce using rule 117 (ustm -> for_stm .)
    FILE            reduce using rule 117 (ustm -> for_stm .)
    SEMI            reduce using rule 117 (ustm -> for_stm .)
    RETURN          reduce using rule 117 (ustm -> for_stm .)
    PRETURN         reduce using rule 117 (ustm -> for_stm .)
    IF              reduce using rule 117 (ustm -> for_stm .)
    WHILE           reduce using rule 117 (ustm -> for_stm .)
    FOR             reduce using rule 117 (ustm -> for_stm .)
    GOTO            reduce using rule 117 (ustm -> for_stm .)
    BREAK           reduce using rule 117 (ustm -> for_stm .)
    CONTINUE        reduce using rule 117 (ustm -> for_stm .)
    GUARD           reduce using rule 117 (ustm -> for_stm .)
    RAISE           reduce using rule 117 (ustm -> for_stm .)
    TERMINATE       reduce using rule 117 (ustm -> for_stm .)
    ID_LP           reduce using rule 117 (ustm -> for_stm .)
    BOOL_LP         reduce using rule 117 (ustm -> for_stm .)
    CHAR_LP         reduce using rule 117 (ustm -> for_stm .)
    STRING_LP       reduce using rule 117 (ustm -> for_stm .)
    INT_LP          reduce using rule 117 (ustm -> for_stm .)
    FLOAT_LP        reduce using rule 117 (ustm -> for_stm .)
    FIN_DOT         reduce using rule 117 (ustm -> for_stm .)
    FOUT_DOT        reduce using rule 117 (ustm -> for_stm .)
    IDOF_LP         reduce using rule 117 (ustm -> for_stm .)
    SIZEOF_LP       reduce using rule 117 (ustm -> for_stm .)
    TYPEOF_LP       reduce using rule 117 (ustm -> for_stm .)
    PARENT_DOT      reduce using rule 117 (ustm -> for_stm .)
    ID_DOT          reduce using rule 117 (ustm -> for_stm .)
    ENDMETHOD       reduce using rule 117 (ustm -> for_stm .)
    ENDWHILE        reduce using rule 117 (ustm -> for_stm .)
    CATCH           reduce using rule 117 (ustm -> for_stm .)
    ENDIF           reduce using rule 117 (ustm -> for_stm .)
    ELSE            reduce using rule 117 (ustm -> for_stm .)
    ENDFOR          reduce using rule 117 (ustm -> for_stm .)
    ENDCATCH        reduce using rule 117 (ustm -> for_stm .)
    STRING_LIT      reduce using rule 117 (ustm -> for_stm .)


state 79

    (118) ustm -> goto_stm .

    ENDMAIN         reduce using rule 118 (ustm -> goto_stm .)
    ID_COLON        reduce using rule 118 (ustm -> goto_stm .)
    PERMANENT       reduce using rule 118 (ustm -> goto_stm .)
    CONST           reduce using rule 118 (ustm -> goto_stm .)
    BOOL            reduce using rule 118 (ustm -> goto_stm .)
    CHAR            reduce using rule 118 (ustm -> goto_stm .)
    STRING          reduce using rule 118 (ustm -> goto_stm .)
    INT             reduce using rule 118 (ustm -> goto_stm .)
    FLOAT           reduce using rule 118 (ustm -> goto_stm .)
    ID              reduce using rule 118 (ustm -> goto_stm .)
    BOOL_LS         reduce using rule 118 (ustm -> goto_stm .)
    CHAR_LS         reduce using rule 118 (ustm -> goto_stm .)
    STRING_LS       reduce using rule 118 (ustm -> goto_stm .)
    INT_LS          reduce using rule 118 (ustm -> goto_stm .)
    FLOAT_LS        reduce using rule 118 (ustm -> goto_stm .)
    ID_LS           reduce using rule 118 (ustm -> goto_stm .)
    FILE            reduce using rule 118 (ustm -> goto_stm .)
    SEMI            reduce using rule 118 (ustm -> goto_stm .)
    RETURN          reduce using rule 118 (ustm -> goto_stm .)
    PRETURN         reduce using rule 118 (ustm -> goto_stm .)
    IF              reduce using rule 118 (ustm -> goto_stm .)
    WHILE           reduce using rule 118 (ustm -> goto_stm .)
    FOR             reduce using rule 118 (ustm -> goto_stm .)
    GOTO            reduce using rule 118 (ustm -> goto_stm .)
    BREAK           reduce using rule 118 (ustm -> goto_stm .)
    CONTINUE        reduce using rule 118 (ustm -> goto_stm .)
    GUARD           reduce using rule 118 (ustm -> goto_stm .)
    RAISE           reduce using rule 118 (ustm -> goto_stm .)
    TERMINATE       reduce using rule 118 (ustm -> goto_stm .)
    ID_LP           reduce using rule 118 (ustm -> goto_stm .)
    BOOL_LP         reduce using rule 118 (ustm -> goto_stm .)
    CHAR_LP         reduce using rule 118 (ustm -> goto_stm .)
    STRING_LP       reduce using rule 118 (ustm -> goto_stm .)
    INT_LP          reduce using rule 118 (ustm -> goto_stm .)
    FLOAT_LP        reduce using rule 118 (ustm -> goto_stm .)
    FIN_DOT         reduce using rule 118 (ustm -> goto_stm .)
    FOUT_DOT        reduce using rule 118 (ustm -> goto_stm .)
    IDOF_LP         reduce using rule 118 (ustm -> goto_stm .)
    SIZEOF_LP       reduce using rule 118 (ustm -> goto_stm .)
    TYPEOF_LP       reduce using rule 118 (ustm -> goto_stm .)
    PARENT_DOT      reduce using rule 118 (ustm -> goto_stm .)
    ID_DOT          reduce using rule 118 (ustm -> goto_stm .)
    ENDMETHOD       reduce using rule 118 (ustm -> goto_stm .)
    ENDWHILE        reduce using rule 118 (ustm -> goto_stm .)
    CATCH           reduce using rule 118 (ustm -> goto_stm .)
    ENDIF           reduce using rule 118 (ustm -> goto_stm .)
    ELSE            reduce using rule 118 (ustm -> goto_stm .)
    ENDFOR          reduce using rule 118 (ustm -> goto_stm .)
    ENDCATCH        reduce using rule 118 (ustm -> goto_stm .)
    STRING_LIT      reduce using rule 118 (ustm -> goto_stm .)


state 80

    (119) ustm -> break_stm .

    ENDMAIN         reduce using rule 119 (ustm -> break_stm .)
    ID_COLON        reduce using rule 119 (ustm -> break_stm .)
    PERMANENT       reduce using rule 119 (ustm -> break_stm .)
    CONST           reduce using rule 119 (ustm -> break_stm .)
    BOOL            reduce using rule 119 (ustm -> break_stm .)
    CHAR            reduce using rule 119 (ustm -> break_stm .)
    STRING          reduce using rule 119 (ustm -> break_stm .)
    INT             reduce using rule 119 (ustm -> break_stm .)
    FLOAT           reduce using rule 119 (ustm -> break_stm .)
    ID              reduce using rule 119 (ustm -> break_stm .)
    BOOL_LS         reduce using rule 119 (ustm -> break_stm .)
    CHAR_LS         reduce using rule 119 (ustm -> break_stm .)
    STRING_LS       reduce using rule 119 (ustm -> break_stm .)
    INT_LS          reduce using rule 119 (ustm -> break_stm .)
    FLOAT_LS        reduce using rule 119 (ustm -> break_stm .)
    ID_LS           reduce using rule 119 (ustm -> break_stm .)
    FILE            reduce using rule 119 (ustm -> break_stm .)
    SEMI            reduce using rule 119 (ustm -> break_stm .)
    RETURN          reduce using rule 119 (ustm -> break_stm .)
    PRETURN         reduce using rule 119 (ustm -> break_stm .)
    IF              reduce using rule 119 (ustm -> break_stm .)
    WHILE           reduce using rule 119 (ustm -> break_stm .)
    FOR             reduce using rule 119 (ustm -> break_stm .)
    GOTO            reduce using rule 119 (ustm -> break_stm .)
    BREAK           reduce using rule 119 (ustm -> break_stm .)
    CONTINUE        reduce using rule 119 (ustm -> break_stm .)
    GUARD           reduce using rule 119 (ustm -> break_stm .)
    RAISE           reduce using rule 119 (ustm -> break_stm .)
    TERMINATE       reduce using rule 119 (ustm -> break_stm .)
    ID_LP           reduce using rule 119 (ustm -> break_stm .)
    BOOL_LP         reduce using rule 119 (ustm -> break_stm .)
    CHAR_LP         reduce using rule 119 (ustm -> break_stm .)
    STRING_LP       reduce using rule 119 (ustm -> break_stm .)
    INT_LP          reduce using rule 119 (ustm -> break_stm .)
    FLOAT_LP        reduce using rule 119 (ustm -> break_stm .)
    FIN_DOT         reduce using rule 119 (ustm -> break_stm .)
    FOUT_DOT        reduce using rule 119 (ustm -> break_stm .)
    IDOF_LP         reduce using rule 119 (ustm -> break_stm .)
    SIZEOF_LP       reduce using rule 119 (ustm -> break_stm .)
    TYPEOF_LP       reduce using rule 119 (ustm -> break_stm .)
    PARENT_DOT      reduce using rule 119 (ustm -> break_stm .)
    ID_DOT          reduce using rule 119 (ustm -> break_stm .)
    ENDMETHOD       reduce using rule 119 (ustm -> break_stm .)
    ENDWHILE        reduce using rule 119 (ustm -> break_stm .)
    CATCH           reduce using rule 119 (ustm -> break_stm .)
    ENDIF           reduce using rule 119 (ustm -> break_stm .)
    ELSE            reduce using rule 119 (ustm -> break_stm .)
    ENDFOR          reduce using rule 119 (ustm -> break_stm .)
    ENDCATCH        reduce using rule 119 (ustm -> break_stm .)
    STRING_LIT      reduce using rule 119 (ustm -> break_stm .)


state 81

    (120) ustm -> continue_stm .

    ENDMAIN         reduce using rule 120 (ustm -> continue_stm .)
    ID_COLON        reduce using rule 120 (ustm -> continue_stm .)
    PERMANENT       reduce using rule 120 (ustm -> continue_stm .)
    CONST           reduce using rule 120 (ustm -> continue_stm .)
    BOOL            reduce using rule 120 (ustm -> continue_stm .)
    CHAR            reduce using rule 120 (ustm -> continue_stm .)
    STRING          reduce using rule 120 (ustm -> continue_stm .)
    INT             reduce using rule 120 (ustm -> continue_stm .)
    FLOAT           reduce using rule 120 (ustm -> continue_stm .)
    ID              reduce using rule 120 (ustm -> continue_stm .)
    BOOL_LS         reduce using rule 120 (ustm -> continue_stm .)
    CHAR_LS         reduce using rule 120 (ustm -> continue_stm .)
    STRING_LS       reduce using rule 120 (ustm -> continue_stm .)
    INT_LS          reduce using rule 120 (ustm -> continue_stm .)
    FLOAT_LS        reduce using rule 120 (ustm -> continue_stm .)
    ID_LS           reduce using rule 120 (ustm -> continue_stm .)
    FILE            reduce using rule 120 (ustm -> continue_stm .)
    SEMI            reduce using rule 120 (ustm -> continue_stm .)
    RETURN          reduce using rule 120 (ustm -> continue_stm .)
    PRETURN         reduce using rule 120 (ustm -> continue_stm .)
    IF              reduce using rule 120 (ustm -> continue_stm .)
    WHILE           reduce using rule 120 (ustm -> continue_stm .)
    FOR             reduce using rule 120 (ustm -> continue_stm .)
    GOTO            reduce using rule 120 (ustm -> continue_stm .)
    BREAK           reduce using rule 120 (ustm -> continue_stm .)
    CONTINUE        reduce using rule 120 (ustm -> continue_stm .)
    GUARD           reduce using rule 120 (ustm -> continue_stm .)
    RAISE           reduce using rule 120 (ustm -> continue_stm .)
    TERMINATE       reduce using rule 120 (ustm -> continue_stm .)
    ID_LP           reduce using rule 120 (ustm -> continue_stm .)
    BOOL_LP         reduce using rule 120 (ustm -> continue_stm .)
    CHAR_LP         reduce using rule 120 (ustm -> continue_stm .)
    STRING_LP       reduce using rule 120 (ustm -> continue_stm .)
    INT_LP          reduce using rule 120 (ustm -> continue_stm .)
    FLOAT_LP        reduce using rule 120 (ustm -> continue_stm .)
    FIN_DOT         reduce using rule 120 (ustm -> continue_stm .)
    FOUT_DOT        reduce using rule 120 (ustm -> continue_stm .)
    IDOF_LP         reduce using rule 120 (ustm -> continue_stm .)
    SIZEOF_LP       reduce using rule 120 (ustm -> continue_stm .)
    TYPEOF_LP       reduce using rule 120 (ustm -> continue_stm .)
    PARENT_DOT      reduce using rule 120 (ustm -> continue_stm .)
    ID_DOT          reduce using rule 120 (ustm -> continue_stm .)
    ENDMETHOD       reduce using rule 120 (ustm -> continue_stm .)
    ENDWHILE        reduce using rule 120 (ustm -> continue_stm .)
    CATCH           reduce using rule 120 (ustm -> continue_stm .)
    ENDIF           reduce using rule 120 (ustm -> continue_stm .)
    ELSE            reduce using rule 120 (ustm -> continue_stm .)
    ENDFOR          reduce using rule 120 (ustm -> continue_stm .)
    ENDCATCH        reduce using rule 120 (ustm -> continue_stm .)
    STRING_LIT      reduce using rule 120 (ustm -> continue_stm .)


state 82

    (121) ustm -> guard_stm .

    ENDMAIN         reduce using rule 121 (ustm -> guard_stm .)
    ID_COLON        reduce using rule 121 (ustm -> guard_stm .)
    PERMANENT       reduce using rule 121 (ustm -> guard_stm .)
    CONST           reduce using rule 121 (ustm -> guard_stm .)
    BOOL            reduce using rule 121 (ustm -> guard_stm .)
    CHAR            reduce using rule 121 (ustm -> guard_stm .)
    STRING          reduce using rule 121 (ustm -> guard_stm .)
    INT             reduce using rule 121 (ustm -> guard_stm .)
    FLOAT           reduce using rule 121 (ustm -> guard_stm .)
    ID              reduce using rule 121 (ustm -> guard_stm .)
    BOOL_LS         reduce using rule 121 (ustm -> guard_stm .)
    CHAR_LS         reduce using rule 121 (ustm -> guard_stm .)
    STRING_LS       reduce using rule 121 (ustm -> guard_stm .)
    INT_LS          reduce using rule 121 (ustm -> guard_stm .)
    FLOAT_LS        reduce using rule 121 (ustm -> guard_stm .)
    ID_LS           reduce using rule 121 (ustm -> guard_stm .)
    FILE            reduce using rule 121 (ustm -> guard_stm .)
    SEMI            reduce using rule 121 (ustm -> guard_stm .)
    RETURN          reduce using rule 121 (ustm -> guard_stm .)
    PRETURN         reduce using rule 121 (ustm -> guard_stm .)
    IF              reduce using rule 121 (ustm -> guard_stm .)
    WHILE           reduce using rule 121 (ustm -> guard_stm .)
    FOR             reduce using rule 121 (ustm -> guard_stm .)
    GOTO            reduce using rule 121 (ustm -> guard_stm .)
    BREAK           reduce using rule 121 (ustm -> guard_stm .)
    CONTINUE        reduce using rule 121 (ustm -> guard_stm .)
    GUARD           reduce using rule 121 (ustm -> guard_stm .)
    RAISE           reduce using rule 121 (ustm -> guard_stm .)
    TERMINATE       reduce using rule 121 (ustm -> guard_stm .)
    ID_LP           reduce using rule 121 (ustm -> guard_stm .)
    BOOL_LP         reduce using rule 121 (ustm -> guard_stm .)
    CHAR_LP         reduce using rule 121 (ustm -> guard_stm .)
    STRING_LP       reduce using rule 121 (ustm -> guard_stm .)
    INT_LP          reduce using rule 121 (ustm -> guard_stm .)
    FLOAT_LP        reduce using rule 121 (ustm -> guard_stm .)
    FIN_DOT         reduce using rule 121 (ustm -> guard_stm .)
    FOUT_DOT        reduce using rule 121 (ustm -> guard_stm .)
    IDOF_LP         reduce using rule 121 (ustm -> guard_stm .)
    SIZEOF_LP       reduce using rule 121 (ustm -> guard_stm .)
    TYPEOF_LP       reduce using rule 121 (ustm -> guard_stm .)
    PARENT_DOT      reduce using rule 121 (ustm -> guard_stm .)
    ID_DOT          reduce using rule 121 (ustm -> guard_stm .)
    ENDMETHOD       reduce using rule 121 (ustm -> guard_stm .)
    ENDWHILE        reduce using rule 121 (ustm -> guard_stm .)
    CATCH           reduce using rule 121 (ustm -> guard_stm .)
    ENDIF           reduce using rule 121 (ustm -> guard_stm .)
    ELSE            reduce using rule 121 (ustm -> guard_stm .)
    ENDFOR          reduce using rule 121 (ustm -> guard_stm .)
    ENDCATCH        reduce using rule 121 (ustm -> guard_stm .)
    STRING_LIT      reduce using rule 121 (ustm -> guard_stm .)


state 83

    (122) ustm -> raise_stm .

    ENDMAIN         reduce using rule 122 (ustm -> raise_stm .)
    ID_COLON        reduce using rule 122 (ustm -> raise_stm .)
    PERMANENT       reduce using rule 122 (ustm -> raise_stm .)
    CONST           reduce using rule 122 (ustm -> raise_stm .)
    BOOL            reduce using rule 122 (ustm -> raise_stm .)
    CHAR            reduce using rule 122 (ustm -> raise_stm .)
    STRING          reduce using rule 122 (ustm -> raise_stm .)
    INT             reduce using rule 122 (ustm -> raise_stm .)
    FLOAT           reduce using rule 122 (ustm -> raise_stm .)
    ID              reduce using rule 122 (ustm -> raise_stm .)
    BOOL_LS         reduce using rule 122 (ustm -> raise_stm .)
    CHAR_LS         reduce using rule 122 (ustm -> raise_stm .)
    STRING_LS       reduce using rule 122 (ustm -> raise_stm .)
    INT_LS          reduce using rule 122 (ustm -> raise_stm .)
    FLOAT_LS        reduce using rule 122 (ustm -> raise_stm .)
    ID_LS           reduce using rule 122 (ustm -> raise_stm .)
    FILE            reduce using rule 122 (ustm -> raise_stm .)
    SEMI            reduce using rule 122 (ustm -> raise_stm .)
    RETURN          reduce using rule 122 (ustm -> raise_stm .)
    PRETURN         reduce using rule 122 (ustm -> raise_stm .)
    IF              reduce using rule 122 (ustm -> raise_stm .)
    WHILE           reduce using rule 122 (ustm -> raise_stm .)
    FOR             reduce using rule 122 (ustm -> raise_stm .)
    GOTO            reduce using rule 122 (ustm -> raise_stm .)
    BREAK           reduce using rule 122 (ustm -> raise_stm .)
    CONTINUE        reduce using rule 122 (ustm -> raise_stm .)
    GUARD           reduce using rule 122 (ustm -> raise_stm .)
    RAISE           reduce using rule 122 (ustm -> raise_stm .)
    TERMINATE       reduce using rule 122 (ustm -> raise_stm .)
    ID_LP           reduce using rule 122 (ustm -> raise_stm .)
    BOOL_LP         reduce using rule 122 (ustm -> raise_stm .)
    CHAR_LP         reduce using rule 122 (ustm -> raise_stm .)
    STRING_LP       reduce using rule 122 (ustm -> raise_stm .)
    INT_LP          reduce using rule 122 (ustm -> raise_stm .)
    FLOAT_LP        reduce using rule 122 (ustm -> raise_stm .)
    FIN_DOT         reduce using rule 122 (ustm -> raise_stm .)
    FOUT_DOT        reduce using rule 122 (ustm -> raise_stm .)
    IDOF_LP         reduce using rule 122 (ustm -> raise_stm .)
    SIZEOF_LP       reduce using rule 122 (ustm -> raise_stm .)
    TYPEOF_LP       reduce using rule 122 (ustm -> raise_stm .)
    PARENT_DOT      reduce using rule 122 (ustm -> raise_stm .)
    ID_DOT          reduce using rule 122 (ustm -> raise_stm .)
    ENDMETHOD       reduce using rule 122 (ustm -> raise_stm .)
    ENDWHILE        reduce using rule 122 (ustm -> raise_stm .)
    CATCH           reduce using rule 122 (ustm -> raise_stm .)
    ENDIF           reduce using rule 122 (ustm -> raise_stm .)
    ELSE            reduce using rule 122 (ustm -> raise_stm .)
    ENDFOR          reduce using rule 122 (ustm -> raise_stm .)
    ENDCATCH        reduce using rule 122 (ustm -> raise_stm .)
    STRING_LIT      reduce using rule 122 (ustm -> raise_stm .)


state 84

    (123) ustm -> terminate_stm .

    ENDMAIN         reduce using rule 123 (ustm -> terminate_stm .)
    ID_COLON        reduce using rule 123 (ustm -> terminate_stm .)
    PERMANENT       reduce using rule 123 (ustm -> terminate_stm .)
    CONST           reduce using rule 123 (ustm -> terminate_stm .)
    BOOL            reduce using rule 123 (ustm -> terminate_stm .)
    CHAR            reduce using rule 123 (ustm -> terminate_stm .)
    STRING          reduce using rule 123 (ustm -> terminate_stm .)
    INT             reduce using rule 123 (ustm -> terminate_stm .)
    FLOAT           reduce using rule 123 (ustm -> terminate_stm .)
    ID              reduce using rule 123 (ustm -> terminate_stm .)
    BOOL_LS         reduce using rule 123 (ustm -> terminate_stm .)
    CHAR_LS         reduce using rule 123 (ustm -> terminate_stm .)
    STRING_LS       reduce using rule 123 (ustm -> terminate_stm .)
    INT_LS          reduce using rule 123 (ustm -> terminate_stm .)
    FLOAT_LS        reduce using rule 123 (ustm -> terminate_stm .)
    ID_LS           reduce using rule 123 (ustm -> terminate_stm .)
    FILE            reduce using rule 123 (ustm -> terminate_stm .)
    SEMI            reduce using rule 123 (ustm -> terminate_stm .)
    RETURN          reduce using rule 123 (ustm -> terminate_stm .)
    PRETURN         reduce using rule 123 (ustm -> terminate_stm .)
    IF              reduce using rule 123 (ustm -> terminate_stm .)
    WHILE           reduce using rule 123 (ustm -> terminate_stm .)
    FOR             reduce using rule 123 (ustm -> terminate_stm .)
    GOTO            reduce using rule 123 (ustm -> terminate_stm .)
    BREAK           reduce using rule 123 (ustm -> terminate_stm .)
    CONTINUE        reduce using rule 123 (ustm -> terminate_stm .)
    GUARD           reduce using rule 123 (ustm -> terminate_stm .)
    RAISE           reduce using rule 123 (ustm -> terminate_stm .)
    TERMINATE       reduce using rule 123 (ustm -> terminate_stm .)
    ID_LP           reduce using rule 123 (ustm -> terminate_stm .)
    BOOL_LP         reduce using rule 123 (ustm -> terminate_stm .)
    CHAR_LP         reduce using rule 123 (ustm -> terminate_stm .)
    STRING_LP       reduce using rule 123 (ustm -> terminate_stm .)
    INT_LP          reduce using rule 123 (ustm -> terminate_stm .)
    FLOAT_LP        reduce using rule 123 (ustm -> terminate_stm .)
    FIN_DOT         reduce using rule 123 (ustm -> terminate_stm .)
    FOUT_DOT        reduce using rule 123 (ustm -> terminate_stm .)
    IDOF_LP         reduce using rule 123 (ustm -> terminate_stm .)
    SIZEOF_LP       reduce using rule 123 (ustm -> terminate_stm .)
    TYPEOF_LP       reduce using rule 123 (ustm -> terminate_stm .)
    PARENT_DOT      reduce using rule 123 (ustm -> terminate_stm .)
    ID_DOT          reduce using rule 123 (ustm -> terminate_stm .)
    ENDMETHOD       reduce using rule 123 (ustm -> terminate_stm .)
    ENDWHILE        reduce using rule 123 (ustm -> terminate_stm .)
    CATCH           reduce using rule 123 (ustm -> terminate_stm .)
    ENDIF           reduce using rule 123 (ustm -> terminate_stm .)
    ELSE            reduce using rule 123 (ustm -> terminate_stm .)
    ENDFOR          reduce using rule 123 (ustm -> terminate_stm .)
    ENDCATCH        reduce using rule 123 (ustm -> terminate_stm .)
    STRING_LIT      reduce using rule 123 (ustm -> terminate_stm .)


state 85

    (38) type -> ID .
    (220) var -> ID .

    ID              reduce using rule 38 (type -> ID .)
    ASSIG           reduce using rule 220 (var -> ID .)
    PASSIG          reduce using rule 220 (var -> ID .)


state 86

    (44) type -> ID_LS . type_tail
    (189) arr -> ID_LS . COLON RS
    (190) arr -> ID_LS . COLON expression RS
    (191) arr -> ID_LS . expression COLON RS
    (192) arr -> ID_LS . expression COLON expression RS
    (197) arr -> ID_LS . expression RS arr_tail
    (46) type_tail -> . RLS type_tail
    (47) type_tail -> . RS
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    COLON           shift and go to state 164
    RLS             shift and go to state 36
    RS              shift and go to state 37
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    type_tail                      shift and go to state 42
    expression                     shift and go to state 165
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 87

    (127) null_stm -> SEMI .

    ENDMAIN         reduce using rule 127 (null_stm -> SEMI .)
    ID_COLON        reduce using rule 127 (null_stm -> SEMI .)
    PERMANENT       reduce using rule 127 (null_stm -> SEMI .)
    CONST           reduce using rule 127 (null_stm -> SEMI .)
    BOOL            reduce using rule 127 (null_stm -> SEMI .)
    CHAR            reduce using rule 127 (null_stm -> SEMI .)
    STRING          reduce using rule 127 (null_stm -> SEMI .)
    INT             reduce using rule 127 (null_stm -> SEMI .)
    FLOAT           reduce using rule 127 (null_stm -> SEMI .)
    ID              reduce using rule 127 (null_stm -> SEMI .)
    BOOL_LS         reduce using rule 127 (null_stm -> SEMI .)
    CHAR_LS         reduce using rule 127 (null_stm -> SEMI .)
    STRING_LS       reduce using rule 127 (null_stm -> SEMI .)
    INT_LS          reduce using rule 127 (null_stm -> SEMI .)
    FLOAT_LS        reduce using rule 127 (null_stm -> SEMI .)
    ID_LS           reduce using rule 127 (null_stm -> SEMI .)
    FILE            reduce using rule 127 (null_stm -> SEMI .)
    SEMI            reduce using rule 127 (null_stm -> SEMI .)
    RETURN          reduce using rule 127 (null_stm -> SEMI .)
    PRETURN         reduce using rule 127 (null_stm -> SEMI .)
    IF              reduce using rule 127 (null_stm -> SEMI .)
    WHILE           reduce using rule 127 (null_stm -> SEMI .)
    FOR             reduce using rule 127 (null_stm -> SEMI .)
    GOTO            reduce using rule 127 (null_stm -> SEMI .)
    BREAK           reduce using rule 127 (null_stm -> SEMI .)
    CONTINUE        reduce using rule 127 (null_stm -> SEMI .)
    GUARD           reduce using rule 127 (null_stm -> SEMI .)
    RAISE           reduce using rule 127 (null_stm -> SEMI .)
    TERMINATE       reduce using rule 127 (null_stm -> SEMI .)
    ID_LP           reduce using rule 127 (null_stm -> SEMI .)
    BOOL_LP         reduce using rule 127 (null_stm -> SEMI .)
    CHAR_LP         reduce using rule 127 (null_stm -> SEMI .)
    STRING_LP       reduce using rule 127 (null_stm -> SEMI .)
    INT_LP          reduce using rule 127 (null_stm -> SEMI .)
    FLOAT_LP        reduce using rule 127 (null_stm -> SEMI .)
    FIN_DOT         reduce using rule 127 (null_stm -> SEMI .)
    FOUT_DOT        reduce using rule 127 (null_stm -> SEMI .)
    IDOF_LP         reduce using rule 127 (null_stm -> SEMI .)
    SIZEOF_LP       reduce using rule 127 (null_stm -> SEMI .)
    TYPEOF_LP       reduce using rule 127 (null_stm -> SEMI .)
    PARENT_DOT      reduce using rule 127 (null_stm -> SEMI .)
    ID_DOT          reduce using rule 127 (null_stm -> SEMI .)
    ENDMETHOD       reduce using rule 127 (null_stm -> SEMI .)
    ENDWHILE        reduce using rule 127 (null_stm -> SEMI .)
    CATCH           reduce using rule 127 (null_stm -> SEMI .)
    ENDIF           reduce using rule 127 (null_stm -> SEMI .)
    ELSE            reduce using rule 127 (null_stm -> SEMI .)
    ENDFOR          reduce using rule 127 (null_stm -> SEMI .)
    ENDCATCH        reduce using rule 127 (null_stm -> SEMI .)
    STRING_LIT      reduce using rule 127 (null_stm -> SEMI .)


state 88

    (128) assig_stm -> storage . ASSIG expression SEMI
    (129) passig_stm -> storage . PASSIG expression SEMI
    (130) passig_stm -> storage . PASSIG ALLOC ID_LP par_list SEMI

    ASSIG           shift and go to state 166
    PASSIG          shift and go to state 167


state 89

    (201) call -> ID_LP . par_list
    (222) par_list -> . RP
    (223) par_list -> . expression RP
    (224) par_list -> . expression COMMA par_list_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    RP              shift and go to state 169
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    par_list                       shift and go to state 168
    expression                     shift and go to state 170
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 90

    (153) return_stm -> RETURN . SEMI
    (154) return_stm -> RETURN . expression SEMI
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    SEMI            shift and go to state 171
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 172
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 91

    (155) preturn_stm -> PRETURN . expression SEMI
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 173
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 92

    (131) call_stm -> call . SEMI

    SEMI            shift and go to state 174


state 93

    (132) if_stm -> IF . expression THEN stms ENDIF
    (133) if_stm -> IF . expression THEN stms ELSE stms ENDIF
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 175
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 94

    (134) while_stm -> WHILE . expression DO stms ENDWHILE
    (135) while_stm -> WHILE . expression DO ENDWHILE
    (136) while_stm -> WHILE . DO stms ENDWHILE
    (137) while_stm -> WHILE . DO ENDWHILE
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    DO              shift and go to state 177
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 176
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 95

    (138) for_stm -> FOR . prologue condition epilogue stms ENDFOR
    (139) for_stm -> FOR . prologue condition epilogue ENDFOR
    (141) prologue -> . storage ASSIG expression prologue_tail
    (142) prologue -> . SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    SEMI            shift and go to state 180
    ID_LS           shift and go to state 136
    ID              shift and go to state 119
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    prologue                       shift and go to state 178
    storage                        shift and go to state 179
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 181

state 96

    (140) goto_stm -> GOTO . ID SEMI

    ID              shift and go to state 182


state 97

    (124) break_stm -> BREAK . SEMI

    SEMI            shift and go to state 183


state 98

    (125) continue_stm -> CONTINUE . SEMI

    SEMI            shift and go to state 184


state 99

    (156) guard_stm -> GUARD . COLON stms CATCH COLON catch_block

    COLON           shift and go to state 185


state 100

    (160) raise_stm -> RAISE . expression SEMI
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 186
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 101

    (126) terminate_stm -> TERMINATE . SEMI

    SEMI            shift and go to state 187


state 102

    (151) storage -> arr .

    ASSIG           reduce using rule 151 (storage -> arr .)
    PASSIG          reduce using rule 151 (storage -> arr .)


state 103

    (152) storage -> var .

    ASSIG           reduce using rule 152 (storage -> var .)
    PASSIG          reduce using rule 152 (storage -> var .)


state 104

    (202) call -> BOOL_LP . expression RP
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 188
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 105

    (203) call -> CHAR_LP . expression RP
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 189
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 106

    (204) call -> STRING_LP . expression RP
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 190
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 107

    (205) call -> INT_LP . expression RP
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 191
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 108

    (206) call -> FLOAT_LP . expression RP
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 192
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 109

    (207) call -> FIN_DOT . ID_LP par_list

    ID_LP           shift and go to state 193


state 110

    (208) call -> FOUT_DOT . ID_LP par_list

    ID_LP           shift and go to state 194


state 111

    (209) call -> IDOF_LP . expression RP
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 195
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 112

    (210) call -> SIZEOF_LP . size_par RP
    (213) size_par -> . ID
    (214) size_par -> . ID_LS type_tail
    (215) size_par -> . qualifier ID
    (216) size_par -> . qualifier ID_LS type_tail
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ID              shift and go to state 197
    ID_LS           shift and go to state 198
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    size_par                       shift and go to state 196
    qualifier                      shift and go to state 199

state 113

    (211) call -> TYPEOF_LP . expression RP
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 200
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 114

    (212) call -> qualifier . ID_LP par_list
    (193) arr -> qualifier . ID_LS COLON RS
    (194) arr -> qualifier . ID_LS COLON expression RS
    (195) arr -> qualifier . ID_LS expression COLON RS
    (196) arr -> qualifier . ID_LS expression COLON expression RS
    (198) arr -> qualifier . ID_LS expression RS arr_tail
    (221) var -> qualifier . ID

    ID_LP           shift and go to state 201
    ID_LS           shift and go to state 202
    ID              shift and go to state 203


state 115

    (217) qualifier -> PARENT_DOT . qualifier
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    qualifier                      shift and go to state 204

state 116

    (218) qualifier -> ID_DOT . qualifier
    (219) qualifier -> ID_DOT .
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ID_LP           reduce using rule 219 (qualifier -> ID_DOT .)
    ID_LS           reduce using rule 219 (qualifier -> ID_DOT .)
    ID              reduce using rule 219 (qualifier -> ID_DOT .)
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    qualifier                      shift and go to state 205

state 117

    (25) var_list_tail -> ID . SEMI
    (26) var_list_tail -> ID . COMMA var_list_tail
    (27) var_list_tail -> ID . ASSIG expression SEMI
    (28) var_list_tail -> ID . ASSIG expression COMMA var_list_tail
    (29) var_list_tail -> ID . PASSIG expression SEMI
    (30) var_list_tail -> ID . PASSIG expression COMMA var_list_tail
    (31) var_list_tail -> ID . PASSIG ALLOC ID_LP par_list SEMI
    (32) var_list_tail -> ID . PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    SEMI            shift and go to state 206
    COMMA           shift and go to state 207
    ASSIG           shift and go to state 208
    PASSIG          shift and go to state 209


state 118

    (18) var_list -> ID COMMA var_list_tail .

    PERMANENT       reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    CONST           reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    CLASS           reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    BOOL            reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    CHAR            reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    STRING          reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    INT             reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    FLOAT           reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    ID              reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    BOOL_LS         reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    CHAR_LS         reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    STRING_LS       reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    INT_LS          reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    FLOAT_LS        reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    ID_LS           reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    FILE            reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    MAIN            reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    ENDMAIN         reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    ID_COLON        reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    SEMI            reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    RETURN          reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    PRETURN         reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    IF              reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    WHILE           reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    FOR             reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    GOTO            reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    BREAK           reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    CONTINUE        reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    GUARD           reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    RAISE           reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    TERMINATE       reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    ID_LP           reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    BOOL_LP         reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    CHAR_LP         reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    STRING_LP       reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    INT_LP          reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    FLOAT_LP        reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    FIN_DOT         reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    FOUT_DOT        reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    IDOF_LP         reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    SIZEOF_LP       reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    TYPEOF_LP       reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    PARENT_DOT      reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    ID_DOT          reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    ENDMETHOD       reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    ENDCLASS        reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    PUBLIC          reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    PRIVATE         reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    SHARED          reduce using rule 18 (var_list -> ID COMMA var_list_tail .)
    METHOD          reduce using rule 18 (var_list -> ID COMMA var_list_tail .)


state 119

    (220) var -> ID .

    SEMI            reduce using rule 220 (var -> ID .)
    COMMA           reduce using rule 220 (var -> ID .)
    PLUS            reduce using rule 220 (var -> ID .)
    MINUS           reduce using rule 220 (var -> ID .)
    STAR            reduce using rule 220 (var -> ID .)
    DIV             reduce using rule 220 (var -> ID .)
    IDIV            reduce using rule 220 (var -> ID .)
    MOD             reduce using rule 220 (var -> ID .)
    AND             reduce using rule 220 (var -> ID .)
    OR              reduce using rule 220 (var -> ID .)
    LT              reduce using rule 220 (var -> ID .)
    LE              reduce using rule 220 (var -> ID .)
    GT              reduce using rule 220 (var -> ID .)
    GE              reduce using rule 220 (var -> ID .)
    EQ              reduce using rule 220 (var -> ID .)
    NEQ             reduce using rule 220 (var -> ID .)
    ASSIG           reduce using rule 220 (var -> ID .)
    PASSIG          reduce using rule 220 (var -> ID .)
    COLON           reduce using rule 220 (var -> ID .)
    RS              reduce using rule 220 (var -> ID .)
    RP              reduce using rule 220 (var -> ID .)
    THEN            reduce using rule 220 (var -> ID .)
    DO              reduce using rule 220 (var -> ID .)


state 120

    (19) var_list -> ID ASSIG expression . SEMI
    (20) var_list -> ID ASSIG expression . COMMA var_list_tail
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            shift and go to state 210
    COMMA           shift and go to state 211
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 121

    (161) expression -> simple_expression .

    SEMI            reduce using rule 161 (expression -> simple_expression .)
    COMMA           reduce using rule 161 (expression -> simple_expression .)
    PLUS            reduce using rule 161 (expression -> simple_expression .)
    MINUS           reduce using rule 161 (expression -> simple_expression .)
    STAR            reduce using rule 161 (expression -> simple_expression .)
    DIV             reduce using rule 161 (expression -> simple_expression .)
    IDIV            reduce using rule 161 (expression -> simple_expression .)
    MOD             reduce using rule 161 (expression -> simple_expression .)
    AND             reduce using rule 161 (expression -> simple_expression .)
    OR              reduce using rule 161 (expression -> simple_expression .)
    LT              reduce using rule 161 (expression -> simple_expression .)
    LE              reduce using rule 161 (expression -> simple_expression .)
    GT              reduce using rule 161 (expression -> simple_expression .)
    GE              reduce using rule 161 (expression -> simple_expression .)
    EQ              reduce using rule 161 (expression -> simple_expression .)
    NEQ             reduce using rule 161 (expression -> simple_expression .)
    COLON           reduce using rule 161 (expression -> simple_expression .)
    RS              reduce using rule 161 (expression -> simple_expression .)
    RP              reduce using rule 161 (expression -> simple_expression .)
    THEN            reduce using rule 161 (expression -> simple_expression .)
    DO              reduce using rule 161 (expression -> simple_expression .)


state 122

    (176) expression -> MINUS . simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    simple_expression              shift and go to state 226
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 123

    (177) expression -> NOT . simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    simple_expression              shift and go to state 227
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 124

    (178) simple_expression -> LP . expression RP
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 228
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 125

    (179) simple_expression -> INT_LIT .

    SEMI            reduce using rule 179 (simple_expression -> INT_LIT .)
    COMMA           reduce using rule 179 (simple_expression -> INT_LIT .)
    PLUS            reduce using rule 179 (simple_expression -> INT_LIT .)
    MINUS           reduce using rule 179 (simple_expression -> INT_LIT .)
    STAR            reduce using rule 179 (simple_expression -> INT_LIT .)
    DIV             reduce using rule 179 (simple_expression -> INT_LIT .)
    IDIV            reduce using rule 179 (simple_expression -> INT_LIT .)
    MOD             reduce using rule 179 (simple_expression -> INT_LIT .)
    AND             reduce using rule 179 (simple_expression -> INT_LIT .)
    OR              reduce using rule 179 (simple_expression -> INT_LIT .)
    LT              reduce using rule 179 (simple_expression -> INT_LIT .)
    LE              reduce using rule 179 (simple_expression -> INT_LIT .)
    GT              reduce using rule 179 (simple_expression -> INT_LIT .)
    GE              reduce using rule 179 (simple_expression -> INT_LIT .)
    EQ              reduce using rule 179 (simple_expression -> INT_LIT .)
    NEQ             reduce using rule 179 (simple_expression -> INT_LIT .)
    COLON           reduce using rule 179 (simple_expression -> INT_LIT .)
    RS              reduce using rule 179 (simple_expression -> INT_LIT .)
    RP              reduce using rule 179 (simple_expression -> INT_LIT .)
    THEN            reduce using rule 179 (simple_expression -> INT_LIT .)
    DO              reduce using rule 179 (simple_expression -> INT_LIT .)


state 126

    (180) simple_expression -> FLOAT_LIT .

    SEMI            reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    COMMA           reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    PLUS            reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    MINUS           reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    STAR            reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    DIV             reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    IDIV            reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    MOD             reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    AND             reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    OR              reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    LT              reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    LE              reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    GT              reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    GE              reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    EQ              reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    NEQ             reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    COLON           reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    RS              reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    RP              reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    THEN            reduce using rule 180 (simple_expression -> FLOAT_LIT .)
    DO              reduce using rule 180 (simple_expression -> FLOAT_LIT .)


state 127

    (181) simple_expression -> FALSE .

    SEMI            reduce using rule 181 (simple_expression -> FALSE .)
    COMMA           reduce using rule 181 (simple_expression -> FALSE .)
    PLUS            reduce using rule 181 (simple_expression -> FALSE .)
    MINUS           reduce using rule 181 (simple_expression -> FALSE .)
    STAR            reduce using rule 181 (simple_expression -> FALSE .)
    DIV             reduce using rule 181 (simple_expression -> FALSE .)
    IDIV            reduce using rule 181 (simple_expression -> FALSE .)
    MOD             reduce using rule 181 (simple_expression -> FALSE .)
    AND             reduce using rule 181 (simple_expression -> FALSE .)
    OR              reduce using rule 181 (simple_expression -> FALSE .)
    LT              reduce using rule 181 (simple_expression -> FALSE .)
    LE              reduce using rule 181 (simple_expression -> FALSE .)
    GT              reduce using rule 181 (simple_expression -> FALSE .)
    GE              reduce using rule 181 (simple_expression -> FALSE .)
    EQ              reduce using rule 181 (simple_expression -> FALSE .)
    NEQ             reduce using rule 181 (simple_expression -> FALSE .)
    COLON           reduce using rule 181 (simple_expression -> FALSE .)
    RS              reduce using rule 181 (simple_expression -> FALSE .)
    RP              reduce using rule 181 (simple_expression -> FALSE .)
    THEN            reduce using rule 181 (simple_expression -> FALSE .)
    DO              reduce using rule 181 (simple_expression -> FALSE .)


state 128

    (182) simple_expression -> TRUE .

    SEMI            reduce using rule 182 (simple_expression -> TRUE .)
    COMMA           reduce using rule 182 (simple_expression -> TRUE .)
    PLUS            reduce using rule 182 (simple_expression -> TRUE .)
    MINUS           reduce using rule 182 (simple_expression -> TRUE .)
    STAR            reduce using rule 182 (simple_expression -> TRUE .)
    DIV             reduce using rule 182 (simple_expression -> TRUE .)
    IDIV            reduce using rule 182 (simple_expression -> TRUE .)
    MOD             reduce using rule 182 (simple_expression -> TRUE .)
    AND             reduce using rule 182 (simple_expression -> TRUE .)
    OR              reduce using rule 182 (simple_expression -> TRUE .)
    LT              reduce using rule 182 (simple_expression -> TRUE .)
    LE              reduce using rule 182 (simple_expression -> TRUE .)
    GT              reduce using rule 182 (simple_expression -> TRUE .)
    GE              reduce using rule 182 (simple_expression -> TRUE .)
    EQ              reduce using rule 182 (simple_expression -> TRUE .)
    NEQ             reduce using rule 182 (simple_expression -> TRUE .)
    COLON           reduce using rule 182 (simple_expression -> TRUE .)
    RS              reduce using rule 182 (simple_expression -> TRUE .)
    RP              reduce using rule 182 (simple_expression -> TRUE .)
    THEN            reduce using rule 182 (simple_expression -> TRUE .)
    DO              reduce using rule 182 (simple_expression -> TRUE .)


state 129

    (183) simple_expression -> NOREF .

    SEMI            reduce using rule 183 (simple_expression -> NOREF .)
    COMMA           reduce using rule 183 (simple_expression -> NOREF .)
    PLUS            reduce using rule 183 (simple_expression -> NOREF .)
    MINUS           reduce using rule 183 (simple_expression -> NOREF .)
    STAR            reduce using rule 183 (simple_expression -> NOREF .)
    DIV             reduce using rule 183 (simple_expression -> NOREF .)
    IDIV            reduce using rule 183 (simple_expression -> NOREF .)
    MOD             reduce using rule 183 (simple_expression -> NOREF .)
    AND             reduce using rule 183 (simple_expression -> NOREF .)
    OR              reduce using rule 183 (simple_expression -> NOREF .)
    LT              reduce using rule 183 (simple_expression -> NOREF .)
    LE              reduce using rule 183 (simple_expression -> NOREF .)
    GT              reduce using rule 183 (simple_expression -> NOREF .)
    GE              reduce using rule 183 (simple_expression -> NOREF .)
    EQ              reduce using rule 183 (simple_expression -> NOREF .)
    NEQ             reduce using rule 183 (simple_expression -> NOREF .)
    COLON           reduce using rule 183 (simple_expression -> NOREF .)
    RS              reduce using rule 183 (simple_expression -> NOREF .)
    RP              reduce using rule 183 (simple_expression -> NOREF .)
    THEN            reduce using rule 183 (simple_expression -> NOREF .)
    DO              reduce using rule 183 (simple_expression -> NOREF .)


state 130

    (184) simple_expression -> CHAR_LIT .

    SEMI            reduce using rule 184 (simple_expression -> CHAR_LIT .)
    COMMA           reduce using rule 184 (simple_expression -> CHAR_LIT .)
    PLUS            reduce using rule 184 (simple_expression -> CHAR_LIT .)
    MINUS           reduce using rule 184 (simple_expression -> CHAR_LIT .)
    STAR            reduce using rule 184 (simple_expression -> CHAR_LIT .)
    DIV             reduce using rule 184 (simple_expression -> CHAR_LIT .)
    IDIV            reduce using rule 184 (simple_expression -> CHAR_LIT .)
    MOD             reduce using rule 184 (simple_expression -> CHAR_LIT .)
    AND             reduce using rule 184 (simple_expression -> CHAR_LIT .)
    OR              reduce using rule 184 (simple_expression -> CHAR_LIT .)
    LT              reduce using rule 184 (simple_expression -> CHAR_LIT .)
    LE              reduce using rule 184 (simple_expression -> CHAR_LIT .)
    GT              reduce using rule 184 (simple_expression -> CHAR_LIT .)
    GE              reduce using rule 184 (simple_expression -> CHAR_LIT .)
    EQ              reduce using rule 184 (simple_expression -> CHAR_LIT .)
    NEQ             reduce using rule 184 (simple_expression -> CHAR_LIT .)
    COLON           reduce using rule 184 (simple_expression -> CHAR_LIT .)
    RS              reduce using rule 184 (simple_expression -> CHAR_LIT .)
    RP              reduce using rule 184 (simple_expression -> CHAR_LIT .)
    THEN            reduce using rule 184 (simple_expression -> CHAR_LIT .)
    DO              reduce using rule 184 (simple_expression -> CHAR_LIT .)


state 131

    (185) simple_expression -> STRING_LIT .

    SEMI            reduce using rule 185 (simple_expression -> STRING_LIT .)
    COMMA           reduce using rule 185 (simple_expression -> STRING_LIT .)
    PLUS            reduce using rule 185 (simple_expression -> STRING_LIT .)
    MINUS           reduce using rule 185 (simple_expression -> STRING_LIT .)
    STAR            reduce using rule 185 (simple_expression -> STRING_LIT .)
    DIV             reduce using rule 185 (simple_expression -> STRING_LIT .)
    IDIV            reduce using rule 185 (simple_expression -> STRING_LIT .)
    MOD             reduce using rule 185 (simple_expression -> STRING_LIT .)
    AND             reduce using rule 185 (simple_expression -> STRING_LIT .)
    OR              reduce using rule 185 (simple_expression -> STRING_LIT .)
    LT              reduce using rule 185 (simple_expression -> STRING_LIT .)
    LE              reduce using rule 185 (simple_expression -> STRING_LIT .)
    GT              reduce using rule 185 (simple_expression -> STRING_LIT .)
    GE              reduce using rule 185 (simple_expression -> STRING_LIT .)
    EQ              reduce using rule 185 (simple_expression -> STRING_LIT .)
    NEQ             reduce using rule 185 (simple_expression -> STRING_LIT .)
    COLON           reduce using rule 185 (simple_expression -> STRING_LIT .)
    RS              reduce using rule 185 (simple_expression -> STRING_LIT .)
    RP              reduce using rule 185 (simple_expression -> STRING_LIT .)
    THEN            reduce using rule 185 (simple_expression -> STRING_LIT .)
    DO              reduce using rule 185 (simple_expression -> STRING_LIT .)


state 132

    (186) simple_expression -> var .

    SEMI            reduce using rule 186 (simple_expression -> var .)
    COMMA           reduce using rule 186 (simple_expression -> var .)
    PLUS            reduce using rule 186 (simple_expression -> var .)
    MINUS           reduce using rule 186 (simple_expression -> var .)
    STAR            reduce using rule 186 (simple_expression -> var .)
    DIV             reduce using rule 186 (simple_expression -> var .)
    IDIV            reduce using rule 186 (simple_expression -> var .)
    MOD             reduce using rule 186 (simple_expression -> var .)
    AND             reduce using rule 186 (simple_expression -> var .)
    OR              reduce using rule 186 (simple_expression -> var .)
    LT              reduce using rule 186 (simple_expression -> var .)
    LE              reduce using rule 186 (simple_expression -> var .)
    GT              reduce using rule 186 (simple_expression -> var .)
    GE              reduce using rule 186 (simple_expression -> var .)
    EQ              reduce using rule 186 (simple_expression -> var .)
    NEQ             reduce using rule 186 (simple_expression -> var .)
    COLON           reduce using rule 186 (simple_expression -> var .)
    RS              reduce using rule 186 (simple_expression -> var .)
    RP              reduce using rule 186 (simple_expression -> var .)
    THEN            reduce using rule 186 (simple_expression -> var .)
    DO              reduce using rule 186 (simple_expression -> var .)


state 133

    (187) simple_expression -> arr .

    SEMI            reduce using rule 187 (simple_expression -> arr .)
    COMMA           reduce using rule 187 (simple_expression -> arr .)
    PLUS            reduce using rule 187 (simple_expression -> arr .)
    MINUS           reduce using rule 187 (simple_expression -> arr .)
    STAR            reduce using rule 187 (simple_expression -> arr .)
    DIV             reduce using rule 187 (simple_expression -> arr .)
    IDIV            reduce using rule 187 (simple_expression -> arr .)
    MOD             reduce using rule 187 (simple_expression -> arr .)
    AND             reduce using rule 187 (simple_expression -> arr .)
    OR              reduce using rule 187 (simple_expression -> arr .)
    LT              reduce using rule 187 (simple_expression -> arr .)
    LE              reduce using rule 187 (simple_expression -> arr .)
    GT              reduce using rule 187 (simple_expression -> arr .)
    GE              reduce using rule 187 (simple_expression -> arr .)
    EQ              reduce using rule 187 (simple_expression -> arr .)
    NEQ             reduce using rule 187 (simple_expression -> arr .)
    COLON           reduce using rule 187 (simple_expression -> arr .)
    RS              reduce using rule 187 (simple_expression -> arr .)
    RP              reduce using rule 187 (simple_expression -> arr .)
    THEN            reduce using rule 187 (simple_expression -> arr .)
    DO              reduce using rule 187 (simple_expression -> arr .)


state 134

    (188) simple_expression -> call .

    SEMI            reduce using rule 188 (simple_expression -> call .)
    COMMA           reduce using rule 188 (simple_expression -> call .)
    PLUS            reduce using rule 188 (simple_expression -> call .)
    MINUS           reduce using rule 188 (simple_expression -> call .)
    STAR            reduce using rule 188 (simple_expression -> call .)
    DIV             reduce using rule 188 (simple_expression -> call .)
    IDIV            reduce using rule 188 (simple_expression -> call .)
    MOD             reduce using rule 188 (simple_expression -> call .)
    AND             reduce using rule 188 (simple_expression -> call .)
    OR              reduce using rule 188 (simple_expression -> call .)
    LT              reduce using rule 188 (simple_expression -> call .)
    LE              reduce using rule 188 (simple_expression -> call .)
    GT              reduce using rule 188 (simple_expression -> call .)
    GE              reduce using rule 188 (simple_expression -> call .)
    EQ              reduce using rule 188 (simple_expression -> call .)
    NEQ             reduce using rule 188 (simple_expression -> call .)
    COLON           reduce using rule 188 (simple_expression -> call .)
    RS              reduce using rule 188 (simple_expression -> call .)
    RP              reduce using rule 188 (simple_expression -> call .)
    THEN            reduce using rule 188 (simple_expression -> call .)
    DO              reduce using rule 188 (simple_expression -> call .)


state 135

    (221) var -> qualifier . ID
    (193) arr -> qualifier . ID_LS COLON RS
    (194) arr -> qualifier . ID_LS COLON expression RS
    (195) arr -> qualifier . ID_LS expression COLON RS
    (196) arr -> qualifier . ID_LS expression COLON expression RS
    (198) arr -> qualifier . ID_LS expression RS arr_tail
    (212) call -> qualifier . ID_LP par_list

    ID              shift and go to state 203
    ID_LS           shift and go to state 202
    ID_LP           shift and go to state 201


state 136

    (189) arr -> ID_LS . COLON RS
    (190) arr -> ID_LS . COLON expression RS
    (191) arr -> ID_LS . expression COLON RS
    (192) arr -> ID_LS . expression COLON expression RS
    (197) arr -> ID_LS . expression RS arr_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    COLON           shift and go to state 164
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 165
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 137

    (21) var_list -> ID PASSIG expression . SEMI
    (22) var_list -> ID PASSIG expression . COMMA var_list_tail
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            shift and go to state 229
    COMMA           shift and go to state 230
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 138

    (23) var_list -> ID PASSIG ALLOC . ID_LP par_list SEMI
    (24) var_list -> ID PASSIG ALLOC . ID_LP par_list COMMA var_list_tail

    ID_LP           shift and go to state 231


state 139

    (12) var_definition -> PERMANENT CONST type var_list .

    PERMANENT       reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    CONST           reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    CLASS           reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    BOOL            reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    CHAR            reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    STRING          reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    INT             reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    FLOAT           reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    ID              reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    BOOL_LS         reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    CHAR_LS         reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    STRING_LS       reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    INT_LS          reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    FLOAT_LS        reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    ID_LS           reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    FILE            reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    MAIN            reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    ENDMAIN         reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    ID_COLON        reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    SEMI            reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    RETURN          reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    PRETURN         reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    IF              reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    WHILE           reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    FOR             reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    GOTO            reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    BREAK           reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    CONTINUE        reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    GUARD           reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    RAISE           reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    TERMINATE       reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    ID_LP           reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    BOOL_LP         reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    CHAR_LP         reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    STRING_LP       reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    INT_LP          reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    FLOAT_LP        reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    FIN_DOT         reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    FOUT_DOT        reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    IDOF_LP         reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    SIZEOF_LP       reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    TYPEOF_LP       reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    PARENT_DOT      reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    ID_DOT          reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)
    ENDMETHOD       reduce using rule 12 (var_definition -> PERMANENT CONST type var_list .)


state 140

    (13) var_definition -> CONST PERMANENT type var_list .

    PERMANENT       reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    CONST           reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    CLASS           reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    BOOL            reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    CHAR            reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    STRING          reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    INT             reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    FLOAT           reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    ID              reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    BOOL_LS         reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    CHAR_LS         reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    STRING_LS       reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    INT_LS          reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    FLOAT_LS        reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    ID_LS           reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    FILE            reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    MAIN            reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    ENDMAIN         reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    ID_COLON        reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    SEMI            reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    RETURN          reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    PRETURN         reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    IF              reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    WHILE           reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    FOR             reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    GOTO            reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    BREAK           reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    CONTINUE        reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    GUARD           reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    RAISE           reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    TERMINATE       reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    ID_LP           reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    BOOL_LP         reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    CHAR_LP         reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    STRING_LP       reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    INT_LP          reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    FLOAT_LP        reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    FIN_DOT         reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    FOUT_DOT        reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    IDOF_LP         reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    SIZEOF_LP       reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    TYPEOF_LP       reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    PARENT_DOT      reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    ID_DOT          reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)
    ENDMETHOD       reduce using rule 13 (var_definition -> CONST PERMANENT type var_list .)


state 141

    (75) class_body -> attr_definition class_body .

    PERMANENT       reduce using rule 75 (class_body -> attr_definition class_body .)
    CONST           reduce using rule 75 (class_body -> attr_definition class_body .)
    CLASS           reduce using rule 75 (class_body -> attr_definition class_body .)
    BOOL            reduce using rule 75 (class_body -> attr_definition class_body .)
    CHAR            reduce using rule 75 (class_body -> attr_definition class_body .)
    STRING          reduce using rule 75 (class_body -> attr_definition class_body .)
    INT             reduce using rule 75 (class_body -> attr_definition class_body .)
    FLOAT           reduce using rule 75 (class_body -> attr_definition class_body .)
    ID              reduce using rule 75 (class_body -> attr_definition class_body .)
    BOOL_LS         reduce using rule 75 (class_body -> attr_definition class_body .)
    CHAR_LS         reduce using rule 75 (class_body -> attr_definition class_body .)
    STRING_LS       reduce using rule 75 (class_body -> attr_definition class_body .)
    INT_LS          reduce using rule 75 (class_body -> attr_definition class_body .)
    FLOAT_LS        reduce using rule 75 (class_body -> attr_definition class_body .)
    ID_LS           reduce using rule 75 (class_body -> attr_definition class_body .)
    FILE            reduce using rule 75 (class_body -> attr_definition class_body .)
    MAIN            reduce using rule 75 (class_body -> attr_definition class_body .)


state 142

    (76) class_body -> method_header method_body . class_body
    (74) class_body -> . ENDCLASS
    (75) class_body -> . attr_definition class_body
    (76) class_body -> . method_header method_body class_body
    (77) class_body -> . PUBLIC method_header method_body class_body
    (78) class_body -> . PRIVATE method_header method_body class_body
    (79) attr_definition -> . PUBLIC SHARED CONST type var_list
    (80) attr_definition -> . PUBLIC CONST SHARED type var_list
    (81) attr_definition -> . PRIVATE SHARED CONST type var_list
    (82) attr_definition -> . PRIVATE CONST SHARED type var_list
    (83) attr_definition -> . PUBLIC SHARED type var_list
    (84) attr_definition -> . PUBLIC CONST type var_list
    (85) attr_definition -> . SHARED CONST type var_list
    (86) attr_definition -> . CONST SHARED type var_list
    (87) attr_definition -> . PRIVATE SHARED type var_list
    (88) attr_definition -> . PRIVATE CONST type var_list
    (89) attr_definition -> . PUBLIC type var_list
    (90) attr_definition -> . SHARED type var_list
    (91) attr_definition -> . CONST type var_list
    (92) attr_definition -> . PRIVATE type var_list
    (93) attr_definition -> . type var_list
    (94) method_header -> . METHOD ID_LP arg_list ARROW type COLON
    (95) method_header -> . METHOD ID_LP arg_list COLON
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    ENDCLASS        shift and go to state 53
    PUBLIC          shift and go to state 56
    PRIVATE         shift and go to state 57
    SHARED          shift and go to state 58
    CONST           shift and go to state 59
    METHOD          shift and go to state 61
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    method_header                  shift and go to state 55
    class_body                     shift and go to state 232
    attr_definition                shift and go to state 54
    type                           shift and go to state 60

state 143

    (106) method_body -> stm . method_body
    (106) method_body -> . stm method_body
    (107) method_body -> . var_definition method_body
    (108) method_body -> . ENDMETHOD
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (9) var_definition -> . type var_list
    (10) var_definition -> . PERMANENT type var_list
    (11) var_definition -> . CONST type var_list
    (12) var_definition -> . PERMANENT CONST type var_list
    (13) var_definition -> . CONST PERMANENT type var_list
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ENDMETHOD       shift and go to state 145
    ID_COLON        shift and go to state 68
    PERMANENT       shift and go to state 6
    CONST           shift and go to state 7
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 85
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 86
    FILE            shift and go to state 21
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    stm                            shift and go to state 143
    method_body                    shift and go to state 233
    var_definition                 shift and go to state 144
    ustm                           shift and go to state 69
    type                           shift and go to state 5
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 144

    (107) method_body -> var_definition . method_body
    (106) method_body -> . stm method_body
    (107) method_body -> . var_definition method_body
    (108) method_body -> . ENDMETHOD
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (9) var_definition -> . type var_list
    (10) var_definition -> . PERMANENT type var_list
    (11) var_definition -> . CONST type var_list
    (12) var_definition -> . PERMANENT CONST type var_list
    (13) var_definition -> . CONST PERMANENT type var_list
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ENDMETHOD       shift and go to state 145
    ID_COLON        shift and go to state 68
    PERMANENT       shift and go to state 6
    CONST           shift and go to state 7
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 85
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 86
    FILE            shift and go to state 21
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    var_definition                 shift and go to state 144
    method_body                    shift and go to state 234
    stm                            shift and go to state 143
    ustm                           shift and go to state 69
    type                           shift and go to state 5
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 145

    (108) method_body -> ENDMETHOD .

    ENDCLASS        reduce using rule 108 (method_body -> ENDMETHOD .)
    PUBLIC          reduce using rule 108 (method_body -> ENDMETHOD .)
    PRIVATE         reduce using rule 108 (method_body -> ENDMETHOD .)
    SHARED          reduce using rule 108 (method_body -> ENDMETHOD .)
    CONST           reduce using rule 108 (method_body -> ENDMETHOD .)
    METHOD          reduce using rule 108 (method_body -> ENDMETHOD .)
    BOOL            reduce using rule 108 (method_body -> ENDMETHOD .)
    CHAR            reduce using rule 108 (method_body -> ENDMETHOD .)
    STRING          reduce using rule 108 (method_body -> ENDMETHOD .)
    INT             reduce using rule 108 (method_body -> ENDMETHOD .)
    FLOAT           reduce using rule 108 (method_body -> ENDMETHOD .)
    ID              reduce using rule 108 (method_body -> ENDMETHOD .)
    BOOL_LS         reduce using rule 108 (method_body -> ENDMETHOD .)
    CHAR_LS         reduce using rule 108 (method_body -> ENDMETHOD .)
    STRING_LS       reduce using rule 108 (method_body -> ENDMETHOD .)
    INT_LS          reduce using rule 108 (method_body -> ENDMETHOD .)
    FLOAT_LS        reduce using rule 108 (method_body -> ENDMETHOD .)
    ID_LS           reduce using rule 108 (method_body -> ENDMETHOD .)
    FILE            reduce using rule 108 (method_body -> ENDMETHOD .)


state 146

    (77) class_body -> PUBLIC method_header . method_body class_body
    (106) method_body -> . stm method_body
    (107) method_body -> . var_definition method_body
    (108) method_body -> . ENDMETHOD
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (9) var_definition -> . type var_list
    (10) var_definition -> . PERMANENT type var_list
    (11) var_definition -> . CONST type var_list
    (12) var_definition -> . PERMANENT CONST type var_list
    (13) var_definition -> . CONST PERMANENT type var_list
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ENDMETHOD       shift and go to state 145
    ID_COLON        shift and go to state 68
    PERMANENT       shift and go to state 6
    CONST           shift and go to state 7
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 85
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 86
    FILE            shift and go to state 21
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    method_body                    shift and go to state 235
    stm                            shift and go to state 143
    var_definition                 shift and go to state 144
    ustm                           shift and go to state 69
    type                           shift and go to state 5
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 147

    (79) attr_definition -> PUBLIC SHARED . CONST type var_list
    (83) attr_definition -> PUBLIC SHARED . type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    CONST           shift and go to state 236
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 237

state 148

    (80) attr_definition -> PUBLIC CONST . SHARED type var_list
    (84) attr_definition -> PUBLIC CONST . type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    SHARED          shift and go to state 238
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 239

state 149

    (89) attr_definition -> PUBLIC type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 240

state 150

    (78) class_body -> PRIVATE method_header . method_body class_body
    (106) method_body -> . stm method_body
    (107) method_body -> . var_definition method_body
    (108) method_body -> . ENDMETHOD
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (9) var_definition -> . type var_list
    (10) var_definition -> . PERMANENT type var_list
    (11) var_definition -> . CONST type var_list
    (12) var_definition -> . PERMANENT CONST type var_list
    (13) var_definition -> . CONST PERMANENT type var_list
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ENDMETHOD       shift and go to state 145
    ID_COLON        shift and go to state 68
    PERMANENT       shift and go to state 6
    CONST           shift and go to state 7
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 85
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 86
    FILE            shift and go to state 21
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    method_body                    shift and go to state 241
    stm                            shift and go to state 143
    var_definition                 shift and go to state 144
    ustm                           shift and go to state 69
    type                           shift and go to state 5
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 151

    (81) attr_definition -> PRIVATE SHARED . CONST type var_list
    (87) attr_definition -> PRIVATE SHARED . type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    CONST           shift and go to state 242
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 243

state 152

    (82) attr_definition -> PRIVATE CONST . SHARED type var_list
    (88) attr_definition -> PRIVATE CONST . type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    SHARED          shift and go to state 244
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 245

state 153

    (92) attr_definition -> PRIVATE type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 246

state 154

    (85) attr_definition -> SHARED CONST . type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 247

state 155

    (90) attr_definition -> SHARED type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 248

state 156

    (86) attr_definition -> CONST SHARED . type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 249

state 157

    (91) attr_definition -> CONST type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 250

state 158

    (93) attr_definition -> type var_list .

    ENDCLASS        reduce using rule 93 (attr_definition -> type var_list .)
    PUBLIC          reduce using rule 93 (attr_definition -> type var_list .)
    PRIVATE         reduce using rule 93 (attr_definition -> type var_list .)
    SHARED          reduce using rule 93 (attr_definition -> type var_list .)
    CONST           reduce using rule 93 (attr_definition -> type var_list .)
    METHOD          reduce using rule 93 (attr_definition -> type var_list .)
    BOOL            reduce using rule 93 (attr_definition -> type var_list .)
    CHAR            reduce using rule 93 (attr_definition -> type var_list .)
    STRING          reduce using rule 93 (attr_definition -> type var_list .)
    INT             reduce using rule 93 (attr_definition -> type var_list .)
    FLOAT           reduce using rule 93 (attr_definition -> type var_list .)
    ID              reduce using rule 93 (attr_definition -> type var_list .)
    BOOL_LS         reduce using rule 93 (attr_definition -> type var_list .)
    CHAR_LS         reduce using rule 93 (attr_definition -> type var_list .)
    STRING_LS       reduce using rule 93 (attr_definition -> type var_list .)
    INT_LS          reduce using rule 93 (attr_definition -> type var_list .)
    FLOAT_LS        reduce using rule 93 (attr_definition -> type var_list .)
    ID_LS           reduce using rule 93 (attr_definition -> type var_list .)
    FILE            reduce using rule 93 (attr_definition -> type var_list .)


state 159

    (94) method_header -> METHOD ID_LP . arg_list ARROW type COLON
    (95) method_header -> METHOD ID_LP . arg_list COLON
    (96) arg_list -> . RP
    (97) arg_list -> . atype ID RP
    (98) arg_list -> . atype ID COMMA arg_list_tail
    (99) arg_list -> . CONST atype ID RP
    (100) arg_list -> . CONST atype ID COMMA arg_list_tail
    (48) atype -> . BOOL
    (49) atype -> . CHAR
    (50) atype -> . STRING
    (51) atype -> . INT
    (52) atype -> . FLOAT
    (53) atype -> . ID
    (54) atype -> . BOOL_AT
    (55) atype -> . CHAR_AT
    (56) atype -> . STRING_AT
    (57) atype -> . INT_AT
    (58) atype -> . FLOAT_AT
    (59) atype -> . ID_AT
    (60) atype -> . BOOL_LS atype_tail
    (61) atype -> . CHAR_LS atype_tail
    (62) atype -> . STRING_LS atype_tail
    (63) atype -> . INT_LS atype_tail
    (64) atype -> . FLOAT_LS atype_tail
    (65) atype -> . ID_LS atype_tail
    (66) atype -> . FILE

    RP              shift and go to state 252
    CONST           shift and go to state 255
    BOOL            shift and go to state 256
    CHAR            shift and go to state 257
    STRING          shift and go to state 258
    INT             shift and go to state 259
    FLOAT           shift and go to state 260
    ID              shift and go to state 254
    BOOL_AT         shift and go to state 261
    CHAR_AT         shift and go to state 262
    STRING_AT       shift and go to state 263
    INT_AT          shift and go to state 264
    FLOAT_AT        shift and go to state 265
    ID_AT           shift and go to state 266
    BOOL_LS         shift and go to state 267
    CHAR_LS         shift and go to state 268
    STRING_LS       shift and go to state 269
    INT_LS          shift and go to state 270
    FLOAT_LS        shift and go to state 271
    ID_LS           shift and go to state 272
    FILE            shift and go to state 273

    arg_list                       shift and go to state 251
    atype                          shift and go to state 253

state 160

    (16) class_header -> ID EXTENDS ID_COLON . class_body
    (74) class_body -> . ENDCLASS
    (75) class_body -> . attr_definition class_body
    (76) class_body -> . method_header method_body class_body
    (77) class_body -> . PUBLIC method_header method_body class_body
    (78) class_body -> . PRIVATE method_header method_body class_body
    (79) attr_definition -> . PUBLIC SHARED CONST type var_list
    (80) attr_definition -> . PUBLIC CONST SHARED type var_list
    (81) attr_definition -> . PRIVATE SHARED CONST type var_list
    (82) attr_definition -> . PRIVATE CONST SHARED type var_list
    (83) attr_definition -> . PUBLIC SHARED type var_list
    (84) attr_definition -> . PUBLIC CONST type var_list
    (85) attr_definition -> . SHARED CONST type var_list
    (86) attr_definition -> . CONST SHARED type var_list
    (87) attr_definition -> . PRIVATE SHARED type var_list
    (88) attr_definition -> . PRIVATE CONST type var_list
    (89) attr_definition -> . PUBLIC type var_list
    (90) attr_definition -> . SHARED type var_list
    (91) attr_definition -> . CONST type var_list
    (92) attr_definition -> . PRIVATE type var_list
    (93) attr_definition -> . type var_list
    (94) method_header -> . METHOD ID_LP arg_list ARROW type COLON
    (95) method_header -> . METHOD ID_LP arg_list COLON
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    ENDCLASS        shift and go to state 53
    PUBLIC          shift and go to state 56
    PRIVATE         shift and go to state 57
    SHARED          shift and go to state 58
    CONST           shift and go to state 59
    METHOD          shift and go to state 61
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    class_body                     shift and go to state 274
    attr_definition                shift and go to state 54
    method_header                  shift and go to state 55
    type                           shift and go to state 60

state 161

    (3) main_body -> stm main_body .

    $end            reduce using rule 3 (main_body -> stm main_body .)


state 162

    (4) main_body -> var_definition main_body .

    $end            reduce using rule 4 (main_body -> var_definition main_body .)


state 163

    (72) stm -> ID_COLON ustm .

    ENDMAIN         reduce using rule 72 (stm -> ID_COLON ustm .)
    ID_COLON        reduce using rule 72 (stm -> ID_COLON ustm .)
    PERMANENT       reduce using rule 72 (stm -> ID_COLON ustm .)
    CONST           reduce using rule 72 (stm -> ID_COLON ustm .)
    BOOL            reduce using rule 72 (stm -> ID_COLON ustm .)
    CHAR            reduce using rule 72 (stm -> ID_COLON ustm .)
    STRING          reduce using rule 72 (stm -> ID_COLON ustm .)
    INT             reduce using rule 72 (stm -> ID_COLON ustm .)
    FLOAT           reduce using rule 72 (stm -> ID_COLON ustm .)
    ID              reduce using rule 72 (stm -> ID_COLON ustm .)
    BOOL_LS         reduce using rule 72 (stm -> ID_COLON ustm .)
    CHAR_LS         reduce using rule 72 (stm -> ID_COLON ustm .)
    STRING_LS       reduce using rule 72 (stm -> ID_COLON ustm .)
    INT_LS          reduce using rule 72 (stm -> ID_COLON ustm .)
    FLOAT_LS        reduce using rule 72 (stm -> ID_COLON ustm .)
    ID_LS           reduce using rule 72 (stm -> ID_COLON ustm .)
    FILE            reduce using rule 72 (stm -> ID_COLON ustm .)
    SEMI            reduce using rule 72 (stm -> ID_COLON ustm .)
    RETURN          reduce using rule 72 (stm -> ID_COLON ustm .)
    PRETURN         reduce using rule 72 (stm -> ID_COLON ustm .)
    IF              reduce using rule 72 (stm -> ID_COLON ustm .)
    WHILE           reduce using rule 72 (stm -> ID_COLON ustm .)
    FOR             reduce using rule 72 (stm -> ID_COLON ustm .)
    GOTO            reduce using rule 72 (stm -> ID_COLON ustm .)
    BREAK           reduce using rule 72 (stm -> ID_COLON ustm .)
    CONTINUE        reduce using rule 72 (stm -> ID_COLON ustm .)
    GUARD           reduce using rule 72 (stm -> ID_COLON ustm .)
    RAISE           reduce using rule 72 (stm -> ID_COLON ustm .)
    TERMINATE       reduce using rule 72 (stm -> ID_COLON ustm .)
    ID_LP           reduce using rule 72 (stm -> ID_COLON ustm .)
    BOOL_LP         reduce using rule 72 (stm -> ID_COLON ustm .)
    CHAR_LP         reduce using rule 72 (stm -> ID_COLON ustm .)
    STRING_LP       reduce using rule 72 (stm -> ID_COLON ustm .)
    INT_LP          reduce using rule 72 (stm -> ID_COLON ustm .)
    FLOAT_LP        reduce using rule 72 (stm -> ID_COLON ustm .)
    FIN_DOT         reduce using rule 72 (stm -> ID_COLON ustm .)
    FOUT_DOT        reduce using rule 72 (stm -> ID_COLON ustm .)
    IDOF_LP         reduce using rule 72 (stm -> ID_COLON ustm .)
    SIZEOF_LP       reduce using rule 72 (stm -> ID_COLON ustm .)
    TYPEOF_LP       reduce using rule 72 (stm -> ID_COLON ustm .)
    PARENT_DOT      reduce using rule 72 (stm -> ID_COLON ustm .)
    ID_DOT          reduce using rule 72 (stm -> ID_COLON ustm .)
    ENDMETHOD       reduce using rule 72 (stm -> ID_COLON ustm .)
    ENDWHILE        reduce using rule 72 (stm -> ID_COLON ustm .)
    CATCH           reduce using rule 72 (stm -> ID_COLON ustm .)
    ENDIF           reduce using rule 72 (stm -> ID_COLON ustm .)
    ELSE            reduce using rule 72 (stm -> ID_COLON ustm .)
    ENDFOR          reduce using rule 72 (stm -> ID_COLON ustm .)
    ENDCATCH        reduce using rule 72 (stm -> ID_COLON ustm .)
    STRING_LIT      reduce using rule 72 (stm -> ID_COLON ustm .)


state 164

    (189) arr -> ID_LS COLON . RS
    (190) arr -> ID_LS COLON . expression RS
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    RS              shift and go to state 275
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 276
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 165

    (191) arr -> ID_LS expression . COLON RS
    (192) arr -> ID_LS expression . COLON expression RS
    (197) arr -> ID_LS expression . RS arr_tail
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    COLON           shift and go to state 277
    RS              shift and go to state 278
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 166

    (128) assig_stm -> storage ASSIG . expression SEMI
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 279
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 167

    (129) passig_stm -> storage PASSIG . expression SEMI
    (130) passig_stm -> storage PASSIG . ALLOC ID_LP par_list SEMI
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ALLOC           shift and go to state 281
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 280
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 168

    (201) call -> ID_LP par_list .

    SEMI            reduce using rule 201 (call -> ID_LP par_list .)
    COMMA           reduce using rule 201 (call -> ID_LP par_list .)
    PLUS            reduce using rule 201 (call -> ID_LP par_list .)
    MINUS           reduce using rule 201 (call -> ID_LP par_list .)
    STAR            reduce using rule 201 (call -> ID_LP par_list .)
    DIV             reduce using rule 201 (call -> ID_LP par_list .)
    IDIV            reduce using rule 201 (call -> ID_LP par_list .)
    MOD             reduce using rule 201 (call -> ID_LP par_list .)
    AND             reduce using rule 201 (call -> ID_LP par_list .)
    OR              reduce using rule 201 (call -> ID_LP par_list .)
    LT              reduce using rule 201 (call -> ID_LP par_list .)
    LE              reduce using rule 201 (call -> ID_LP par_list .)
    GT              reduce using rule 201 (call -> ID_LP par_list .)
    GE              reduce using rule 201 (call -> ID_LP par_list .)
    EQ              reduce using rule 201 (call -> ID_LP par_list .)
    NEQ             reduce using rule 201 (call -> ID_LP par_list .)
    COLON           reduce using rule 201 (call -> ID_LP par_list .)
    RS              reduce using rule 201 (call -> ID_LP par_list .)
    RP              reduce using rule 201 (call -> ID_LP par_list .)
    THEN            reduce using rule 201 (call -> ID_LP par_list .)
    DO              reduce using rule 201 (call -> ID_LP par_list .)


state 169

    (222) par_list -> RP .

    SEMI            reduce using rule 222 (par_list -> RP .)
    COMMA           reduce using rule 222 (par_list -> RP .)
    PLUS            reduce using rule 222 (par_list -> RP .)
    MINUS           reduce using rule 222 (par_list -> RP .)
    STAR            reduce using rule 222 (par_list -> RP .)
    DIV             reduce using rule 222 (par_list -> RP .)
    IDIV            reduce using rule 222 (par_list -> RP .)
    MOD             reduce using rule 222 (par_list -> RP .)
    AND             reduce using rule 222 (par_list -> RP .)
    OR              reduce using rule 222 (par_list -> RP .)
    LT              reduce using rule 222 (par_list -> RP .)
    LE              reduce using rule 222 (par_list -> RP .)
    GT              reduce using rule 222 (par_list -> RP .)
    GE              reduce using rule 222 (par_list -> RP .)
    EQ              reduce using rule 222 (par_list -> RP .)
    NEQ             reduce using rule 222 (par_list -> RP .)
    COLON           reduce using rule 222 (par_list -> RP .)
    RS              reduce using rule 222 (par_list -> RP .)
    RP              reduce using rule 222 (par_list -> RP .)
    THEN            reduce using rule 222 (par_list -> RP .)
    DO              reduce using rule 222 (par_list -> RP .)


state 170

    (223) par_list -> expression . RP
    (224) par_list -> expression . COMMA par_list_tail
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RP              shift and go to state 282
    COMMA           shift and go to state 283
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 171

    (153) return_stm -> RETURN SEMI .

    ENDMAIN         reduce using rule 153 (return_stm -> RETURN SEMI .)
    ID_COLON        reduce using rule 153 (return_stm -> RETURN SEMI .)
    PERMANENT       reduce using rule 153 (return_stm -> RETURN SEMI .)
    CONST           reduce using rule 153 (return_stm -> RETURN SEMI .)
    BOOL            reduce using rule 153 (return_stm -> RETURN SEMI .)
    CHAR            reduce using rule 153 (return_stm -> RETURN SEMI .)
    STRING          reduce using rule 153 (return_stm -> RETURN SEMI .)
    INT             reduce using rule 153 (return_stm -> RETURN SEMI .)
    FLOAT           reduce using rule 153 (return_stm -> RETURN SEMI .)
    ID              reduce using rule 153 (return_stm -> RETURN SEMI .)
    BOOL_LS         reduce using rule 153 (return_stm -> RETURN SEMI .)
    CHAR_LS         reduce using rule 153 (return_stm -> RETURN SEMI .)
    STRING_LS       reduce using rule 153 (return_stm -> RETURN SEMI .)
    INT_LS          reduce using rule 153 (return_stm -> RETURN SEMI .)
    FLOAT_LS        reduce using rule 153 (return_stm -> RETURN SEMI .)
    ID_LS           reduce using rule 153 (return_stm -> RETURN SEMI .)
    FILE            reduce using rule 153 (return_stm -> RETURN SEMI .)
    SEMI            reduce using rule 153 (return_stm -> RETURN SEMI .)
    RETURN          reduce using rule 153 (return_stm -> RETURN SEMI .)
    PRETURN         reduce using rule 153 (return_stm -> RETURN SEMI .)
    IF              reduce using rule 153 (return_stm -> RETURN SEMI .)
    WHILE           reduce using rule 153 (return_stm -> RETURN SEMI .)
    FOR             reduce using rule 153 (return_stm -> RETURN SEMI .)
    GOTO            reduce using rule 153 (return_stm -> RETURN SEMI .)
    BREAK           reduce using rule 153 (return_stm -> RETURN SEMI .)
    CONTINUE        reduce using rule 153 (return_stm -> RETURN SEMI .)
    GUARD           reduce using rule 153 (return_stm -> RETURN SEMI .)
    RAISE           reduce using rule 153 (return_stm -> RETURN SEMI .)
    TERMINATE       reduce using rule 153 (return_stm -> RETURN SEMI .)
    ID_LP           reduce using rule 153 (return_stm -> RETURN SEMI .)
    BOOL_LP         reduce using rule 153 (return_stm -> RETURN SEMI .)
    CHAR_LP         reduce using rule 153 (return_stm -> RETURN SEMI .)
    STRING_LP       reduce using rule 153 (return_stm -> RETURN SEMI .)
    INT_LP          reduce using rule 153 (return_stm -> RETURN SEMI .)
    FLOAT_LP        reduce using rule 153 (return_stm -> RETURN SEMI .)
    FIN_DOT         reduce using rule 153 (return_stm -> RETURN SEMI .)
    FOUT_DOT        reduce using rule 153 (return_stm -> RETURN SEMI .)
    IDOF_LP         reduce using rule 153 (return_stm -> RETURN SEMI .)
    SIZEOF_LP       reduce using rule 153 (return_stm -> RETURN SEMI .)
    TYPEOF_LP       reduce using rule 153 (return_stm -> RETURN SEMI .)
    PARENT_DOT      reduce using rule 153 (return_stm -> RETURN SEMI .)
    ID_DOT          reduce using rule 153 (return_stm -> RETURN SEMI .)
    ENDMETHOD       reduce using rule 153 (return_stm -> RETURN SEMI .)
    ENDWHILE        reduce using rule 153 (return_stm -> RETURN SEMI .)
    CATCH           reduce using rule 153 (return_stm -> RETURN SEMI .)
    ENDIF           reduce using rule 153 (return_stm -> RETURN SEMI .)
    ELSE            reduce using rule 153 (return_stm -> RETURN SEMI .)
    ENDFOR          reduce using rule 153 (return_stm -> RETURN SEMI .)
    ENDCATCH        reduce using rule 153 (return_stm -> RETURN SEMI .)
    STRING_LIT      reduce using rule 153 (return_stm -> RETURN SEMI .)


state 172

    (154) return_stm -> RETURN expression . SEMI
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            shift and go to state 284
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 173

    (155) preturn_stm -> PRETURN expression . SEMI
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            shift and go to state 285
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 174

    (131) call_stm -> call SEMI .

    ENDMAIN         reduce using rule 131 (call_stm -> call SEMI .)
    ID_COLON        reduce using rule 131 (call_stm -> call SEMI .)
    PERMANENT       reduce using rule 131 (call_stm -> call SEMI .)
    CONST           reduce using rule 131 (call_stm -> call SEMI .)
    BOOL            reduce using rule 131 (call_stm -> call SEMI .)
    CHAR            reduce using rule 131 (call_stm -> call SEMI .)
    STRING          reduce using rule 131 (call_stm -> call SEMI .)
    INT             reduce using rule 131 (call_stm -> call SEMI .)
    FLOAT           reduce using rule 131 (call_stm -> call SEMI .)
    ID              reduce using rule 131 (call_stm -> call SEMI .)
    BOOL_LS         reduce using rule 131 (call_stm -> call SEMI .)
    CHAR_LS         reduce using rule 131 (call_stm -> call SEMI .)
    STRING_LS       reduce using rule 131 (call_stm -> call SEMI .)
    INT_LS          reduce using rule 131 (call_stm -> call SEMI .)
    FLOAT_LS        reduce using rule 131 (call_stm -> call SEMI .)
    ID_LS           reduce using rule 131 (call_stm -> call SEMI .)
    FILE            reduce using rule 131 (call_stm -> call SEMI .)
    SEMI            reduce using rule 131 (call_stm -> call SEMI .)
    RETURN          reduce using rule 131 (call_stm -> call SEMI .)
    PRETURN         reduce using rule 131 (call_stm -> call SEMI .)
    IF              reduce using rule 131 (call_stm -> call SEMI .)
    WHILE           reduce using rule 131 (call_stm -> call SEMI .)
    FOR             reduce using rule 131 (call_stm -> call SEMI .)
    GOTO            reduce using rule 131 (call_stm -> call SEMI .)
    BREAK           reduce using rule 131 (call_stm -> call SEMI .)
    CONTINUE        reduce using rule 131 (call_stm -> call SEMI .)
    GUARD           reduce using rule 131 (call_stm -> call SEMI .)
    RAISE           reduce using rule 131 (call_stm -> call SEMI .)
    TERMINATE       reduce using rule 131 (call_stm -> call SEMI .)
    ID_LP           reduce using rule 131 (call_stm -> call SEMI .)
    BOOL_LP         reduce using rule 131 (call_stm -> call SEMI .)
    CHAR_LP         reduce using rule 131 (call_stm -> call SEMI .)
    STRING_LP       reduce using rule 131 (call_stm -> call SEMI .)
    INT_LP          reduce using rule 131 (call_stm -> call SEMI .)
    FLOAT_LP        reduce using rule 131 (call_stm -> call SEMI .)
    FIN_DOT         reduce using rule 131 (call_stm -> call SEMI .)
    FOUT_DOT        reduce using rule 131 (call_stm -> call SEMI .)
    IDOF_LP         reduce using rule 131 (call_stm -> call SEMI .)
    SIZEOF_LP       reduce using rule 131 (call_stm -> call SEMI .)
    TYPEOF_LP       reduce using rule 131 (call_stm -> call SEMI .)
    PARENT_DOT      reduce using rule 131 (call_stm -> call SEMI .)
    ID_DOT          reduce using rule 131 (call_stm -> call SEMI .)
    ENDMETHOD       reduce using rule 131 (call_stm -> call SEMI .)
    ENDWHILE        reduce using rule 131 (call_stm -> call SEMI .)
    CATCH           reduce using rule 131 (call_stm -> call SEMI .)
    ENDIF           reduce using rule 131 (call_stm -> call SEMI .)
    ELSE            reduce using rule 131 (call_stm -> call SEMI .)
    ENDFOR          reduce using rule 131 (call_stm -> call SEMI .)
    ENDCATCH        reduce using rule 131 (call_stm -> call SEMI .)
    STRING_LIT      reduce using rule 131 (call_stm -> call SEMI .)


state 175

    (132) if_stm -> IF expression . THEN stms ENDIF
    (133) if_stm -> IF expression . THEN stms ELSE stms ENDIF
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    THEN            shift and go to state 286
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 176

    (134) while_stm -> WHILE expression . DO stms ENDWHILE
    (135) while_stm -> WHILE expression . DO ENDWHILE
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    DO              shift and go to state 287
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 177

    (136) while_stm -> WHILE DO . stms ENDWHILE
    (137) while_stm -> WHILE DO . ENDWHILE
    (70) stms -> . stm stms
    (71) stms -> . stm
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ENDWHILE        shift and go to state 289
    ID_COLON        shift and go to state 68
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    ID_LS           shift and go to state 136
    ID              shift and go to state 119
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    stms                           shift and go to state 288
    stm                            shift and go to state 290
    ustm                           shift and go to state 69
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 178

    (138) for_stm -> FOR prologue . condition epilogue stms ENDFOR
    (139) for_stm -> FOR prologue . condition epilogue ENDFOR
    (145) condition -> . expression SEMI
    (146) condition -> . SEMI
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    SEMI            shift and go to state 293
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    condition                      shift and go to state 291
    expression                     shift and go to state 292
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 179

    (141) prologue -> storage . ASSIG expression prologue_tail

    ASSIG           shift and go to state 294


state 180

    (142) prologue -> SEMI .

    SEMI            reduce using rule 142 (prologue -> SEMI .)
    MINUS           reduce using rule 142 (prologue -> SEMI .)
    NOT             reduce using rule 142 (prologue -> SEMI .)
    LP              reduce using rule 142 (prologue -> SEMI .)
    INT_LIT         reduce using rule 142 (prologue -> SEMI .)
    FLOAT_LIT       reduce using rule 142 (prologue -> SEMI .)
    FALSE           reduce using rule 142 (prologue -> SEMI .)
    TRUE            reduce using rule 142 (prologue -> SEMI .)
    NOREF           reduce using rule 142 (prologue -> SEMI .)
    CHAR_LIT        reduce using rule 142 (prologue -> SEMI .)
    STRING_LIT      reduce using rule 142 (prologue -> SEMI .)
    ID              reduce using rule 142 (prologue -> SEMI .)
    ID_LS           reduce using rule 142 (prologue -> SEMI .)
    ID_LP           reduce using rule 142 (prologue -> SEMI .)
    BOOL_LP         reduce using rule 142 (prologue -> SEMI .)
    CHAR_LP         reduce using rule 142 (prologue -> SEMI .)
    STRING_LP       reduce using rule 142 (prologue -> SEMI .)
    INT_LP          reduce using rule 142 (prologue -> SEMI .)
    FLOAT_LP        reduce using rule 142 (prologue -> SEMI .)
    FIN_DOT         reduce using rule 142 (prologue -> SEMI .)
    FOUT_DOT        reduce using rule 142 (prologue -> SEMI .)
    IDOF_LP         reduce using rule 142 (prologue -> SEMI .)
    SIZEOF_LP       reduce using rule 142 (prologue -> SEMI .)
    TYPEOF_LP       reduce using rule 142 (prologue -> SEMI .)
    PARENT_DOT      reduce using rule 142 (prologue -> SEMI .)
    ID_DOT          reduce using rule 142 (prologue -> SEMI .)


state 181

    (193) arr -> qualifier . ID_LS COLON RS
    (194) arr -> qualifier . ID_LS COLON expression RS
    (195) arr -> qualifier . ID_LS expression COLON RS
    (196) arr -> qualifier . ID_LS expression COLON expression RS
    (198) arr -> qualifier . ID_LS expression RS arr_tail
    (221) var -> qualifier . ID

    ID_LS           shift and go to state 202
    ID              shift and go to state 203


state 182

    (140) goto_stm -> GOTO ID . SEMI

    SEMI            shift and go to state 295


state 183

    (124) break_stm -> BREAK SEMI .

    ENDMAIN         reduce using rule 124 (break_stm -> BREAK SEMI .)
    ID_COLON        reduce using rule 124 (break_stm -> BREAK SEMI .)
    PERMANENT       reduce using rule 124 (break_stm -> BREAK SEMI .)
    CONST           reduce using rule 124 (break_stm -> BREAK SEMI .)
    BOOL            reduce using rule 124 (break_stm -> BREAK SEMI .)
    CHAR            reduce using rule 124 (break_stm -> BREAK SEMI .)
    STRING          reduce using rule 124 (break_stm -> BREAK SEMI .)
    INT             reduce using rule 124 (break_stm -> BREAK SEMI .)
    FLOAT           reduce using rule 124 (break_stm -> BREAK SEMI .)
    ID              reduce using rule 124 (break_stm -> BREAK SEMI .)
    BOOL_LS         reduce using rule 124 (break_stm -> BREAK SEMI .)
    CHAR_LS         reduce using rule 124 (break_stm -> BREAK SEMI .)
    STRING_LS       reduce using rule 124 (break_stm -> BREAK SEMI .)
    INT_LS          reduce using rule 124 (break_stm -> BREAK SEMI .)
    FLOAT_LS        reduce using rule 124 (break_stm -> BREAK SEMI .)
    ID_LS           reduce using rule 124 (break_stm -> BREAK SEMI .)
    FILE            reduce using rule 124 (break_stm -> BREAK SEMI .)
    SEMI            reduce using rule 124 (break_stm -> BREAK SEMI .)
    RETURN          reduce using rule 124 (break_stm -> BREAK SEMI .)
    PRETURN         reduce using rule 124 (break_stm -> BREAK SEMI .)
    IF              reduce using rule 124 (break_stm -> BREAK SEMI .)
    WHILE           reduce using rule 124 (break_stm -> BREAK SEMI .)
    FOR             reduce using rule 124 (break_stm -> BREAK SEMI .)
    GOTO            reduce using rule 124 (break_stm -> BREAK SEMI .)
    BREAK           reduce using rule 124 (break_stm -> BREAK SEMI .)
    CONTINUE        reduce using rule 124 (break_stm -> BREAK SEMI .)
    GUARD           reduce using rule 124 (break_stm -> BREAK SEMI .)
    RAISE           reduce using rule 124 (break_stm -> BREAK SEMI .)
    TERMINATE       reduce using rule 124 (break_stm -> BREAK SEMI .)
    ID_LP           reduce using rule 124 (break_stm -> BREAK SEMI .)
    BOOL_LP         reduce using rule 124 (break_stm -> BREAK SEMI .)
    CHAR_LP         reduce using rule 124 (break_stm -> BREAK SEMI .)
    STRING_LP       reduce using rule 124 (break_stm -> BREAK SEMI .)
    INT_LP          reduce using rule 124 (break_stm -> BREAK SEMI .)
    FLOAT_LP        reduce using rule 124 (break_stm -> BREAK SEMI .)
    FIN_DOT         reduce using rule 124 (break_stm -> BREAK SEMI .)
    FOUT_DOT        reduce using rule 124 (break_stm -> BREAK SEMI .)
    IDOF_LP         reduce using rule 124 (break_stm -> BREAK SEMI .)
    SIZEOF_LP       reduce using rule 124 (break_stm -> BREAK SEMI .)
    TYPEOF_LP       reduce using rule 124 (break_stm -> BREAK SEMI .)
    PARENT_DOT      reduce using rule 124 (break_stm -> BREAK SEMI .)
    ID_DOT          reduce using rule 124 (break_stm -> BREAK SEMI .)
    ENDMETHOD       reduce using rule 124 (break_stm -> BREAK SEMI .)
    ENDWHILE        reduce using rule 124 (break_stm -> BREAK SEMI .)
    CATCH           reduce using rule 124 (break_stm -> BREAK SEMI .)
    ENDIF           reduce using rule 124 (break_stm -> BREAK SEMI .)
    ELSE            reduce using rule 124 (break_stm -> BREAK SEMI .)
    ENDFOR          reduce using rule 124 (break_stm -> BREAK SEMI .)
    ENDCATCH        reduce using rule 124 (break_stm -> BREAK SEMI .)
    STRING_LIT      reduce using rule 124 (break_stm -> BREAK SEMI .)


state 184

    (125) continue_stm -> CONTINUE SEMI .

    ENDMAIN         reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    ID_COLON        reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    PERMANENT       reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    CONST           reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    BOOL            reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    CHAR            reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    STRING          reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    INT             reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    FLOAT           reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    ID              reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    BOOL_LS         reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    CHAR_LS         reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    STRING_LS       reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    INT_LS          reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    FLOAT_LS        reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    ID_LS           reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    FILE            reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    SEMI            reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    RETURN          reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    PRETURN         reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    IF              reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    WHILE           reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    FOR             reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    GOTO            reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    BREAK           reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    CONTINUE        reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    GUARD           reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    RAISE           reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    TERMINATE       reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    ID_LP           reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    BOOL_LP         reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    CHAR_LP         reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    STRING_LP       reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    INT_LP          reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    FLOAT_LP        reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    FIN_DOT         reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    FOUT_DOT        reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    IDOF_LP         reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    SIZEOF_LP       reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    TYPEOF_LP       reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    PARENT_DOT      reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    ID_DOT          reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    ENDMETHOD       reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    ENDWHILE        reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    CATCH           reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    ENDIF           reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    ELSE            reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    ENDFOR          reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    ENDCATCH        reduce using rule 125 (continue_stm -> CONTINUE SEMI .)
    STRING_LIT      reduce using rule 125 (continue_stm -> CONTINUE SEMI .)


state 185

    (156) guard_stm -> GUARD COLON . stms CATCH COLON catch_block
    (70) stms -> . stm stms
    (71) stms -> . stm
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ID_COLON        shift and go to state 68
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    ID_LS           shift and go to state 136
    ID              shift and go to state 119
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    stms                           shift and go to state 296
    stm                            shift and go to state 290
    ustm                           shift and go to state 69
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 186

    (160) raise_stm -> RAISE expression . SEMI
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            shift and go to state 297
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 187

    (126) terminate_stm -> TERMINATE SEMI .

    ENDMAIN         reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    ID_COLON        reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    PERMANENT       reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    CONST           reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    BOOL            reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    CHAR            reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    STRING          reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    INT             reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    FLOAT           reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    ID              reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    BOOL_LS         reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    CHAR_LS         reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    STRING_LS       reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    INT_LS          reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    FLOAT_LS        reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    ID_LS           reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    FILE            reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    SEMI            reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    RETURN          reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    PRETURN         reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    IF              reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    WHILE           reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    FOR             reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    GOTO            reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    BREAK           reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    CONTINUE        reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    GUARD           reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    RAISE           reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    TERMINATE       reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    ID_LP           reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    BOOL_LP         reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    CHAR_LP         reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    STRING_LP       reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    INT_LP          reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    FLOAT_LP        reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    FIN_DOT         reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    FOUT_DOT        reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    IDOF_LP         reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    SIZEOF_LP       reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    TYPEOF_LP       reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    PARENT_DOT      reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    ID_DOT          reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    ENDMETHOD       reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    ENDWHILE        reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    CATCH           reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    ENDIF           reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    ELSE            reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    ENDFOR          reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    ENDCATCH        reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)
    STRING_LIT      reduce using rule 126 (terminate_stm -> TERMINATE SEMI .)


state 188

    (202) call -> BOOL_LP expression . RP
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RP              shift and go to state 298
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 189

    (203) call -> CHAR_LP expression . RP
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RP              shift and go to state 299
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 190

    (204) call -> STRING_LP expression . RP
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RP              shift and go to state 300
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 191

    (205) call -> INT_LP expression . RP
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RP              shift and go to state 301
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 192

    (206) call -> FLOAT_LP expression . RP
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RP              shift and go to state 302
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 193

    (207) call -> FIN_DOT ID_LP . par_list
    (222) par_list -> . RP
    (223) par_list -> . expression RP
    (224) par_list -> . expression COMMA par_list_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    RP              shift and go to state 169
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    par_list                       shift and go to state 303
    expression                     shift and go to state 170
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 194

    (208) call -> FOUT_DOT ID_LP . par_list
    (222) par_list -> . RP
    (223) par_list -> . expression RP
    (224) par_list -> . expression COMMA par_list_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    RP              shift and go to state 169
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    par_list                       shift and go to state 304
    expression                     shift and go to state 170
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 195

    (209) call -> IDOF_LP expression . RP
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RP              shift and go to state 305
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 196

    (210) call -> SIZEOF_LP size_par . RP

    RP              shift and go to state 306


state 197

    (213) size_par -> ID .

    RP              reduce using rule 213 (size_par -> ID .)


state 198

    (214) size_par -> ID_LS . type_tail
    (46) type_tail -> . RLS type_tail
    (47) type_tail -> . RS

    RLS             shift and go to state 36
    RS              shift and go to state 37

    type_tail                      shift and go to state 307

state 199

    (215) size_par -> qualifier . ID
    (216) size_par -> qualifier . ID_LS type_tail

    ID              shift and go to state 308
    ID_LS           shift and go to state 309


state 200

    (211) call -> TYPEOF_LP expression . RP
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RP              shift and go to state 310
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 201

    (212) call -> qualifier ID_LP . par_list
    (222) par_list -> . RP
    (223) par_list -> . expression RP
    (224) par_list -> . expression COMMA par_list_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    RP              shift and go to state 169
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    qualifier                      shift and go to state 135
    par_list                       shift and go to state 311
    expression                     shift and go to state 170
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134

state 202

    (193) arr -> qualifier ID_LS . COLON RS
    (194) arr -> qualifier ID_LS . COLON expression RS
    (195) arr -> qualifier ID_LS . expression COLON RS
    (196) arr -> qualifier ID_LS . expression COLON expression RS
    (198) arr -> qualifier ID_LS . expression RS arr_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    COLON           shift and go to state 312
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    qualifier                      shift and go to state 135
    expression                     shift and go to state 313
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134

state 203

    (221) var -> qualifier ID .

    ASSIG           reduce using rule 221 (var -> qualifier ID .)
    PASSIG          reduce using rule 221 (var -> qualifier ID .)
    SEMI            reduce using rule 221 (var -> qualifier ID .)
    COMMA           reduce using rule 221 (var -> qualifier ID .)
    PLUS            reduce using rule 221 (var -> qualifier ID .)
    MINUS           reduce using rule 221 (var -> qualifier ID .)
    STAR            reduce using rule 221 (var -> qualifier ID .)
    DIV             reduce using rule 221 (var -> qualifier ID .)
    IDIV            reduce using rule 221 (var -> qualifier ID .)
    MOD             reduce using rule 221 (var -> qualifier ID .)
    AND             reduce using rule 221 (var -> qualifier ID .)
    OR              reduce using rule 221 (var -> qualifier ID .)
    LT              reduce using rule 221 (var -> qualifier ID .)
    LE              reduce using rule 221 (var -> qualifier ID .)
    GT              reduce using rule 221 (var -> qualifier ID .)
    GE              reduce using rule 221 (var -> qualifier ID .)
    EQ              reduce using rule 221 (var -> qualifier ID .)
    NEQ             reduce using rule 221 (var -> qualifier ID .)
    COLON           reduce using rule 221 (var -> qualifier ID .)
    RS              reduce using rule 221 (var -> qualifier ID .)
    RP              reduce using rule 221 (var -> qualifier ID .)
    THEN            reduce using rule 221 (var -> qualifier ID .)
    DO              reduce using rule 221 (var -> qualifier ID .)


state 204

    (217) qualifier -> PARENT_DOT qualifier .

    ID_LP           reduce using rule 217 (qualifier -> PARENT_DOT qualifier .)
    ID_LS           reduce using rule 217 (qualifier -> PARENT_DOT qualifier .)
    ID              reduce using rule 217 (qualifier -> PARENT_DOT qualifier .)


state 205

    (218) qualifier -> ID_DOT qualifier .

    ID_LP           reduce using rule 218 (qualifier -> ID_DOT qualifier .)
    ID_LS           reduce using rule 218 (qualifier -> ID_DOT qualifier .)
    ID              reduce using rule 218 (qualifier -> ID_DOT qualifier .)


state 206

    (25) var_list_tail -> ID SEMI .

    PERMANENT       reduce using rule 25 (var_list_tail -> ID SEMI .)
    CONST           reduce using rule 25 (var_list_tail -> ID SEMI .)
    CLASS           reduce using rule 25 (var_list_tail -> ID SEMI .)
    BOOL            reduce using rule 25 (var_list_tail -> ID SEMI .)
    CHAR            reduce using rule 25 (var_list_tail -> ID SEMI .)
    STRING          reduce using rule 25 (var_list_tail -> ID SEMI .)
    INT             reduce using rule 25 (var_list_tail -> ID SEMI .)
    FLOAT           reduce using rule 25 (var_list_tail -> ID SEMI .)
    ID              reduce using rule 25 (var_list_tail -> ID SEMI .)
    BOOL_LS         reduce using rule 25 (var_list_tail -> ID SEMI .)
    CHAR_LS         reduce using rule 25 (var_list_tail -> ID SEMI .)
    STRING_LS       reduce using rule 25 (var_list_tail -> ID SEMI .)
    INT_LS          reduce using rule 25 (var_list_tail -> ID SEMI .)
    FLOAT_LS        reduce using rule 25 (var_list_tail -> ID SEMI .)
    ID_LS           reduce using rule 25 (var_list_tail -> ID SEMI .)
    FILE            reduce using rule 25 (var_list_tail -> ID SEMI .)
    MAIN            reduce using rule 25 (var_list_tail -> ID SEMI .)
    ENDMAIN         reduce using rule 25 (var_list_tail -> ID SEMI .)
    ID_COLON        reduce using rule 25 (var_list_tail -> ID SEMI .)
    SEMI            reduce using rule 25 (var_list_tail -> ID SEMI .)
    RETURN          reduce using rule 25 (var_list_tail -> ID SEMI .)
    PRETURN         reduce using rule 25 (var_list_tail -> ID SEMI .)
    IF              reduce using rule 25 (var_list_tail -> ID SEMI .)
    WHILE           reduce using rule 25 (var_list_tail -> ID SEMI .)
    FOR             reduce using rule 25 (var_list_tail -> ID SEMI .)
    GOTO            reduce using rule 25 (var_list_tail -> ID SEMI .)
    BREAK           reduce using rule 25 (var_list_tail -> ID SEMI .)
    CONTINUE        reduce using rule 25 (var_list_tail -> ID SEMI .)
    GUARD           reduce using rule 25 (var_list_tail -> ID SEMI .)
    RAISE           reduce using rule 25 (var_list_tail -> ID SEMI .)
    TERMINATE       reduce using rule 25 (var_list_tail -> ID SEMI .)
    ID_LP           reduce using rule 25 (var_list_tail -> ID SEMI .)
    BOOL_LP         reduce using rule 25 (var_list_tail -> ID SEMI .)
    CHAR_LP         reduce using rule 25 (var_list_tail -> ID SEMI .)
    STRING_LP       reduce using rule 25 (var_list_tail -> ID SEMI .)
    INT_LP          reduce using rule 25 (var_list_tail -> ID SEMI .)
    FLOAT_LP        reduce using rule 25 (var_list_tail -> ID SEMI .)
    FIN_DOT         reduce using rule 25 (var_list_tail -> ID SEMI .)
    FOUT_DOT        reduce using rule 25 (var_list_tail -> ID SEMI .)
    IDOF_LP         reduce using rule 25 (var_list_tail -> ID SEMI .)
    SIZEOF_LP       reduce using rule 25 (var_list_tail -> ID SEMI .)
    TYPEOF_LP       reduce using rule 25 (var_list_tail -> ID SEMI .)
    PARENT_DOT      reduce using rule 25 (var_list_tail -> ID SEMI .)
    ID_DOT          reduce using rule 25 (var_list_tail -> ID SEMI .)
    ENDMETHOD       reduce using rule 25 (var_list_tail -> ID SEMI .)
    ENDCLASS        reduce using rule 25 (var_list_tail -> ID SEMI .)
    PUBLIC          reduce using rule 25 (var_list_tail -> ID SEMI .)
    PRIVATE         reduce using rule 25 (var_list_tail -> ID SEMI .)
    SHARED          reduce using rule 25 (var_list_tail -> ID SEMI .)
    METHOD          reduce using rule 25 (var_list_tail -> ID SEMI .)


state 207

    (26) var_list_tail -> ID COMMA . var_list_tail
    (25) var_list_tail -> . ID SEMI
    (26) var_list_tail -> . ID COMMA var_list_tail
    (27) var_list_tail -> . ID ASSIG expression SEMI
    (28) var_list_tail -> . ID ASSIG expression COMMA var_list_tail
    (29) var_list_tail -> . ID PASSIG expression SEMI
    (30) var_list_tail -> . ID PASSIG expression COMMA var_list_tail
    (31) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (32) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 117

    var_list_tail                  shift and go to state 314

state 208

    (27) var_list_tail -> ID ASSIG . expression SEMI
    (28) var_list_tail -> ID ASSIG . expression COMMA var_list_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 315
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 209

    (29) var_list_tail -> ID PASSIG . expression SEMI
    (30) var_list_tail -> ID PASSIG . expression COMMA var_list_tail
    (31) var_list_tail -> ID PASSIG . ALLOC ID_LP par_list SEMI
    (32) var_list_tail -> ID PASSIG . ALLOC ID_LP par_list COMMA var_list_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ALLOC           shift and go to state 317
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 316
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 210

    (19) var_list -> ID ASSIG expression SEMI .

    PERMANENT       reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    CONST           reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    CLASS           reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    BOOL            reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    CHAR            reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    STRING          reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    INT             reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    FLOAT           reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    ID              reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    BOOL_LS         reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    CHAR_LS         reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    STRING_LS       reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    INT_LS          reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    FLOAT_LS        reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    ID_LS           reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    FILE            reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    MAIN            reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    ENDMAIN         reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    ID_COLON        reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    SEMI            reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    RETURN          reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    PRETURN         reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    IF              reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    WHILE           reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    FOR             reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    GOTO            reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    BREAK           reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    CONTINUE        reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    GUARD           reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    RAISE           reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    TERMINATE       reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    ID_LP           reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    BOOL_LP         reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    CHAR_LP         reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    STRING_LP       reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    INT_LP          reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    FLOAT_LP        reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    FIN_DOT         reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    FOUT_DOT        reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    IDOF_LP         reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    SIZEOF_LP       reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    TYPEOF_LP       reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    PARENT_DOT      reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    ID_DOT          reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    ENDMETHOD       reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    ENDCLASS        reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    PUBLIC          reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    PRIVATE         reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    SHARED          reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)
    METHOD          reduce using rule 19 (var_list -> ID ASSIG expression SEMI .)


state 211

    (20) var_list -> ID ASSIG expression COMMA . var_list_tail
    (25) var_list_tail -> . ID SEMI
    (26) var_list_tail -> . ID COMMA var_list_tail
    (27) var_list_tail -> . ID ASSIG expression SEMI
    (28) var_list_tail -> . ID ASSIG expression COMMA var_list_tail
    (29) var_list_tail -> . ID PASSIG expression SEMI
    (30) var_list_tail -> . ID PASSIG expression COMMA var_list_tail
    (31) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (32) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 117

    var_list_tail                  shift and go to state 318

state 212

    (162) expression -> expression PLUS . expression
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 319
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 213

    (163) expression -> expression MINUS . expression
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 320
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 214

    (164) expression -> expression STAR . expression
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 321
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 215

    (165) expression -> expression DIV . expression
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 322
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 216

    (166) expression -> expression IDIV . expression
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 323
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 217

    (167) expression -> expression MOD . expression
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 324
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 218

    (168) expression -> expression AND . expression
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 325
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 219

    (169) expression -> expression OR . expression
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 326
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 220

    (170) expression -> expression LT . expression
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 327
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 221

    (171) expression -> expression LE . expression
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 328
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 222

    (172) expression -> expression GT . expression
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 329
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 223

    (173) expression -> expression GE . expression
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 330
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 224

    (174) expression -> expression EQ . expression
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 331
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 225

    (175) expression -> expression NEQ . expression
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 332
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 226

    (176) expression -> MINUS simple_expression .

    SEMI            reduce using rule 176 (expression -> MINUS simple_expression .)
    COMMA           reduce using rule 176 (expression -> MINUS simple_expression .)
    PLUS            reduce using rule 176 (expression -> MINUS simple_expression .)
    MINUS           reduce using rule 176 (expression -> MINUS simple_expression .)
    STAR            reduce using rule 176 (expression -> MINUS simple_expression .)
    DIV             reduce using rule 176 (expression -> MINUS simple_expression .)
    IDIV            reduce using rule 176 (expression -> MINUS simple_expression .)
    MOD             reduce using rule 176 (expression -> MINUS simple_expression .)
    AND             reduce using rule 176 (expression -> MINUS simple_expression .)
    OR              reduce using rule 176 (expression -> MINUS simple_expression .)
    LT              reduce using rule 176 (expression -> MINUS simple_expression .)
    LE              reduce using rule 176 (expression -> MINUS simple_expression .)
    GT              reduce using rule 176 (expression -> MINUS simple_expression .)
    GE              reduce using rule 176 (expression -> MINUS simple_expression .)
    EQ              reduce using rule 176 (expression -> MINUS simple_expression .)
    NEQ             reduce using rule 176 (expression -> MINUS simple_expression .)
    COLON           reduce using rule 176 (expression -> MINUS simple_expression .)
    RS              reduce using rule 176 (expression -> MINUS simple_expression .)
    RP              reduce using rule 176 (expression -> MINUS simple_expression .)
    THEN            reduce using rule 176 (expression -> MINUS simple_expression .)
    DO              reduce using rule 176 (expression -> MINUS simple_expression .)


state 227

    (177) expression -> NOT simple_expression .

    SEMI            reduce using rule 177 (expression -> NOT simple_expression .)
    COMMA           reduce using rule 177 (expression -> NOT simple_expression .)
    PLUS            reduce using rule 177 (expression -> NOT simple_expression .)
    MINUS           reduce using rule 177 (expression -> NOT simple_expression .)
    STAR            reduce using rule 177 (expression -> NOT simple_expression .)
    DIV             reduce using rule 177 (expression -> NOT simple_expression .)
    IDIV            reduce using rule 177 (expression -> NOT simple_expression .)
    MOD             reduce using rule 177 (expression -> NOT simple_expression .)
    AND             reduce using rule 177 (expression -> NOT simple_expression .)
    OR              reduce using rule 177 (expression -> NOT simple_expression .)
    LT              reduce using rule 177 (expression -> NOT simple_expression .)
    LE              reduce using rule 177 (expression -> NOT simple_expression .)
    GT              reduce using rule 177 (expression -> NOT simple_expression .)
    GE              reduce using rule 177 (expression -> NOT simple_expression .)
    EQ              reduce using rule 177 (expression -> NOT simple_expression .)
    NEQ             reduce using rule 177 (expression -> NOT simple_expression .)
    COLON           reduce using rule 177 (expression -> NOT simple_expression .)
    RS              reduce using rule 177 (expression -> NOT simple_expression .)
    RP              reduce using rule 177 (expression -> NOT simple_expression .)
    THEN            reduce using rule 177 (expression -> NOT simple_expression .)
    DO              reduce using rule 177 (expression -> NOT simple_expression .)


state 228

    (178) simple_expression -> LP expression . RP
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RP              shift and go to state 333
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 229

    (21) var_list -> ID PASSIG expression SEMI .

    PERMANENT       reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    CONST           reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    CLASS           reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    BOOL            reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    CHAR            reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    STRING          reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    INT             reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    FLOAT           reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    ID              reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    BOOL_LS         reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    CHAR_LS         reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    STRING_LS       reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    INT_LS          reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    FLOAT_LS        reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    ID_LS           reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    FILE            reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    MAIN            reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    ENDMAIN         reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    ID_COLON        reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    SEMI            reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    RETURN          reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    PRETURN         reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    IF              reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    WHILE           reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    FOR             reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    GOTO            reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    BREAK           reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    CONTINUE        reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    GUARD           reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    RAISE           reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    TERMINATE       reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    ID_LP           reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    BOOL_LP         reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    CHAR_LP         reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    STRING_LP       reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    INT_LP          reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    FLOAT_LP        reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    FIN_DOT         reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    FOUT_DOT        reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    IDOF_LP         reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    SIZEOF_LP       reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    TYPEOF_LP       reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    PARENT_DOT      reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    ID_DOT          reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    ENDMETHOD       reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    ENDCLASS        reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    PUBLIC          reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    PRIVATE         reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    SHARED          reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)
    METHOD          reduce using rule 21 (var_list -> ID PASSIG expression SEMI .)


state 230

    (22) var_list -> ID PASSIG expression COMMA . var_list_tail
    (25) var_list_tail -> . ID SEMI
    (26) var_list_tail -> . ID COMMA var_list_tail
    (27) var_list_tail -> . ID ASSIG expression SEMI
    (28) var_list_tail -> . ID ASSIG expression COMMA var_list_tail
    (29) var_list_tail -> . ID PASSIG expression SEMI
    (30) var_list_tail -> . ID PASSIG expression COMMA var_list_tail
    (31) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (32) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 117

    var_list_tail                  shift and go to state 334

state 231

    (23) var_list -> ID PASSIG ALLOC ID_LP . par_list SEMI
    (24) var_list -> ID PASSIG ALLOC ID_LP . par_list COMMA var_list_tail
    (222) par_list -> . RP
    (223) par_list -> . expression RP
    (224) par_list -> . expression COMMA par_list_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    RP              shift and go to state 169
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    par_list                       shift and go to state 335
    expression                     shift and go to state 170
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 232

    (76) class_body -> method_header method_body class_body .

    PERMANENT       reduce using rule 76 (class_body -> method_header method_body class_body .)
    CONST           reduce using rule 76 (class_body -> method_header method_body class_body .)
    CLASS           reduce using rule 76 (class_body -> method_header method_body class_body .)
    BOOL            reduce using rule 76 (class_body -> method_header method_body class_body .)
    CHAR            reduce using rule 76 (class_body -> method_header method_body class_body .)
    STRING          reduce using rule 76 (class_body -> method_header method_body class_body .)
    INT             reduce using rule 76 (class_body -> method_header method_body class_body .)
    FLOAT           reduce using rule 76 (class_body -> method_header method_body class_body .)
    ID              reduce using rule 76 (class_body -> method_header method_body class_body .)
    BOOL_LS         reduce using rule 76 (class_body -> method_header method_body class_body .)
    CHAR_LS         reduce using rule 76 (class_body -> method_header method_body class_body .)
    STRING_LS       reduce using rule 76 (class_body -> method_header method_body class_body .)
    INT_LS          reduce using rule 76 (class_body -> method_header method_body class_body .)
    FLOAT_LS        reduce using rule 76 (class_body -> method_header method_body class_body .)
    ID_LS           reduce using rule 76 (class_body -> method_header method_body class_body .)
    FILE            reduce using rule 76 (class_body -> method_header method_body class_body .)
    MAIN            reduce using rule 76 (class_body -> method_header method_body class_body .)


state 233

    (106) method_body -> stm method_body .

    ENDCLASS        reduce using rule 106 (method_body -> stm method_body .)
    PUBLIC          reduce using rule 106 (method_body -> stm method_body .)
    PRIVATE         reduce using rule 106 (method_body -> stm method_body .)
    SHARED          reduce using rule 106 (method_body -> stm method_body .)
    CONST           reduce using rule 106 (method_body -> stm method_body .)
    METHOD          reduce using rule 106 (method_body -> stm method_body .)
    BOOL            reduce using rule 106 (method_body -> stm method_body .)
    CHAR            reduce using rule 106 (method_body -> stm method_body .)
    STRING          reduce using rule 106 (method_body -> stm method_body .)
    INT             reduce using rule 106 (method_body -> stm method_body .)
    FLOAT           reduce using rule 106 (method_body -> stm method_body .)
    ID              reduce using rule 106 (method_body -> stm method_body .)
    BOOL_LS         reduce using rule 106 (method_body -> stm method_body .)
    CHAR_LS         reduce using rule 106 (method_body -> stm method_body .)
    STRING_LS       reduce using rule 106 (method_body -> stm method_body .)
    INT_LS          reduce using rule 106 (method_body -> stm method_body .)
    FLOAT_LS        reduce using rule 106 (method_body -> stm method_body .)
    ID_LS           reduce using rule 106 (method_body -> stm method_body .)
    FILE            reduce using rule 106 (method_body -> stm method_body .)


state 234

    (107) method_body -> var_definition method_body .

    ENDCLASS        reduce using rule 107 (method_body -> var_definition method_body .)
    PUBLIC          reduce using rule 107 (method_body -> var_definition method_body .)
    PRIVATE         reduce using rule 107 (method_body -> var_definition method_body .)
    SHARED          reduce using rule 107 (method_body -> var_definition method_body .)
    CONST           reduce using rule 107 (method_body -> var_definition method_body .)
    METHOD          reduce using rule 107 (method_body -> var_definition method_body .)
    BOOL            reduce using rule 107 (method_body -> var_definition method_body .)
    CHAR            reduce using rule 107 (method_body -> var_definition method_body .)
    STRING          reduce using rule 107 (method_body -> var_definition method_body .)
    INT             reduce using rule 107 (method_body -> var_definition method_body .)
    FLOAT           reduce using rule 107 (method_body -> var_definition method_body .)
    ID              reduce using rule 107 (method_body -> var_definition method_body .)
    BOOL_LS         reduce using rule 107 (method_body -> var_definition method_body .)
    CHAR_LS         reduce using rule 107 (method_body -> var_definition method_body .)
    STRING_LS       reduce using rule 107 (method_body -> var_definition method_body .)
    INT_LS          reduce using rule 107 (method_body -> var_definition method_body .)
    FLOAT_LS        reduce using rule 107 (method_body -> var_definition method_body .)
    ID_LS           reduce using rule 107 (method_body -> var_definition method_body .)
    FILE            reduce using rule 107 (method_body -> var_definition method_body .)


state 235

    (77) class_body -> PUBLIC method_header method_body . class_body
    (74) class_body -> . ENDCLASS
    (75) class_body -> . attr_definition class_body
    (76) class_body -> . method_header method_body class_body
    (77) class_body -> . PUBLIC method_header method_body class_body
    (78) class_body -> . PRIVATE method_header method_body class_body
    (79) attr_definition -> . PUBLIC SHARED CONST type var_list
    (80) attr_definition -> . PUBLIC CONST SHARED type var_list
    (81) attr_definition -> . PRIVATE SHARED CONST type var_list
    (82) attr_definition -> . PRIVATE CONST SHARED type var_list
    (83) attr_definition -> . PUBLIC SHARED type var_list
    (84) attr_definition -> . PUBLIC CONST type var_list
    (85) attr_definition -> . SHARED CONST type var_list
    (86) attr_definition -> . CONST SHARED type var_list
    (87) attr_definition -> . PRIVATE SHARED type var_list
    (88) attr_definition -> . PRIVATE CONST type var_list
    (89) attr_definition -> . PUBLIC type var_list
    (90) attr_definition -> . SHARED type var_list
    (91) attr_definition -> . CONST type var_list
    (92) attr_definition -> . PRIVATE type var_list
    (93) attr_definition -> . type var_list
    (94) method_header -> . METHOD ID_LP arg_list ARROW type COLON
    (95) method_header -> . METHOD ID_LP arg_list COLON
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    ENDCLASS        shift and go to state 53
    PUBLIC          shift and go to state 56
    PRIVATE         shift and go to state 57
    SHARED          shift and go to state 58
    CONST           shift and go to state 59
    METHOD          shift and go to state 61
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    method_header                  shift and go to state 55
    class_body                     shift and go to state 336
    attr_definition                shift and go to state 54
    type                           shift and go to state 60

state 236

    (79) attr_definition -> PUBLIC SHARED CONST . type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 337

state 237

    (83) attr_definition -> PUBLIC SHARED type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 338

state 238

    (80) attr_definition -> PUBLIC CONST SHARED . type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 339

state 239

    (84) attr_definition -> PUBLIC CONST type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 340

state 240

    (89) attr_definition -> PUBLIC type var_list .

    ENDCLASS        reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    PUBLIC          reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    PRIVATE         reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    SHARED          reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    CONST           reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    METHOD          reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    BOOL            reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    CHAR            reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    STRING          reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    INT             reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    FLOAT           reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    ID              reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    BOOL_LS         reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    CHAR_LS         reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    STRING_LS       reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    INT_LS          reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    FLOAT_LS        reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    ID_LS           reduce using rule 89 (attr_definition -> PUBLIC type var_list .)
    FILE            reduce using rule 89 (attr_definition -> PUBLIC type var_list .)


state 241

    (78) class_body -> PRIVATE method_header method_body . class_body
    (74) class_body -> . ENDCLASS
    (75) class_body -> . attr_definition class_body
    (76) class_body -> . method_header method_body class_body
    (77) class_body -> . PUBLIC method_header method_body class_body
    (78) class_body -> . PRIVATE method_header method_body class_body
    (79) attr_definition -> . PUBLIC SHARED CONST type var_list
    (80) attr_definition -> . PUBLIC CONST SHARED type var_list
    (81) attr_definition -> . PRIVATE SHARED CONST type var_list
    (82) attr_definition -> . PRIVATE CONST SHARED type var_list
    (83) attr_definition -> . PUBLIC SHARED type var_list
    (84) attr_definition -> . PUBLIC CONST type var_list
    (85) attr_definition -> . SHARED CONST type var_list
    (86) attr_definition -> . CONST SHARED type var_list
    (87) attr_definition -> . PRIVATE SHARED type var_list
    (88) attr_definition -> . PRIVATE CONST type var_list
    (89) attr_definition -> . PUBLIC type var_list
    (90) attr_definition -> . SHARED type var_list
    (91) attr_definition -> . CONST type var_list
    (92) attr_definition -> . PRIVATE type var_list
    (93) attr_definition -> . type var_list
    (94) method_header -> . METHOD ID_LP arg_list ARROW type COLON
    (95) method_header -> . METHOD ID_LP arg_list COLON
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    ENDCLASS        shift and go to state 53
    PUBLIC          shift and go to state 56
    PRIVATE         shift and go to state 57
    SHARED          shift and go to state 58
    CONST           shift and go to state 59
    METHOD          shift and go to state 61
    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    method_header                  shift and go to state 55
    class_body                     shift and go to state 341
    attr_definition                shift and go to state 54
    type                           shift and go to state 60

state 242

    (81) attr_definition -> PRIVATE SHARED CONST . type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 342

state 243

    (87) attr_definition -> PRIVATE SHARED type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 343

state 244

    (82) attr_definition -> PRIVATE CONST SHARED . type var_list
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 344

state 245

    (88) attr_definition -> PRIVATE CONST type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 345

state 246

    (92) attr_definition -> PRIVATE type var_list .

    ENDCLASS        reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    PUBLIC          reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    PRIVATE         reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    SHARED          reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    CONST           reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    METHOD          reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    BOOL            reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    CHAR            reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    STRING          reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    INT             reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    FLOAT           reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    ID              reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    BOOL_LS         reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    CHAR_LS         reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    STRING_LS       reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    INT_LS          reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    FLOAT_LS        reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    ID_LS           reduce using rule 92 (attr_definition -> PRIVATE type var_list .)
    FILE            reduce using rule 92 (attr_definition -> PRIVATE type var_list .)


state 247

    (85) attr_definition -> SHARED CONST type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 346

state 248

    (90) attr_definition -> SHARED type var_list .

    ENDCLASS        reduce using rule 90 (attr_definition -> SHARED type var_list .)
    PUBLIC          reduce using rule 90 (attr_definition -> SHARED type var_list .)
    PRIVATE         reduce using rule 90 (attr_definition -> SHARED type var_list .)
    SHARED          reduce using rule 90 (attr_definition -> SHARED type var_list .)
    CONST           reduce using rule 90 (attr_definition -> SHARED type var_list .)
    METHOD          reduce using rule 90 (attr_definition -> SHARED type var_list .)
    BOOL            reduce using rule 90 (attr_definition -> SHARED type var_list .)
    CHAR            reduce using rule 90 (attr_definition -> SHARED type var_list .)
    STRING          reduce using rule 90 (attr_definition -> SHARED type var_list .)
    INT             reduce using rule 90 (attr_definition -> SHARED type var_list .)
    FLOAT           reduce using rule 90 (attr_definition -> SHARED type var_list .)
    ID              reduce using rule 90 (attr_definition -> SHARED type var_list .)
    BOOL_LS         reduce using rule 90 (attr_definition -> SHARED type var_list .)
    CHAR_LS         reduce using rule 90 (attr_definition -> SHARED type var_list .)
    STRING_LS       reduce using rule 90 (attr_definition -> SHARED type var_list .)
    INT_LS          reduce using rule 90 (attr_definition -> SHARED type var_list .)
    FLOAT_LS        reduce using rule 90 (attr_definition -> SHARED type var_list .)
    ID_LS           reduce using rule 90 (attr_definition -> SHARED type var_list .)
    FILE            reduce using rule 90 (attr_definition -> SHARED type var_list .)


state 249

    (86) attr_definition -> CONST SHARED type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 347

state 250

    (91) attr_definition -> CONST type var_list .

    ENDCLASS        reduce using rule 91 (attr_definition -> CONST type var_list .)
    PUBLIC          reduce using rule 91 (attr_definition -> CONST type var_list .)
    PRIVATE         reduce using rule 91 (attr_definition -> CONST type var_list .)
    SHARED          reduce using rule 91 (attr_definition -> CONST type var_list .)
    CONST           reduce using rule 91 (attr_definition -> CONST type var_list .)
    METHOD          reduce using rule 91 (attr_definition -> CONST type var_list .)
    BOOL            reduce using rule 91 (attr_definition -> CONST type var_list .)
    CHAR            reduce using rule 91 (attr_definition -> CONST type var_list .)
    STRING          reduce using rule 91 (attr_definition -> CONST type var_list .)
    INT             reduce using rule 91 (attr_definition -> CONST type var_list .)
    FLOAT           reduce using rule 91 (attr_definition -> CONST type var_list .)
    ID              reduce using rule 91 (attr_definition -> CONST type var_list .)
    BOOL_LS         reduce using rule 91 (attr_definition -> CONST type var_list .)
    CHAR_LS         reduce using rule 91 (attr_definition -> CONST type var_list .)
    STRING_LS       reduce using rule 91 (attr_definition -> CONST type var_list .)
    INT_LS          reduce using rule 91 (attr_definition -> CONST type var_list .)
    FLOAT_LS        reduce using rule 91 (attr_definition -> CONST type var_list .)
    ID_LS           reduce using rule 91 (attr_definition -> CONST type var_list .)
    FILE            reduce using rule 91 (attr_definition -> CONST type var_list .)


state 251

    (94) method_header -> METHOD ID_LP arg_list . ARROW type COLON
    (95) method_header -> METHOD ID_LP arg_list . COLON

    ARROW           shift and go to state 348
    COLON           shift and go to state 349


state 252

    (96) arg_list -> RP .

    ARROW           reduce using rule 96 (arg_list -> RP .)
    COLON           reduce using rule 96 (arg_list -> RP .)


state 253

    (97) arg_list -> atype . ID RP
    (98) arg_list -> atype . ID COMMA arg_list_tail

    ID              shift and go to state 350


state 254

    (53) atype -> ID .

    ID              reduce using rule 53 (atype -> ID .)


state 255

    (99) arg_list -> CONST . atype ID RP
    (100) arg_list -> CONST . atype ID COMMA arg_list_tail
    (48) atype -> . BOOL
    (49) atype -> . CHAR
    (50) atype -> . STRING
    (51) atype -> . INT
    (52) atype -> . FLOAT
    (53) atype -> . ID
    (54) atype -> . BOOL_AT
    (55) atype -> . CHAR_AT
    (56) atype -> . STRING_AT
    (57) atype -> . INT_AT
    (58) atype -> . FLOAT_AT
    (59) atype -> . ID_AT
    (60) atype -> . BOOL_LS atype_tail
    (61) atype -> . CHAR_LS atype_tail
    (62) atype -> . STRING_LS atype_tail
    (63) atype -> . INT_LS atype_tail
    (64) atype -> . FLOAT_LS atype_tail
    (65) atype -> . ID_LS atype_tail
    (66) atype -> . FILE

    BOOL            shift and go to state 256
    CHAR            shift and go to state 257
    STRING          shift and go to state 258
    INT             shift and go to state 259
    FLOAT           shift and go to state 260
    ID              shift and go to state 254
    BOOL_AT         shift and go to state 261
    CHAR_AT         shift and go to state 262
    STRING_AT       shift and go to state 263
    INT_AT          shift and go to state 264
    FLOAT_AT        shift and go to state 265
    ID_AT           shift and go to state 266
    BOOL_LS         shift and go to state 267
    CHAR_LS         shift and go to state 268
    STRING_LS       shift and go to state 269
    INT_LS          shift and go to state 270
    FLOAT_LS        shift and go to state 271
    ID_LS           shift and go to state 272
    FILE            shift and go to state 273

    atype                          shift and go to state 351

state 256

    (48) atype -> BOOL .

    ID              reduce using rule 48 (atype -> BOOL .)


state 257

    (49) atype -> CHAR .

    ID              reduce using rule 49 (atype -> CHAR .)


state 258

    (50) atype -> STRING .

    ID              reduce using rule 50 (atype -> STRING .)


state 259

    (51) atype -> INT .

    ID              reduce using rule 51 (atype -> INT .)


state 260

    (52) atype -> FLOAT .

    ID              reduce using rule 52 (atype -> FLOAT .)


state 261

    (54) atype -> BOOL_AT .

    ID              reduce using rule 54 (atype -> BOOL_AT .)


state 262

    (55) atype -> CHAR_AT .

    ID              reduce using rule 55 (atype -> CHAR_AT .)


state 263

    (56) atype -> STRING_AT .

    ID              reduce using rule 56 (atype -> STRING_AT .)


state 264

    (57) atype -> INT_AT .

    ID              reduce using rule 57 (atype -> INT_AT .)


state 265

    (58) atype -> FLOAT_AT .

    ID              reduce using rule 58 (atype -> FLOAT_AT .)


state 266

    (59) atype -> ID_AT .

    ID              reduce using rule 59 (atype -> ID_AT .)


state 267

    (60) atype -> BOOL_LS . atype_tail
    (67) atype_tail -> . RLS atype_tail
    (68) atype_tail -> . RS_AT
    (69) atype_tail -> . RS

    RLS             shift and go to state 353
    RS_AT           shift and go to state 354
    RS              shift and go to state 355

    atype_tail                     shift and go to state 352

state 268

    (61) atype -> CHAR_LS . atype_tail
    (67) atype_tail -> . RLS atype_tail
    (68) atype_tail -> . RS_AT
    (69) atype_tail -> . RS

    RLS             shift and go to state 353
    RS_AT           shift and go to state 354
    RS              shift and go to state 355

    atype_tail                     shift and go to state 356

state 269

    (62) atype -> STRING_LS . atype_tail
    (67) atype_tail -> . RLS atype_tail
    (68) atype_tail -> . RS_AT
    (69) atype_tail -> . RS

    RLS             shift and go to state 353
    RS_AT           shift and go to state 354
    RS              shift and go to state 355

    atype_tail                     shift and go to state 357

state 270

    (63) atype -> INT_LS . atype_tail
    (67) atype_tail -> . RLS atype_tail
    (68) atype_tail -> . RS_AT
    (69) atype_tail -> . RS

    RLS             shift and go to state 353
    RS_AT           shift and go to state 354
    RS              shift and go to state 355

    atype_tail                     shift and go to state 358

state 271

    (64) atype -> FLOAT_LS . atype_tail
    (67) atype_tail -> . RLS atype_tail
    (68) atype_tail -> . RS_AT
    (69) atype_tail -> . RS

    RLS             shift and go to state 353
    RS_AT           shift and go to state 354
    RS              shift and go to state 355

    atype_tail                     shift and go to state 359

state 272

    (65) atype -> ID_LS . atype_tail
    (67) atype_tail -> . RLS atype_tail
    (68) atype_tail -> . RS_AT
    (69) atype_tail -> . RS

    RLS             shift and go to state 353
    RS_AT           shift and go to state 354
    RS              shift and go to state 355

    atype_tail                     shift and go to state 360

state 273

    (66) atype -> FILE .

    ID              reduce using rule 66 (atype -> FILE .)


state 274

    (16) class_header -> ID EXTENDS ID_COLON class_body .

    PERMANENT       reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    CONST           reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    CLASS           reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    BOOL            reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    CHAR            reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    STRING          reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    INT             reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    FLOAT           reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    ID              reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    BOOL_LS         reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    CHAR_LS         reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    STRING_LS       reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    INT_LS          reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    FLOAT_LS        reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    ID_LS           reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    FILE            reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)
    MAIN            reduce using rule 16 (class_header -> ID EXTENDS ID_COLON class_body .)


state 275

    (189) arr -> ID_LS COLON RS .

    ASSIG           reduce using rule 189 (arr -> ID_LS COLON RS .)
    PASSIG          reduce using rule 189 (arr -> ID_LS COLON RS .)
    SEMI            reduce using rule 189 (arr -> ID_LS COLON RS .)
    COMMA           reduce using rule 189 (arr -> ID_LS COLON RS .)
    PLUS            reduce using rule 189 (arr -> ID_LS COLON RS .)
    MINUS           reduce using rule 189 (arr -> ID_LS COLON RS .)
    STAR            reduce using rule 189 (arr -> ID_LS COLON RS .)
    DIV             reduce using rule 189 (arr -> ID_LS COLON RS .)
    IDIV            reduce using rule 189 (arr -> ID_LS COLON RS .)
    MOD             reduce using rule 189 (arr -> ID_LS COLON RS .)
    AND             reduce using rule 189 (arr -> ID_LS COLON RS .)
    OR              reduce using rule 189 (arr -> ID_LS COLON RS .)
    LT              reduce using rule 189 (arr -> ID_LS COLON RS .)
    LE              reduce using rule 189 (arr -> ID_LS COLON RS .)
    GT              reduce using rule 189 (arr -> ID_LS COLON RS .)
    GE              reduce using rule 189 (arr -> ID_LS COLON RS .)
    EQ              reduce using rule 189 (arr -> ID_LS COLON RS .)
    NEQ             reduce using rule 189 (arr -> ID_LS COLON RS .)
    COLON           reduce using rule 189 (arr -> ID_LS COLON RS .)
    RS              reduce using rule 189 (arr -> ID_LS COLON RS .)
    RP              reduce using rule 189 (arr -> ID_LS COLON RS .)
    THEN            reduce using rule 189 (arr -> ID_LS COLON RS .)
    DO              reduce using rule 189 (arr -> ID_LS COLON RS .)


state 276

    (190) arr -> ID_LS COLON expression . RS
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RS              shift and go to state 361
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 277

    (191) arr -> ID_LS expression COLON . RS
    (192) arr -> ID_LS expression COLON . expression RS
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    RS              shift and go to state 363
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 362
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 278

    (197) arr -> ID_LS expression RS . arr_tail
    (199) arr_tail -> . LS expression RS arr_tail
    (200) arr_tail -> .

    LS              shift and go to state 365
    ASSIG           reduce using rule 200 (arr_tail -> .)
    PASSIG          reduce using rule 200 (arr_tail -> .)
    SEMI            reduce using rule 200 (arr_tail -> .)
    COMMA           reduce using rule 200 (arr_tail -> .)
    PLUS            reduce using rule 200 (arr_tail -> .)
    MINUS           reduce using rule 200 (arr_tail -> .)
    STAR            reduce using rule 200 (arr_tail -> .)
    DIV             reduce using rule 200 (arr_tail -> .)
    IDIV            reduce using rule 200 (arr_tail -> .)
    MOD             reduce using rule 200 (arr_tail -> .)
    AND             reduce using rule 200 (arr_tail -> .)
    OR              reduce using rule 200 (arr_tail -> .)
    LT              reduce using rule 200 (arr_tail -> .)
    LE              reduce using rule 200 (arr_tail -> .)
    GT              reduce using rule 200 (arr_tail -> .)
    GE              reduce using rule 200 (arr_tail -> .)
    EQ              reduce using rule 200 (arr_tail -> .)
    NEQ             reduce using rule 200 (arr_tail -> .)
    COLON           reduce using rule 200 (arr_tail -> .)
    RS              reduce using rule 200 (arr_tail -> .)
    RP              reduce using rule 200 (arr_tail -> .)
    THEN            reduce using rule 200 (arr_tail -> .)
    DO              reduce using rule 200 (arr_tail -> .)

    arr_tail                       shift and go to state 364

state 279

    (128) assig_stm -> storage ASSIG expression . SEMI
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            shift and go to state 366
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 280

    (129) passig_stm -> storage PASSIG expression . SEMI
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            shift and go to state 367
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 281

    (130) passig_stm -> storage PASSIG ALLOC . ID_LP par_list SEMI

    ID_LP           shift and go to state 368


state 282

    (223) par_list -> expression RP .

    SEMI            reduce using rule 223 (par_list -> expression RP .)
    COMMA           reduce using rule 223 (par_list -> expression RP .)
    PLUS            reduce using rule 223 (par_list -> expression RP .)
    MINUS           reduce using rule 223 (par_list -> expression RP .)
    STAR            reduce using rule 223 (par_list -> expression RP .)
    DIV             reduce using rule 223 (par_list -> expression RP .)
    IDIV            reduce using rule 223 (par_list -> expression RP .)
    MOD             reduce using rule 223 (par_list -> expression RP .)
    AND             reduce using rule 223 (par_list -> expression RP .)
    OR              reduce using rule 223 (par_list -> expression RP .)
    LT              reduce using rule 223 (par_list -> expression RP .)
    LE              reduce using rule 223 (par_list -> expression RP .)
    GT              reduce using rule 223 (par_list -> expression RP .)
    GE              reduce using rule 223 (par_list -> expression RP .)
    EQ              reduce using rule 223 (par_list -> expression RP .)
    NEQ             reduce using rule 223 (par_list -> expression RP .)
    COLON           reduce using rule 223 (par_list -> expression RP .)
    RS              reduce using rule 223 (par_list -> expression RP .)
    RP              reduce using rule 223 (par_list -> expression RP .)
    THEN            reduce using rule 223 (par_list -> expression RP .)
    DO              reduce using rule 223 (par_list -> expression RP .)


state 283

    (224) par_list -> expression COMMA . par_list_tail
    (225) par_list_tail -> . RP
    (226) par_list_tail -> . expression RP
    (227) par_list_tail -> . expression COMMA par_list_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    RP              shift and go to state 371
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 369
    par_list_tail                  shift and go to state 370
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 284

    (154) return_stm -> RETURN expression SEMI .

    ENDMAIN         reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    ID_COLON        reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    PERMANENT       reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    CONST           reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    BOOL            reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    CHAR            reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    STRING          reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    INT             reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    FLOAT           reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    ID              reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    BOOL_LS         reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    CHAR_LS         reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    STRING_LS       reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    INT_LS          reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    FLOAT_LS        reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    ID_LS           reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    FILE            reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    SEMI            reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    RETURN          reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    PRETURN         reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    IF              reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    WHILE           reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    FOR             reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    GOTO            reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    BREAK           reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    CONTINUE        reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    GUARD           reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    RAISE           reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    TERMINATE       reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    ID_LP           reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    BOOL_LP         reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    CHAR_LP         reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    STRING_LP       reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    INT_LP          reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    FLOAT_LP        reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    FIN_DOT         reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    FOUT_DOT        reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    IDOF_LP         reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    SIZEOF_LP       reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    TYPEOF_LP       reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    PARENT_DOT      reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    ID_DOT          reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    ENDMETHOD       reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    ENDWHILE        reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    CATCH           reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    ENDIF           reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    ELSE            reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    ENDFOR          reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    ENDCATCH        reduce using rule 154 (return_stm -> RETURN expression SEMI .)
    STRING_LIT      reduce using rule 154 (return_stm -> RETURN expression SEMI .)


state 285

    (155) preturn_stm -> PRETURN expression SEMI .

    ENDMAIN         reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    ID_COLON        reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    PERMANENT       reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    CONST           reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    BOOL            reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    CHAR            reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    STRING          reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    INT             reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    FLOAT           reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    ID              reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    BOOL_LS         reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    CHAR_LS         reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    STRING_LS       reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    INT_LS          reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    FLOAT_LS        reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    ID_LS           reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    FILE            reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    SEMI            reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    RETURN          reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    PRETURN         reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    IF              reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    WHILE           reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    FOR             reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    GOTO            reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    BREAK           reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    CONTINUE        reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    GUARD           reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    RAISE           reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    TERMINATE       reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    ID_LP           reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    BOOL_LP         reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    CHAR_LP         reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    STRING_LP       reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    INT_LP          reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    FLOAT_LP        reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    FIN_DOT         reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    FOUT_DOT        reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    IDOF_LP         reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    SIZEOF_LP       reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    TYPEOF_LP       reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    PARENT_DOT      reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    ID_DOT          reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    ENDMETHOD       reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    ENDWHILE        reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    CATCH           reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    ENDIF           reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    ELSE            reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    ENDFOR          reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    ENDCATCH        reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)
    STRING_LIT      reduce using rule 155 (preturn_stm -> PRETURN expression SEMI .)


state 286

    (132) if_stm -> IF expression THEN . stms ENDIF
    (133) if_stm -> IF expression THEN . stms ELSE stms ENDIF
    (70) stms -> . stm stms
    (71) stms -> . stm
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ID_COLON        shift and go to state 68
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    ID_LS           shift and go to state 136
    ID              shift and go to state 119
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    stms                           shift and go to state 372
    stm                            shift and go to state 290
    ustm                           shift and go to state 69
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 287

    (134) while_stm -> WHILE expression DO . stms ENDWHILE
    (135) while_stm -> WHILE expression DO . ENDWHILE
    (70) stms -> . stm stms
    (71) stms -> . stm
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ENDWHILE        shift and go to state 374
    ID_COLON        shift and go to state 68
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    ID_LS           shift and go to state 136
    ID              shift and go to state 119
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    stms                           shift and go to state 373
    stm                            shift and go to state 290
    ustm                           shift and go to state 69
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 288

    (136) while_stm -> WHILE DO stms . ENDWHILE

    ENDWHILE        shift and go to state 375


state 289

    (137) while_stm -> WHILE DO ENDWHILE .

    ENDMAIN         reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    ID_COLON        reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    PERMANENT       reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    CONST           reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    BOOL            reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    CHAR            reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    STRING          reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    INT             reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    FLOAT           reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    ID              reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    BOOL_LS         reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    CHAR_LS         reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    STRING_LS       reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    INT_LS          reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    FLOAT_LS        reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    ID_LS           reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    FILE            reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    SEMI            reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    RETURN          reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    PRETURN         reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    IF              reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    WHILE           reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    FOR             reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    GOTO            reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    BREAK           reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    CONTINUE        reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    GUARD           reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    RAISE           reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    TERMINATE       reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    ID_LP           reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    BOOL_LP         reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    CHAR_LP         reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    STRING_LP       reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    INT_LP          reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    FLOAT_LP        reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    FIN_DOT         reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    FOUT_DOT        reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    IDOF_LP         reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    SIZEOF_LP       reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    TYPEOF_LP       reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    PARENT_DOT      reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    ID_DOT          reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    ENDMETHOD       reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    ENDWHILE        reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    CATCH           reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    ENDIF           reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    ELSE            reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    ENDFOR          reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    ENDCATCH        reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)
    STRING_LIT      reduce using rule 137 (while_stm -> WHILE DO ENDWHILE .)


state 290

    (70) stms -> stm . stms
    (71) stms -> stm .
    (70) stms -> . stm stms
    (71) stms -> . stm
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ENDWHILE        reduce using rule 71 (stms -> stm .)
    CATCH           reduce using rule 71 (stms -> stm .)
    ENDIF           reduce using rule 71 (stms -> stm .)
    ELSE            reduce using rule 71 (stms -> stm .)
    ENDFOR          reduce using rule 71 (stms -> stm .)
    ENDCATCH        reduce using rule 71 (stms -> stm .)
    STRING_LIT      reduce using rule 71 (stms -> stm .)
    ID_COLON        shift and go to state 68
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    ID_LS           shift and go to state 136
    ID              shift and go to state 119
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    stm                            shift and go to state 290
    stms                           shift and go to state 376
    ustm                           shift and go to state 69
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 291

    (138) for_stm -> FOR prologue condition . epilogue stms ENDFOR
    (139) for_stm -> FOR prologue condition . epilogue ENDFOR
    (147) epilogue -> . storage ASSIG expression epilogue_tail
    (148) epilogue -> . DO
    (151) storage -> . arr
    (152) storage -> . var
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    DO              shift and go to state 379
    ID_LS           shift and go to state 136
    ID              shift and go to state 119
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    epilogue                       shift and go to state 377
    storage                        shift and go to state 378
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 181

state 292

    (145) condition -> expression . SEMI
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            shift and go to state 380
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 293

    (146) condition -> SEMI .

    DO              reduce using rule 146 (condition -> SEMI .)
    ID_LS           reduce using rule 146 (condition -> SEMI .)
    ID              reduce using rule 146 (condition -> SEMI .)
    PARENT_DOT      reduce using rule 146 (condition -> SEMI .)
    ID_DOT          reduce using rule 146 (condition -> SEMI .)


state 294

    (141) prologue -> storage ASSIG . expression prologue_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 381
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 295

    (140) goto_stm -> GOTO ID SEMI .

    ENDMAIN         reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    ID_COLON        reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    PERMANENT       reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    CONST           reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    BOOL            reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    CHAR            reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    STRING          reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    INT             reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    FLOAT           reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    ID              reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    BOOL_LS         reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    CHAR_LS         reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    STRING_LS       reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    INT_LS          reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    FLOAT_LS        reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    ID_LS           reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    FILE            reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    SEMI            reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    RETURN          reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    PRETURN         reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    IF              reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    WHILE           reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    FOR             reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    GOTO            reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    BREAK           reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    CONTINUE        reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    GUARD           reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    RAISE           reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    TERMINATE       reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    ID_LP           reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    BOOL_LP         reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    CHAR_LP         reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    STRING_LP       reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    INT_LP          reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    FLOAT_LP        reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    FIN_DOT         reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    FOUT_DOT        reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    IDOF_LP         reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    SIZEOF_LP       reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    TYPEOF_LP       reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    PARENT_DOT      reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    ID_DOT          reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    ENDMETHOD       reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    ENDWHILE        reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    CATCH           reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    ENDIF           reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    ELSE            reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    ENDFOR          reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    ENDCATCH        reduce using rule 140 (goto_stm -> GOTO ID SEMI .)
    STRING_LIT      reduce using rule 140 (goto_stm -> GOTO ID SEMI .)


state 296

    (156) guard_stm -> GUARD COLON stms . CATCH COLON catch_block

    CATCH           shift and go to state 382


state 297

    (160) raise_stm -> RAISE expression SEMI .

    ENDMAIN         reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    ID_COLON        reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    PERMANENT       reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    CONST           reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    BOOL            reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    CHAR            reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    STRING          reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    INT             reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    FLOAT           reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    ID              reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    BOOL_LS         reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    CHAR_LS         reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    STRING_LS       reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    INT_LS          reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    FLOAT_LS        reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    ID_LS           reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    FILE            reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    SEMI            reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    RETURN          reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    PRETURN         reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    IF              reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    WHILE           reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    FOR             reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    GOTO            reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    BREAK           reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    CONTINUE        reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    GUARD           reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    RAISE           reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    TERMINATE       reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    ID_LP           reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    BOOL_LP         reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    CHAR_LP         reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    STRING_LP       reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    INT_LP          reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    FLOAT_LP        reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    FIN_DOT         reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    FOUT_DOT        reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    IDOF_LP         reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    SIZEOF_LP       reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    TYPEOF_LP       reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    PARENT_DOT      reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    ID_DOT          reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    ENDMETHOD       reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    ENDWHILE        reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    CATCH           reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    ENDIF           reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    ELSE            reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    ENDFOR          reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    ENDCATCH        reduce using rule 160 (raise_stm -> RAISE expression SEMI .)
    STRING_LIT      reduce using rule 160 (raise_stm -> RAISE expression SEMI .)


state 298

    (202) call -> BOOL_LP expression RP .

    SEMI            reduce using rule 202 (call -> BOOL_LP expression RP .)
    COMMA           reduce using rule 202 (call -> BOOL_LP expression RP .)
    PLUS            reduce using rule 202 (call -> BOOL_LP expression RP .)
    MINUS           reduce using rule 202 (call -> BOOL_LP expression RP .)
    STAR            reduce using rule 202 (call -> BOOL_LP expression RP .)
    DIV             reduce using rule 202 (call -> BOOL_LP expression RP .)
    IDIV            reduce using rule 202 (call -> BOOL_LP expression RP .)
    MOD             reduce using rule 202 (call -> BOOL_LP expression RP .)
    AND             reduce using rule 202 (call -> BOOL_LP expression RP .)
    OR              reduce using rule 202 (call -> BOOL_LP expression RP .)
    LT              reduce using rule 202 (call -> BOOL_LP expression RP .)
    LE              reduce using rule 202 (call -> BOOL_LP expression RP .)
    GT              reduce using rule 202 (call -> BOOL_LP expression RP .)
    GE              reduce using rule 202 (call -> BOOL_LP expression RP .)
    EQ              reduce using rule 202 (call -> BOOL_LP expression RP .)
    NEQ             reduce using rule 202 (call -> BOOL_LP expression RP .)
    COLON           reduce using rule 202 (call -> BOOL_LP expression RP .)
    RS              reduce using rule 202 (call -> BOOL_LP expression RP .)
    RP              reduce using rule 202 (call -> BOOL_LP expression RP .)
    THEN            reduce using rule 202 (call -> BOOL_LP expression RP .)
    DO              reduce using rule 202 (call -> BOOL_LP expression RP .)


state 299

    (203) call -> CHAR_LP expression RP .

    SEMI            reduce using rule 203 (call -> CHAR_LP expression RP .)
    COMMA           reduce using rule 203 (call -> CHAR_LP expression RP .)
    PLUS            reduce using rule 203 (call -> CHAR_LP expression RP .)
    MINUS           reduce using rule 203 (call -> CHAR_LP expression RP .)
    STAR            reduce using rule 203 (call -> CHAR_LP expression RP .)
    DIV             reduce using rule 203 (call -> CHAR_LP expression RP .)
    IDIV            reduce using rule 203 (call -> CHAR_LP expression RP .)
    MOD             reduce using rule 203 (call -> CHAR_LP expression RP .)
    AND             reduce using rule 203 (call -> CHAR_LP expression RP .)
    OR              reduce using rule 203 (call -> CHAR_LP expression RP .)
    LT              reduce using rule 203 (call -> CHAR_LP expression RP .)
    LE              reduce using rule 203 (call -> CHAR_LP expression RP .)
    GT              reduce using rule 203 (call -> CHAR_LP expression RP .)
    GE              reduce using rule 203 (call -> CHAR_LP expression RP .)
    EQ              reduce using rule 203 (call -> CHAR_LP expression RP .)
    NEQ             reduce using rule 203 (call -> CHAR_LP expression RP .)
    COLON           reduce using rule 203 (call -> CHAR_LP expression RP .)
    RS              reduce using rule 203 (call -> CHAR_LP expression RP .)
    RP              reduce using rule 203 (call -> CHAR_LP expression RP .)
    THEN            reduce using rule 203 (call -> CHAR_LP expression RP .)
    DO              reduce using rule 203 (call -> CHAR_LP expression RP .)


state 300

    (204) call -> STRING_LP expression RP .

    SEMI            reduce using rule 204 (call -> STRING_LP expression RP .)
    COMMA           reduce using rule 204 (call -> STRING_LP expression RP .)
    PLUS            reduce using rule 204 (call -> STRING_LP expression RP .)
    MINUS           reduce using rule 204 (call -> STRING_LP expression RP .)
    STAR            reduce using rule 204 (call -> STRING_LP expression RP .)
    DIV             reduce using rule 204 (call -> STRING_LP expression RP .)
    IDIV            reduce using rule 204 (call -> STRING_LP expression RP .)
    MOD             reduce using rule 204 (call -> STRING_LP expression RP .)
    AND             reduce using rule 204 (call -> STRING_LP expression RP .)
    OR              reduce using rule 204 (call -> STRING_LP expression RP .)
    LT              reduce using rule 204 (call -> STRING_LP expression RP .)
    LE              reduce using rule 204 (call -> STRING_LP expression RP .)
    GT              reduce using rule 204 (call -> STRING_LP expression RP .)
    GE              reduce using rule 204 (call -> STRING_LP expression RP .)
    EQ              reduce using rule 204 (call -> STRING_LP expression RP .)
    NEQ             reduce using rule 204 (call -> STRING_LP expression RP .)
    COLON           reduce using rule 204 (call -> STRING_LP expression RP .)
    RS              reduce using rule 204 (call -> STRING_LP expression RP .)
    RP              reduce using rule 204 (call -> STRING_LP expression RP .)
    THEN            reduce using rule 204 (call -> STRING_LP expression RP .)
    DO              reduce using rule 204 (call -> STRING_LP expression RP .)


state 301

    (205) call -> INT_LP expression RP .

    SEMI            reduce using rule 205 (call -> INT_LP expression RP .)
    COMMA           reduce using rule 205 (call -> INT_LP expression RP .)
    PLUS            reduce using rule 205 (call -> INT_LP expression RP .)
    MINUS           reduce using rule 205 (call -> INT_LP expression RP .)
    STAR            reduce using rule 205 (call -> INT_LP expression RP .)
    DIV             reduce using rule 205 (call -> INT_LP expression RP .)
    IDIV            reduce using rule 205 (call -> INT_LP expression RP .)
    MOD             reduce using rule 205 (call -> INT_LP expression RP .)
    AND             reduce using rule 205 (call -> INT_LP expression RP .)
    OR              reduce using rule 205 (call -> INT_LP expression RP .)
    LT              reduce using rule 205 (call -> INT_LP expression RP .)
    LE              reduce using rule 205 (call -> INT_LP expression RP .)
    GT              reduce using rule 205 (call -> INT_LP expression RP .)
    GE              reduce using rule 205 (call -> INT_LP expression RP .)
    EQ              reduce using rule 205 (call -> INT_LP expression RP .)
    NEQ             reduce using rule 205 (call -> INT_LP expression RP .)
    COLON           reduce using rule 205 (call -> INT_LP expression RP .)
    RS              reduce using rule 205 (call -> INT_LP expression RP .)
    RP              reduce using rule 205 (call -> INT_LP expression RP .)
    THEN            reduce using rule 205 (call -> INT_LP expression RP .)
    DO              reduce using rule 205 (call -> INT_LP expression RP .)


state 302

    (206) call -> FLOAT_LP expression RP .

    SEMI            reduce using rule 206 (call -> FLOAT_LP expression RP .)
    COMMA           reduce using rule 206 (call -> FLOAT_LP expression RP .)
    PLUS            reduce using rule 206 (call -> FLOAT_LP expression RP .)
    MINUS           reduce using rule 206 (call -> FLOAT_LP expression RP .)
    STAR            reduce using rule 206 (call -> FLOAT_LP expression RP .)
    DIV             reduce using rule 206 (call -> FLOAT_LP expression RP .)
    IDIV            reduce using rule 206 (call -> FLOAT_LP expression RP .)
    MOD             reduce using rule 206 (call -> FLOAT_LP expression RP .)
    AND             reduce using rule 206 (call -> FLOAT_LP expression RP .)
    OR              reduce using rule 206 (call -> FLOAT_LP expression RP .)
    LT              reduce using rule 206 (call -> FLOAT_LP expression RP .)
    LE              reduce using rule 206 (call -> FLOAT_LP expression RP .)
    GT              reduce using rule 206 (call -> FLOAT_LP expression RP .)
    GE              reduce using rule 206 (call -> FLOAT_LP expression RP .)
    EQ              reduce using rule 206 (call -> FLOAT_LP expression RP .)
    NEQ             reduce using rule 206 (call -> FLOAT_LP expression RP .)
    COLON           reduce using rule 206 (call -> FLOAT_LP expression RP .)
    RS              reduce using rule 206 (call -> FLOAT_LP expression RP .)
    RP              reduce using rule 206 (call -> FLOAT_LP expression RP .)
    THEN            reduce using rule 206 (call -> FLOAT_LP expression RP .)
    DO              reduce using rule 206 (call -> FLOAT_LP expression RP .)


state 303

    (207) call -> FIN_DOT ID_LP par_list .

    SEMI            reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    COMMA           reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    PLUS            reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    MINUS           reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    STAR            reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    DIV             reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    IDIV            reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    MOD             reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    AND             reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    OR              reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    LT              reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    LE              reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    GT              reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    GE              reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    EQ              reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    NEQ             reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    COLON           reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    RS              reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    RP              reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    THEN            reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)
    DO              reduce using rule 207 (call -> FIN_DOT ID_LP par_list .)


state 304

    (208) call -> FOUT_DOT ID_LP par_list .

    SEMI            reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    COMMA           reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    PLUS            reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    MINUS           reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    STAR            reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    DIV             reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    IDIV            reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    MOD             reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    AND             reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    OR              reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    LT              reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    LE              reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    GT              reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    GE              reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    EQ              reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    NEQ             reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    COLON           reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    RS              reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    RP              reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    THEN            reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)
    DO              reduce using rule 208 (call -> FOUT_DOT ID_LP par_list .)


state 305

    (209) call -> IDOF_LP expression RP .

    SEMI            reduce using rule 209 (call -> IDOF_LP expression RP .)
    COMMA           reduce using rule 209 (call -> IDOF_LP expression RP .)
    PLUS            reduce using rule 209 (call -> IDOF_LP expression RP .)
    MINUS           reduce using rule 209 (call -> IDOF_LP expression RP .)
    STAR            reduce using rule 209 (call -> IDOF_LP expression RP .)
    DIV             reduce using rule 209 (call -> IDOF_LP expression RP .)
    IDIV            reduce using rule 209 (call -> IDOF_LP expression RP .)
    MOD             reduce using rule 209 (call -> IDOF_LP expression RP .)
    AND             reduce using rule 209 (call -> IDOF_LP expression RP .)
    OR              reduce using rule 209 (call -> IDOF_LP expression RP .)
    LT              reduce using rule 209 (call -> IDOF_LP expression RP .)
    LE              reduce using rule 209 (call -> IDOF_LP expression RP .)
    GT              reduce using rule 209 (call -> IDOF_LP expression RP .)
    GE              reduce using rule 209 (call -> IDOF_LP expression RP .)
    EQ              reduce using rule 209 (call -> IDOF_LP expression RP .)
    NEQ             reduce using rule 209 (call -> IDOF_LP expression RP .)
    COLON           reduce using rule 209 (call -> IDOF_LP expression RP .)
    RS              reduce using rule 209 (call -> IDOF_LP expression RP .)
    RP              reduce using rule 209 (call -> IDOF_LP expression RP .)
    THEN            reduce using rule 209 (call -> IDOF_LP expression RP .)
    DO              reduce using rule 209 (call -> IDOF_LP expression RP .)


state 306

    (210) call -> SIZEOF_LP size_par RP .

    SEMI            reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    COMMA           reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    PLUS            reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    MINUS           reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    STAR            reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    DIV             reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    IDIV            reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    MOD             reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    AND             reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    OR              reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    LT              reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    LE              reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    GT              reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    GE              reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    EQ              reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    NEQ             reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    COLON           reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    RS              reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    RP              reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    THEN            reduce using rule 210 (call -> SIZEOF_LP size_par RP .)
    DO              reduce using rule 210 (call -> SIZEOF_LP size_par RP .)


state 307

    (214) size_par -> ID_LS type_tail .

    RP              reduce using rule 214 (size_par -> ID_LS type_tail .)


state 308

    (215) size_par -> qualifier ID .

    RP              reduce using rule 215 (size_par -> qualifier ID .)


state 309

    (216) size_par -> qualifier ID_LS . type_tail
    (46) type_tail -> . RLS type_tail
    (47) type_tail -> . RS

    RLS             shift and go to state 36
    RS              shift and go to state 37

    type_tail                      shift and go to state 383

state 310

    (211) call -> TYPEOF_LP expression RP .

    SEMI            reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    COMMA           reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    PLUS            reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    MINUS           reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    STAR            reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    DIV             reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    IDIV            reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    MOD             reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    AND             reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    OR              reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    LT              reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    LE              reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    GT              reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    GE              reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    EQ              reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    NEQ             reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    COLON           reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    RS              reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    RP              reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    THEN            reduce using rule 211 (call -> TYPEOF_LP expression RP .)
    DO              reduce using rule 211 (call -> TYPEOF_LP expression RP .)


state 311

    (212) call -> qualifier ID_LP par_list .

    SEMI            reduce using rule 212 (call -> qualifier ID_LP par_list .)
    COMMA           reduce using rule 212 (call -> qualifier ID_LP par_list .)
    PLUS            reduce using rule 212 (call -> qualifier ID_LP par_list .)
    MINUS           reduce using rule 212 (call -> qualifier ID_LP par_list .)
    STAR            reduce using rule 212 (call -> qualifier ID_LP par_list .)
    DIV             reduce using rule 212 (call -> qualifier ID_LP par_list .)
    IDIV            reduce using rule 212 (call -> qualifier ID_LP par_list .)
    MOD             reduce using rule 212 (call -> qualifier ID_LP par_list .)
    AND             reduce using rule 212 (call -> qualifier ID_LP par_list .)
    OR              reduce using rule 212 (call -> qualifier ID_LP par_list .)
    LT              reduce using rule 212 (call -> qualifier ID_LP par_list .)
    LE              reduce using rule 212 (call -> qualifier ID_LP par_list .)
    GT              reduce using rule 212 (call -> qualifier ID_LP par_list .)
    GE              reduce using rule 212 (call -> qualifier ID_LP par_list .)
    EQ              reduce using rule 212 (call -> qualifier ID_LP par_list .)
    NEQ             reduce using rule 212 (call -> qualifier ID_LP par_list .)
    COLON           reduce using rule 212 (call -> qualifier ID_LP par_list .)
    RS              reduce using rule 212 (call -> qualifier ID_LP par_list .)
    RP              reduce using rule 212 (call -> qualifier ID_LP par_list .)
    THEN            reduce using rule 212 (call -> qualifier ID_LP par_list .)
    DO              reduce using rule 212 (call -> qualifier ID_LP par_list .)


state 312

    (193) arr -> qualifier ID_LS COLON . RS
    (194) arr -> qualifier ID_LS COLON . expression RS
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    RS              shift and go to state 384
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    qualifier                      shift and go to state 135
    expression                     shift and go to state 385
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134

state 313

    (195) arr -> qualifier ID_LS expression . COLON RS
    (196) arr -> qualifier ID_LS expression . COLON expression RS
    (198) arr -> qualifier ID_LS expression . RS arr_tail
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    COLON           shift and go to state 386
    RS              shift and go to state 387
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 314

    (26) var_list_tail -> ID COMMA var_list_tail .

    PERMANENT       reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    CONST           reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    CLASS           reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    BOOL            reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    CHAR            reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    STRING          reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    INT             reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    FLOAT           reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    ID              reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    BOOL_LS         reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    CHAR_LS         reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    STRING_LS       reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    INT_LS          reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    FLOAT_LS        reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    ID_LS           reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    FILE            reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    MAIN            reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    ENDMAIN         reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    ID_COLON        reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    SEMI            reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    RETURN          reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    PRETURN         reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    IF              reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    WHILE           reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    FOR             reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    GOTO            reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    BREAK           reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    CONTINUE        reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    GUARD           reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    RAISE           reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    TERMINATE       reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    ID_LP           reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    BOOL_LP         reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    CHAR_LP         reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    STRING_LP       reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    INT_LP          reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    FLOAT_LP        reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    FIN_DOT         reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    FOUT_DOT        reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    IDOF_LP         reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    SIZEOF_LP       reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    TYPEOF_LP       reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    PARENT_DOT      reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    ID_DOT          reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    ENDMETHOD       reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    ENDCLASS        reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    PUBLIC          reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    PRIVATE         reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    SHARED          reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)
    METHOD          reduce using rule 26 (var_list_tail -> ID COMMA var_list_tail .)


state 315

    (27) var_list_tail -> ID ASSIG expression . SEMI
    (28) var_list_tail -> ID ASSIG expression . COMMA var_list_tail
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            shift and go to state 388
    COMMA           shift and go to state 389
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 316

    (29) var_list_tail -> ID PASSIG expression . SEMI
    (30) var_list_tail -> ID PASSIG expression . COMMA var_list_tail
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            shift and go to state 390
    COMMA           shift and go to state 391
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 317

    (31) var_list_tail -> ID PASSIG ALLOC . ID_LP par_list SEMI
    (32) var_list_tail -> ID PASSIG ALLOC . ID_LP par_list COMMA var_list_tail

    ID_LP           shift and go to state 392


state 318

    (20) var_list -> ID ASSIG expression COMMA var_list_tail .

    PERMANENT       reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    CONST           reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    CLASS           reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    BOOL            reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    CHAR            reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    STRING          reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    INT             reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    FLOAT           reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    ID              reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    BOOL_LS         reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    CHAR_LS         reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    STRING_LS       reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    INT_LS          reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    FLOAT_LS        reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    ID_LS           reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    FILE            reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    MAIN            reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    ENDMAIN         reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    ID_COLON        reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    SEMI            reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    RETURN          reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    PRETURN         reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    IF              reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    WHILE           reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    FOR             reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    GOTO            reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    BREAK           reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    CONTINUE        reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    GUARD           reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    RAISE           reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    TERMINATE       reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    ID_LP           reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    BOOL_LP         reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    CHAR_LP         reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    STRING_LP       reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    INT_LP          reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    FLOAT_LP        reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    FIN_DOT         reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    FOUT_DOT        reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    IDOF_LP         reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    SIZEOF_LP       reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    TYPEOF_LP       reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    PARENT_DOT      reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    ID_DOT          reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    ENDMETHOD       reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    ENDCLASS        reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    PUBLIC          reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    PRIVATE         reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    SHARED          reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)
    METHOD          reduce using rule 20 (var_list -> ID ASSIG expression COMMA var_list_tail .)


state 319

    (162) expression -> expression PLUS expression .
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            reduce using rule 162 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 162 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 162 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 162 (expression -> expression PLUS expression .)
    LT              reduce using rule 162 (expression -> expression PLUS expression .)
    LE              reduce using rule 162 (expression -> expression PLUS expression .)
    GT              reduce using rule 162 (expression -> expression PLUS expression .)
    GE              reduce using rule 162 (expression -> expression PLUS expression .)
    EQ              reduce using rule 162 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 162 (expression -> expression PLUS expression .)
    COLON           reduce using rule 162 (expression -> expression PLUS expression .)
    RS              reduce using rule 162 (expression -> expression PLUS expression .)
    RP              reduce using rule 162 (expression -> expression PLUS expression .)
    THEN            reduce using rule 162 (expression -> expression PLUS expression .)
    DO              reduce using rule 162 (expression -> expression PLUS expression .)
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219

  ! STAR            [ reduce using rule 162 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 162 (expression -> expression PLUS expression .) ]
  ! IDIV            [ reduce using rule 162 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 162 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 162 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 162 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 212 ]
  ! MINUS           [ shift and go to state 213 ]
  ! LT              [ shift and go to state 220 ]
  ! LE              [ shift and go to state 221 ]
  ! GT              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 224 ]
  ! NEQ             [ shift and go to state 225 ]


state 320

    (163) expression -> expression MINUS expression .
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            reduce using rule 163 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 163 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 163 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 163 (expression -> expression MINUS expression .)
    LT              reduce using rule 163 (expression -> expression MINUS expression .)
    LE              reduce using rule 163 (expression -> expression MINUS expression .)
    GT              reduce using rule 163 (expression -> expression MINUS expression .)
    GE              reduce using rule 163 (expression -> expression MINUS expression .)
    EQ              reduce using rule 163 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 163 (expression -> expression MINUS expression .)
    COLON           reduce using rule 163 (expression -> expression MINUS expression .)
    RS              reduce using rule 163 (expression -> expression MINUS expression .)
    RP              reduce using rule 163 (expression -> expression MINUS expression .)
    THEN            reduce using rule 163 (expression -> expression MINUS expression .)
    DO              reduce using rule 163 (expression -> expression MINUS expression .)
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219

  ! STAR            [ reduce using rule 163 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 163 (expression -> expression MINUS expression .) ]
  ! IDIV            [ reduce using rule 163 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 163 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 163 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 163 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 212 ]
  ! MINUS           [ shift and go to state 213 ]
  ! LT              [ shift and go to state 220 ]
  ! LE              [ shift and go to state 221 ]
  ! GT              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 224 ]
  ! NEQ             [ shift and go to state 225 ]


state 321

    (164) expression -> expression STAR expression .
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            reduce using rule 164 (expression -> expression STAR expression .)
    COMMA           reduce using rule 164 (expression -> expression STAR expression .)
    PLUS            reduce using rule 164 (expression -> expression STAR expression .)
    MINUS           reduce using rule 164 (expression -> expression STAR expression .)
    STAR            reduce using rule 164 (expression -> expression STAR expression .)
    DIV             reduce using rule 164 (expression -> expression STAR expression .)
    IDIV            reduce using rule 164 (expression -> expression STAR expression .)
    MOD             reduce using rule 164 (expression -> expression STAR expression .)
    AND             reduce using rule 164 (expression -> expression STAR expression .)
    OR              reduce using rule 164 (expression -> expression STAR expression .)
    LT              reduce using rule 164 (expression -> expression STAR expression .)
    LE              reduce using rule 164 (expression -> expression STAR expression .)
    GT              reduce using rule 164 (expression -> expression STAR expression .)
    GE              reduce using rule 164 (expression -> expression STAR expression .)
    EQ              reduce using rule 164 (expression -> expression STAR expression .)
    NEQ             reduce using rule 164 (expression -> expression STAR expression .)
    COLON           reduce using rule 164 (expression -> expression STAR expression .)
    RS              reduce using rule 164 (expression -> expression STAR expression .)
    RP              reduce using rule 164 (expression -> expression STAR expression .)
    THEN            reduce using rule 164 (expression -> expression STAR expression .)
    DO              reduce using rule 164 (expression -> expression STAR expression .)

  ! PLUS            [ shift and go to state 212 ]
  ! MINUS           [ shift and go to state 213 ]
  ! STAR            [ shift and go to state 214 ]
  ! DIV             [ shift and go to state 215 ]
  ! IDIV            [ shift and go to state 216 ]
  ! MOD             [ shift and go to state 217 ]
  ! AND             [ shift and go to state 218 ]
  ! OR              [ shift and go to state 219 ]
  ! LT              [ shift and go to state 220 ]
  ! LE              [ shift and go to state 221 ]
  ! GT              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 224 ]
  ! NEQ             [ shift and go to state 225 ]


state 322

    (165) expression -> expression DIV expression .
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            reduce using rule 165 (expression -> expression DIV expression .)
    COMMA           reduce using rule 165 (expression -> expression DIV expression .)
    PLUS            reduce using rule 165 (expression -> expression DIV expression .)
    MINUS           reduce using rule 165 (expression -> expression DIV expression .)
    STAR            reduce using rule 165 (expression -> expression DIV expression .)
    DIV             reduce using rule 165 (expression -> expression DIV expression .)
    IDIV            reduce using rule 165 (expression -> expression DIV expression .)
    MOD             reduce using rule 165 (expression -> expression DIV expression .)
    AND             reduce using rule 165 (expression -> expression DIV expression .)
    OR              reduce using rule 165 (expression -> expression DIV expression .)
    LT              reduce using rule 165 (expression -> expression DIV expression .)
    LE              reduce using rule 165 (expression -> expression DIV expression .)
    GT              reduce using rule 165 (expression -> expression DIV expression .)
    GE              reduce using rule 165 (expression -> expression DIV expression .)
    EQ              reduce using rule 165 (expression -> expression DIV expression .)
    NEQ             reduce using rule 165 (expression -> expression DIV expression .)
    COLON           reduce using rule 165 (expression -> expression DIV expression .)
    RS              reduce using rule 165 (expression -> expression DIV expression .)
    RP              reduce using rule 165 (expression -> expression DIV expression .)
    THEN            reduce using rule 165 (expression -> expression DIV expression .)
    DO              reduce using rule 165 (expression -> expression DIV expression .)

  ! PLUS            [ shift and go to state 212 ]
  ! MINUS           [ shift and go to state 213 ]
  ! STAR            [ shift and go to state 214 ]
  ! DIV             [ shift and go to state 215 ]
  ! IDIV            [ shift and go to state 216 ]
  ! MOD             [ shift and go to state 217 ]
  ! AND             [ shift and go to state 218 ]
  ! OR              [ shift and go to state 219 ]
  ! LT              [ shift and go to state 220 ]
  ! LE              [ shift and go to state 221 ]
  ! GT              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 224 ]
  ! NEQ             [ shift and go to state 225 ]


state 323

    (166) expression -> expression IDIV expression .
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            reduce using rule 166 (expression -> expression IDIV expression .)
    COMMA           reduce using rule 166 (expression -> expression IDIV expression .)
    PLUS            reduce using rule 166 (expression -> expression IDIV expression .)
    MINUS           reduce using rule 166 (expression -> expression IDIV expression .)
    STAR            reduce using rule 166 (expression -> expression IDIV expression .)
    DIV             reduce using rule 166 (expression -> expression IDIV expression .)
    IDIV            reduce using rule 166 (expression -> expression IDIV expression .)
    MOD             reduce using rule 166 (expression -> expression IDIV expression .)
    AND             reduce using rule 166 (expression -> expression IDIV expression .)
    OR              reduce using rule 166 (expression -> expression IDIV expression .)
    LT              reduce using rule 166 (expression -> expression IDIV expression .)
    LE              reduce using rule 166 (expression -> expression IDIV expression .)
    GT              reduce using rule 166 (expression -> expression IDIV expression .)
    GE              reduce using rule 166 (expression -> expression IDIV expression .)
    EQ              reduce using rule 166 (expression -> expression IDIV expression .)
    NEQ             reduce using rule 166 (expression -> expression IDIV expression .)
    COLON           reduce using rule 166 (expression -> expression IDIV expression .)
    RS              reduce using rule 166 (expression -> expression IDIV expression .)
    RP              reduce using rule 166 (expression -> expression IDIV expression .)
    THEN            reduce using rule 166 (expression -> expression IDIV expression .)
    DO              reduce using rule 166 (expression -> expression IDIV expression .)

  ! PLUS            [ shift and go to state 212 ]
  ! MINUS           [ shift and go to state 213 ]
  ! STAR            [ shift and go to state 214 ]
  ! DIV             [ shift and go to state 215 ]
  ! IDIV            [ shift and go to state 216 ]
  ! MOD             [ shift and go to state 217 ]
  ! AND             [ shift and go to state 218 ]
  ! OR              [ shift and go to state 219 ]
  ! LT              [ shift and go to state 220 ]
  ! LE              [ shift and go to state 221 ]
  ! GT              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 224 ]
  ! NEQ             [ shift and go to state 225 ]


state 324

    (167) expression -> expression MOD expression .
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            reduce using rule 167 (expression -> expression MOD expression .)
    COMMA           reduce using rule 167 (expression -> expression MOD expression .)
    PLUS            reduce using rule 167 (expression -> expression MOD expression .)
    MINUS           reduce using rule 167 (expression -> expression MOD expression .)
    STAR            reduce using rule 167 (expression -> expression MOD expression .)
    DIV             reduce using rule 167 (expression -> expression MOD expression .)
    IDIV            reduce using rule 167 (expression -> expression MOD expression .)
    MOD             reduce using rule 167 (expression -> expression MOD expression .)
    AND             reduce using rule 167 (expression -> expression MOD expression .)
    OR              reduce using rule 167 (expression -> expression MOD expression .)
    LT              reduce using rule 167 (expression -> expression MOD expression .)
    LE              reduce using rule 167 (expression -> expression MOD expression .)
    GT              reduce using rule 167 (expression -> expression MOD expression .)
    GE              reduce using rule 167 (expression -> expression MOD expression .)
    EQ              reduce using rule 167 (expression -> expression MOD expression .)
    NEQ             reduce using rule 167 (expression -> expression MOD expression .)
    COLON           reduce using rule 167 (expression -> expression MOD expression .)
    RS              reduce using rule 167 (expression -> expression MOD expression .)
    RP              reduce using rule 167 (expression -> expression MOD expression .)
    THEN            reduce using rule 167 (expression -> expression MOD expression .)
    DO              reduce using rule 167 (expression -> expression MOD expression .)

  ! PLUS            [ shift and go to state 212 ]
  ! MINUS           [ shift and go to state 213 ]
  ! STAR            [ shift and go to state 214 ]
  ! DIV             [ shift and go to state 215 ]
  ! IDIV            [ shift and go to state 216 ]
  ! MOD             [ shift and go to state 217 ]
  ! AND             [ shift and go to state 218 ]
  ! OR              [ shift and go to state 219 ]
  ! LT              [ shift and go to state 220 ]
  ! LE              [ shift and go to state 221 ]
  ! GT              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 224 ]
  ! NEQ             [ shift and go to state 225 ]


state 325

    (168) expression -> expression AND expression .
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            reduce using rule 168 (expression -> expression AND expression .)
    COMMA           reduce using rule 168 (expression -> expression AND expression .)
    PLUS            reduce using rule 168 (expression -> expression AND expression .)
    MINUS           reduce using rule 168 (expression -> expression AND expression .)
    STAR            reduce using rule 168 (expression -> expression AND expression .)
    DIV             reduce using rule 168 (expression -> expression AND expression .)
    IDIV            reduce using rule 168 (expression -> expression AND expression .)
    MOD             reduce using rule 168 (expression -> expression AND expression .)
    AND             reduce using rule 168 (expression -> expression AND expression .)
    OR              reduce using rule 168 (expression -> expression AND expression .)
    LT              reduce using rule 168 (expression -> expression AND expression .)
    LE              reduce using rule 168 (expression -> expression AND expression .)
    GT              reduce using rule 168 (expression -> expression AND expression .)
    GE              reduce using rule 168 (expression -> expression AND expression .)
    EQ              reduce using rule 168 (expression -> expression AND expression .)
    NEQ             reduce using rule 168 (expression -> expression AND expression .)
    COLON           reduce using rule 168 (expression -> expression AND expression .)
    RS              reduce using rule 168 (expression -> expression AND expression .)
    RP              reduce using rule 168 (expression -> expression AND expression .)
    THEN            reduce using rule 168 (expression -> expression AND expression .)
    DO              reduce using rule 168 (expression -> expression AND expression .)

  ! PLUS            [ shift and go to state 212 ]
  ! MINUS           [ shift and go to state 213 ]
  ! STAR            [ shift and go to state 214 ]
  ! DIV             [ shift and go to state 215 ]
  ! IDIV            [ shift and go to state 216 ]
  ! MOD             [ shift and go to state 217 ]
  ! AND             [ shift and go to state 218 ]
  ! OR              [ shift and go to state 219 ]
  ! LT              [ shift and go to state 220 ]
  ! LE              [ shift and go to state 221 ]
  ! GT              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 224 ]
  ! NEQ             [ shift and go to state 225 ]


state 326

    (169) expression -> expression OR expression .
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            reduce using rule 169 (expression -> expression OR expression .)
    COMMA           reduce using rule 169 (expression -> expression OR expression .)
    PLUS            reduce using rule 169 (expression -> expression OR expression .)
    MINUS           reduce using rule 169 (expression -> expression OR expression .)
    STAR            reduce using rule 169 (expression -> expression OR expression .)
    DIV             reduce using rule 169 (expression -> expression OR expression .)
    IDIV            reduce using rule 169 (expression -> expression OR expression .)
    MOD             reduce using rule 169 (expression -> expression OR expression .)
    AND             reduce using rule 169 (expression -> expression OR expression .)
    OR              reduce using rule 169 (expression -> expression OR expression .)
    LT              reduce using rule 169 (expression -> expression OR expression .)
    LE              reduce using rule 169 (expression -> expression OR expression .)
    GT              reduce using rule 169 (expression -> expression OR expression .)
    GE              reduce using rule 169 (expression -> expression OR expression .)
    EQ              reduce using rule 169 (expression -> expression OR expression .)
    NEQ             reduce using rule 169 (expression -> expression OR expression .)
    COLON           reduce using rule 169 (expression -> expression OR expression .)
    RS              reduce using rule 169 (expression -> expression OR expression .)
    RP              reduce using rule 169 (expression -> expression OR expression .)
    THEN            reduce using rule 169 (expression -> expression OR expression .)
    DO              reduce using rule 169 (expression -> expression OR expression .)

  ! PLUS            [ shift and go to state 212 ]
  ! MINUS           [ shift and go to state 213 ]
  ! STAR            [ shift and go to state 214 ]
  ! DIV             [ shift and go to state 215 ]
  ! IDIV            [ shift and go to state 216 ]
  ! MOD             [ shift and go to state 217 ]
  ! AND             [ shift and go to state 218 ]
  ! OR              [ shift and go to state 219 ]
  ! LT              [ shift and go to state 220 ]
  ! LE              [ shift and go to state 221 ]
  ! GT              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 224 ]
  ! NEQ             [ shift and go to state 225 ]


state 327

    (170) expression -> expression LT expression .
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            reduce using rule 170 (expression -> expression LT expression .)
    COMMA           reduce using rule 170 (expression -> expression LT expression .)
    LT              reduce using rule 170 (expression -> expression LT expression .)
    LE              reduce using rule 170 (expression -> expression LT expression .)
    GT              reduce using rule 170 (expression -> expression LT expression .)
    GE              reduce using rule 170 (expression -> expression LT expression .)
    EQ              reduce using rule 170 (expression -> expression LT expression .)
    NEQ             reduce using rule 170 (expression -> expression LT expression .)
    COLON           reduce using rule 170 (expression -> expression LT expression .)
    RS              reduce using rule 170 (expression -> expression LT expression .)
    RP              reduce using rule 170 (expression -> expression LT expression .)
    THEN            reduce using rule 170 (expression -> expression LT expression .)
    DO              reduce using rule 170 (expression -> expression LT expression .)
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219

  ! PLUS            [ reduce using rule 170 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 170 (expression -> expression LT expression .) ]
  ! STAR            [ reduce using rule 170 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 170 (expression -> expression LT expression .) ]
  ! IDIV            [ reduce using rule 170 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 170 (expression -> expression LT expression .) ]
  ! AND             [ reduce using rule 170 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 170 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 220 ]
  ! LE              [ shift and go to state 221 ]
  ! GT              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 224 ]
  ! NEQ             [ shift and go to state 225 ]


state 328

    (171) expression -> expression LE expression .
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            reduce using rule 171 (expression -> expression LE expression .)
    COMMA           reduce using rule 171 (expression -> expression LE expression .)
    LT              reduce using rule 171 (expression -> expression LE expression .)
    LE              reduce using rule 171 (expression -> expression LE expression .)
    GT              reduce using rule 171 (expression -> expression LE expression .)
    GE              reduce using rule 171 (expression -> expression LE expression .)
    EQ              reduce using rule 171 (expression -> expression LE expression .)
    NEQ             reduce using rule 171 (expression -> expression LE expression .)
    COLON           reduce using rule 171 (expression -> expression LE expression .)
    RS              reduce using rule 171 (expression -> expression LE expression .)
    RP              reduce using rule 171 (expression -> expression LE expression .)
    THEN            reduce using rule 171 (expression -> expression LE expression .)
    DO              reduce using rule 171 (expression -> expression LE expression .)
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219

  ! PLUS            [ reduce using rule 171 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 171 (expression -> expression LE expression .) ]
  ! STAR            [ reduce using rule 171 (expression -> expression LE expression .) ]
  ! DIV             [ reduce using rule 171 (expression -> expression LE expression .) ]
  ! IDIV            [ reduce using rule 171 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 171 (expression -> expression LE expression .) ]
  ! AND             [ reduce using rule 171 (expression -> expression LE expression .) ]
  ! OR              [ reduce using rule 171 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 220 ]
  ! LE              [ shift and go to state 221 ]
  ! GT              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 224 ]
  ! NEQ             [ shift and go to state 225 ]


state 329

    (172) expression -> expression GT expression .
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            reduce using rule 172 (expression -> expression GT expression .)
    COMMA           reduce using rule 172 (expression -> expression GT expression .)
    LT              reduce using rule 172 (expression -> expression GT expression .)
    LE              reduce using rule 172 (expression -> expression GT expression .)
    GT              reduce using rule 172 (expression -> expression GT expression .)
    GE              reduce using rule 172 (expression -> expression GT expression .)
    EQ              reduce using rule 172 (expression -> expression GT expression .)
    NEQ             reduce using rule 172 (expression -> expression GT expression .)
    COLON           reduce using rule 172 (expression -> expression GT expression .)
    RS              reduce using rule 172 (expression -> expression GT expression .)
    RP              reduce using rule 172 (expression -> expression GT expression .)
    THEN            reduce using rule 172 (expression -> expression GT expression .)
    DO              reduce using rule 172 (expression -> expression GT expression .)
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219

  ! PLUS            [ reduce using rule 172 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 172 (expression -> expression GT expression .) ]
  ! STAR            [ reduce using rule 172 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 172 (expression -> expression GT expression .) ]
  ! IDIV            [ reduce using rule 172 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 172 (expression -> expression GT expression .) ]
  ! AND             [ reduce using rule 172 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 172 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 220 ]
  ! LE              [ shift and go to state 221 ]
  ! GT              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 224 ]
  ! NEQ             [ shift and go to state 225 ]


state 330

    (173) expression -> expression GE expression .
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            reduce using rule 173 (expression -> expression GE expression .)
    COMMA           reduce using rule 173 (expression -> expression GE expression .)
    LT              reduce using rule 173 (expression -> expression GE expression .)
    LE              reduce using rule 173 (expression -> expression GE expression .)
    GT              reduce using rule 173 (expression -> expression GE expression .)
    GE              reduce using rule 173 (expression -> expression GE expression .)
    EQ              reduce using rule 173 (expression -> expression GE expression .)
    NEQ             reduce using rule 173 (expression -> expression GE expression .)
    COLON           reduce using rule 173 (expression -> expression GE expression .)
    RS              reduce using rule 173 (expression -> expression GE expression .)
    RP              reduce using rule 173 (expression -> expression GE expression .)
    THEN            reduce using rule 173 (expression -> expression GE expression .)
    DO              reduce using rule 173 (expression -> expression GE expression .)
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219

  ! PLUS            [ reduce using rule 173 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 173 (expression -> expression GE expression .) ]
  ! STAR            [ reduce using rule 173 (expression -> expression GE expression .) ]
  ! DIV             [ reduce using rule 173 (expression -> expression GE expression .) ]
  ! IDIV            [ reduce using rule 173 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 173 (expression -> expression GE expression .) ]
  ! AND             [ reduce using rule 173 (expression -> expression GE expression .) ]
  ! OR              [ reduce using rule 173 (expression -> expression GE expression .) ]
  ! LT              [ shift and go to state 220 ]
  ! LE              [ shift and go to state 221 ]
  ! GT              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 224 ]
  ! NEQ             [ shift and go to state 225 ]


state 331

    (174) expression -> expression EQ expression .
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            reduce using rule 174 (expression -> expression EQ expression .)
    COMMA           reduce using rule 174 (expression -> expression EQ expression .)
    LT              reduce using rule 174 (expression -> expression EQ expression .)
    LE              reduce using rule 174 (expression -> expression EQ expression .)
    GT              reduce using rule 174 (expression -> expression EQ expression .)
    GE              reduce using rule 174 (expression -> expression EQ expression .)
    EQ              reduce using rule 174 (expression -> expression EQ expression .)
    NEQ             reduce using rule 174 (expression -> expression EQ expression .)
    COLON           reduce using rule 174 (expression -> expression EQ expression .)
    RS              reduce using rule 174 (expression -> expression EQ expression .)
    RP              reduce using rule 174 (expression -> expression EQ expression .)
    THEN            reduce using rule 174 (expression -> expression EQ expression .)
    DO              reduce using rule 174 (expression -> expression EQ expression .)
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219

  ! PLUS            [ reduce using rule 174 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 174 (expression -> expression EQ expression .) ]
  ! STAR            [ reduce using rule 174 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 174 (expression -> expression EQ expression .) ]
  ! IDIV            [ reduce using rule 174 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 174 (expression -> expression EQ expression .) ]
  ! AND             [ reduce using rule 174 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 174 (expression -> expression EQ expression .) ]
  ! LT              [ shift and go to state 220 ]
  ! LE              [ shift and go to state 221 ]
  ! GT              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 224 ]
  ! NEQ             [ shift and go to state 225 ]


state 332

    (175) expression -> expression NEQ expression .
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    SEMI            reduce using rule 175 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 175 (expression -> expression NEQ expression .)
    LT              reduce using rule 175 (expression -> expression NEQ expression .)
    LE              reduce using rule 175 (expression -> expression NEQ expression .)
    GT              reduce using rule 175 (expression -> expression NEQ expression .)
    GE              reduce using rule 175 (expression -> expression NEQ expression .)
    EQ              reduce using rule 175 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 175 (expression -> expression NEQ expression .)
    COLON           reduce using rule 175 (expression -> expression NEQ expression .)
    RS              reduce using rule 175 (expression -> expression NEQ expression .)
    RP              reduce using rule 175 (expression -> expression NEQ expression .)
    THEN            reduce using rule 175 (expression -> expression NEQ expression .)
    DO              reduce using rule 175 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219

  ! PLUS            [ reduce using rule 175 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 175 (expression -> expression NEQ expression .) ]
  ! STAR            [ reduce using rule 175 (expression -> expression NEQ expression .) ]
  ! DIV             [ reduce using rule 175 (expression -> expression NEQ expression .) ]
  ! IDIV            [ reduce using rule 175 (expression -> expression NEQ expression .) ]
  ! MOD             [ reduce using rule 175 (expression -> expression NEQ expression .) ]
  ! AND             [ reduce using rule 175 (expression -> expression NEQ expression .) ]
  ! OR              [ reduce using rule 175 (expression -> expression NEQ expression .) ]
  ! LT              [ shift and go to state 220 ]
  ! LE              [ shift and go to state 221 ]
  ! GT              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 224 ]
  ! NEQ             [ shift and go to state 225 ]


state 333

    (178) simple_expression -> LP expression RP .

    SEMI            reduce using rule 178 (simple_expression -> LP expression RP .)
    COMMA           reduce using rule 178 (simple_expression -> LP expression RP .)
    PLUS            reduce using rule 178 (simple_expression -> LP expression RP .)
    MINUS           reduce using rule 178 (simple_expression -> LP expression RP .)
    STAR            reduce using rule 178 (simple_expression -> LP expression RP .)
    DIV             reduce using rule 178 (simple_expression -> LP expression RP .)
    IDIV            reduce using rule 178 (simple_expression -> LP expression RP .)
    MOD             reduce using rule 178 (simple_expression -> LP expression RP .)
    AND             reduce using rule 178 (simple_expression -> LP expression RP .)
    OR              reduce using rule 178 (simple_expression -> LP expression RP .)
    LT              reduce using rule 178 (simple_expression -> LP expression RP .)
    LE              reduce using rule 178 (simple_expression -> LP expression RP .)
    GT              reduce using rule 178 (simple_expression -> LP expression RP .)
    GE              reduce using rule 178 (simple_expression -> LP expression RP .)
    EQ              reduce using rule 178 (simple_expression -> LP expression RP .)
    NEQ             reduce using rule 178 (simple_expression -> LP expression RP .)
    COLON           reduce using rule 178 (simple_expression -> LP expression RP .)
    RS              reduce using rule 178 (simple_expression -> LP expression RP .)
    RP              reduce using rule 178 (simple_expression -> LP expression RP .)
    THEN            reduce using rule 178 (simple_expression -> LP expression RP .)
    DO              reduce using rule 178 (simple_expression -> LP expression RP .)


state 334

    (22) var_list -> ID PASSIG expression COMMA var_list_tail .

    PERMANENT       reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    CONST           reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    CLASS           reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    BOOL            reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    CHAR            reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    STRING          reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    INT             reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    FLOAT           reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    ID              reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    BOOL_LS         reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    CHAR_LS         reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    STRING_LS       reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    INT_LS          reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    FLOAT_LS        reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    ID_LS           reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    FILE            reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    MAIN            reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    ENDMAIN         reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    ID_COLON        reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    SEMI            reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    RETURN          reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    PRETURN         reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    IF              reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    WHILE           reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    FOR             reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    GOTO            reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    BREAK           reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    CONTINUE        reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    GUARD           reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    RAISE           reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    TERMINATE       reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    ID_LP           reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    BOOL_LP         reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    CHAR_LP         reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    STRING_LP       reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    INT_LP          reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    FLOAT_LP        reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    FIN_DOT         reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    FOUT_DOT        reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    IDOF_LP         reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    SIZEOF_LP       reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    TYPEOF_LP       reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    PARENT_DOT      reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    ID_DOT          reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    ENDMETHOD       reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    ENDCLASS        reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    PUBLIC          reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    PRIVATE         reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    SHARED          reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)
    METHOD          reduce using rule 22 (var_list -> ID PASSIG expression COMMA var_list_tail .)


state 335

    (23) var_list -> ID PASSIG ALLOC ID_LP par_list . SEMI
    (24) var_list -> ID PASSIG ALLOC ID_LP par_list . COMMA var_list_tail

    SEMI            shift and go to state 393
    COMMA           shift and go to state 394


state 336

    (77) class_body -> PUBLIC method_header method_body class_body .

    PERMANENT       reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    CONST           reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    CLASS           reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    BOOL            reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    CHAR            reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    STRING          reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    INT             reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    FLOAT           reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    ID              reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    BOOL_LS         reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    CHAR_LS         reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    STRING_LS       reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    INT_LS          reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    FLOAT_LS        reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    ID_LS           reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    FILE            reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)
    MAIN            reduce using rule 77 (class_body -> PUBLIC method_header method_body class_body .)


state 337

    (79) attr_definition -> PUBLIC SHARED CONST type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 395

state 338

    (83) attr_definition -> PUBLIC SHARED type var_list .

    ENDCLASS        reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    PUBLIC          reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    PRIVATE         reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    SHARED          reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    CONST           reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    METHOD          reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    BOOL            reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    CHAR            reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    STRING          reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    INT             reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    FLOAT           reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    ID              reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    BOOL_LS         reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    CHAR_LS         reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    STRING_LS       reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    INT_LS          reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    FLOAT_LS        reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    ID_LS           reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)
    FILE            reduce using rule 83 (attr_definition -> PUBLIC SHARED type var_list .)


state 339

    (80) attr_definition -> PUBLIC CONST SHARED type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 396

state 340

    (84) attr_definition -> PUBLIC CONST type var_list .

    ENDCLASS        reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    PUBLIC          reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    PRIVATE         reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    SHARED          reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    CONST           reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    METHOD          reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    BOOL            reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    CHAR            reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    STRING          reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    INT             reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    FLOAT           reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    ID              reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    BOOL_LS         reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    CHAR_LS         reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    STRING_LS       reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    INT_LS          reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    FLOAT_LS        reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    ID_LS           reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)
    FILE            reduce using rule 84 (attr_definition -> PUBLIC CONST type var_list .)


state 341

    (78) class_body -> PRIVATE method_header method_body class_body .

    PERMANENT       reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    CONST           reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    CLASS           reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    BOOL            reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    CHAR            reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    STRING          reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    INT             reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    FLOAT           reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    ID              reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    BOOL_LS         reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    CHAR_LS         reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    STRING_LS       reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    INT_LS          reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    FLOAT_LS        reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    ID_LS           reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    FILE            reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)
    MAIN            reduce using rule 78 (class_body -> PRIVATE method_header method_body class_body .)


state 342

    (81) attr_definition -> PRIVATE SHARED CONST type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 397

state 343

    (87) attr_definition -> PRIVATE SHARED type var_list .

    ENDCLASS        reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    PUBLIC          reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    PRIVATE         reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    SHARED          reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    CONST           reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    METHOD          reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    BOOL            reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    CHAR            reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    STRING          reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    INT             reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    FLOAT           reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    ID              reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    BOOL_LS         reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    CHAR_LS         reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    STRING_LS       reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    INT_LS          reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    FLOAT_LS        reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    ID_LS           reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)
    FILE            reduce using rule 87 (attr_definition -> PRIVATE SHARED type var_list .)


state 344

    (82) attr_definition -> PRIVATE CONST SHARED type . var_list
    (17) var_list -> . ID SEMI
    (18) var_list -> . ID COMMA var_list_tail
    (19) var_list -> . ID ASSIG expression SEMI
    (20) var_list -> . ID ASSIG expression COMMA var_list_tail
    (21) var_list -> . ID PASSIG expression SEMI
    (22) var_list -> . ID PASSIG expression COMMA var_list_tail
    (23) var_list -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (24) var_list -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 27

    var_list                       shift and go to state 398

state 345

    (88) attr_definition -> PRIVATE CONST type var_list .

    ENDCLASS        reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    PUBLIC          reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    PRIVATE         reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    SHARED          reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    CONST           reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    METHOD          reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    BOOL            reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    CHAR            reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    STRING          reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    INT             reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    FLOAT           reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    ID              reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    BOOL_LS         reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    CHAR_LS         reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    STRING_LS       reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    INT_LS          reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    FLOAT_LS        reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    ID_LS           reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)
    FILE            reduce using rule 88 (attr_definition -> PRIVATE CONST type var_list .)


state 346

    (85) attr_definition -> SHARED CONST type var_list .

    ENDCLASS        reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    PUBLIC          reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    PRIVATE         reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    SHARED          reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    CONST           reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    METHOD          reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    BOOL            reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    CHAR            reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    STRING          reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    INT             reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    FLOAT           reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    ID              reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    BOOL_LS         reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    CHAR_LS         reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    STRING_LS       reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    INT_LS          reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    FLOAT_LS        reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    ID_LS           reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)
    FILE            reduce using rule 85 (attr_definition -> SHARED CONST type var_list .)


state 347

    (86) attr_definition -> CONST SHARED type var_list .

    ENDCLASS        reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    PUBLIC          reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    PRIVATE         reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    SHARED          reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    CONST           reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    METHOD          reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    BOOL            reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    CHAR            reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    STRING          reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    INT             reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    FLOAT           reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    ID              reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    BOOL_LS         reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    CHAR_LS         reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    STRING_LS       reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    INT_LS          reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    FLOAT_LS        reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    ID_LS           reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)
    FILE            reduce using rule 86 (attr_definition -> CONST SHARED type var_list .)


state 348

    (94) method_header -> METHOD ID_LP arg_list ARROW . type COLON
    (33) type -> . BOOL
    (34) type -> . CHAR
    (35) type -> . STRING
    (36) type -> . INT
    (37) type -> . FLOAT
    (38) type -> . ID
    (39) type -> . BOOL_LS type_tail
    (40) type -> . CHAR_LS type_tail
    (41) type -> . STRING_LS type_tail
    (42) type -> . INT_LS type_tail
    (43) type -> . FLOAT_LS type_tail
    (44) type -> . ID_LS type_tail
    (45) type -> . FILE

    BOOL            shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14
    BOOL_LS         shift and go to state 15
    CHAR_LS         shift and go to state 16
    STRING_LS       shift and go to state 17
    INT_LS          shift and go to state 18
    FLOAT_LS        shift and go to state 19
    ID_LS           shift and go to state 20
    FILE            shift and go to state 21

    type                           shift and go to state 399

state 349

    (95) method_header -> METHOD ID_LP arg_list COLON .

    ENDMETHOD       reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    ID_COLON        reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    PERMANENT       reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    CONST           reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    BOOL            reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    CHAR            reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    STRING          reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    INT             reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    FLOAT           reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    ID              reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    BOOL_LS         reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    CHAR_LS         reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    STRING_LS       reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    INT_LS          reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    FLOAT_LS        reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    ID_LS           reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    FILE            reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    SEMI            reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    RETURN          reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    PRETURN         reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    IF              reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    WHILE           reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    FOR             reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    GOTO            reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    BREAK           reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    CONTINUE        reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    GUARD           reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    RAISE           reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    TERMINATE       reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    ID_LP           reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    BOOL_LP         reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    CHAR_LP         reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    STRING_LP       reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    INT_LP          reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    FLOAT_LP        reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    FIN_DOT         reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    FOUT_DOT        reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    IDOF_LP         reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    SIZEOF_LP       reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    TYPEOF_LP       reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    PARENT_DOT      reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)
    ID_DOT          reduce using rule 95 (method_header -> METHOD ID_LP arg_list COLON .)


state 350

    (97) arg_list -> atype ID . RP
    (98) arg_list -> atype ID . COMMA arg_list_tail

    RP              shift and go to state 400
    COMMA           shift and go to state 401


state 351

    (99) arg_list -> CONST atype . ID RP
    (100) arg_list -> CONST atype . ID COMMA arg_list_tail

    ID              shift and go to state 402


state 352

    (60) atype -> BOOL_LS atype_tail .

    ID              reduce using rule 60 (atype -> BOOL_LS atype_tail .)


state 353

    (67) atype_tail -> RLS . atype_tail
    (67) atype_tail -> . RLS atype_tail
    (68) atype_tail -> . RS_AT
    (69) atype_tail -> . RS

    RLS             shift and go to state 353
    RS_AT           shift and go to state 354
    RS              shift and go to state 355

    atype_tail                     shift and go to state 403

state 354

    (68) atype_tail -> RS_AT .

    ID              reduce using rule 68 (atype_tail -> RS_AT .)


state 355

    (69) atype_tail -> RS .

    ID              reduce using rule 69 (atype_tail -> RS .)


state 356

    (61) atype -> CHAR_LS atype_tail .

    ID              reduce using rule 61 (atype -> CHAR_LS atype_tail .)


state 357

    (62) atype -> STRING_LS atype_tail .

    ID              reduce using rule 62 (atype -> STRING_LS atype_tail .)


state 358

    (63) atype -> INT_LS atype_tail .

    ID              reduce using rule 63 (atype -> INT_LS atype_tail .)


state 359

    (64) atype -> FLOAT_LS atype_tail .

    ID              reduce using rule 64 (atype -> FLOAT_LS atype_tail .)


state 360

    (65) atype -> ID_LS atype_tail .

    ID              reduce using rule 65 (atype -> ID_LS atype_tail .)


state 361

    (190) arr -> ID_LS COLON expression RS .

    ASSIG           reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    PASSIG          reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    SEMI            reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    COMMA           reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    PLUS            reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    MINUS           reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    STAR            reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    DIV             reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    IDIV            reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    MOD             reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    AND             reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    OR              reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    LT              reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    LE              reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    GT              reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    GE              reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    EQ              reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    NEQ             reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    COLON           reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    RS              reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    RP              reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    THEN            reduce using rule 190 (arr -> ID_LS COLON expression RS .)
    DO              reduce using rule 190 (arr -> ID_LS COLON expression RS .)


state 362

    (192) arr -> ID_LS expression COLON expression . RS
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RS              shift and go to state 404
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 363

    (191) arr -> ID_LS expression COLON RS .

    ASSIG           reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    PASSIG          reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    SEMI            reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    COMMA           reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    PLUS            reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    MINUS           reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    STAR            reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    DIV             reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    IDIV            reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    MOD             reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    AND             reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    OR              reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    LT              reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    LE              reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    GT              reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    GE              reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    EQ              reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    NEQ             reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    COLON           reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    RS              reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    RP              reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    THEN            reduce using rule 191 (arr -> ID_LS expression COLON RS .)
    DO              reduce using rule 191 (arr -> ID_LS expression COLON RS .)


state 364

    (197) arr -> ID_LS expression RS arr_tail .

    ASSIG           reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    PASSIG          reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    SEMI            reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    COMMA           reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    PLUS            reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    MINUS           reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    STAR            reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    DIV             reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    IDIV            reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    MOD             reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    AND             reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    OR              reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    LT              reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    LE              reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    GT              reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    GE              reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    EQ              reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    NEQ             reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    COLON           reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    RS              reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    RP              reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    THEN            reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)
    DO              reduce using rule 197 (arr -> ID_LS expression RS arr_tail .)


state 365

    (199) arr_tail -> LS . expression RS arr_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 405
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 366

    (128) assig_stm -> storage ASSIG expression SEMI .

    ENDMAIN         reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    ID_COLON        reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    PERMANENT       reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    CONST           reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    BOOL            reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    CHAR            reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    STRING          reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    INT             reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    FLOAT           reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    ID              reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    BOOL_LS         reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    CHAR_LS         reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    STRING_LS       reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    INT_LS          reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    FLOAT_LS        reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    ID_LS           reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    FILE            reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    SEMI            reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    RETURN          reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    PRETURN         reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    IF              reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    WHILE           reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    FOR             reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    GOTO            reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    BREAK           reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    CONTINUE        reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    GUARD           reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    RAISE           reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    TERMINATE       reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    ID_LP           reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    BOOL_LP         reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    CHAR_LP         reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    STRING_LP       reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    INT_LP          reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    FLOAT_LP        reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    FIN_DOT         reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    FOUT_DOT        reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    IDOF_LP         reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    SIZEOF_LP       reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    TYPEOF_LP       reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    PARENT_DOT      reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    ID_DOT          reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    ENDMETHOD       reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    ENDWHILE        reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    CATCH           reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    ENDIF           reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    ELSE            reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    ENDFOR          reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    ENDCATCH        reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)
    STRING_LIT      reduce using rule 128 (assig_stm -> storage ASSIG expression SEMI .)


state 367

    (129) passig_stm -> storage PASSIG expression SEMI .

    ENDMAIN         reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    ID_COLON        reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    PERMANENT       reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    CONST           reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    BOOL            reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    CHAR            reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    STRING          reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    INT             reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    FLOAT           reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    ID              reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    BOOL_LS         reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    CHAR_LS         reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    STRING_LS       reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    INT_LS          reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    FLOAT_LS        reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    ID_LS           reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    FILE            reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    SEMI            reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    RETURN          reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    PRETURN         reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    IF              reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    WHILE           reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    FOR             reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    GOTO            reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    BREAK           reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    CONTINUE        reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    GUARD           reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    RAISE           reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    TERMINATE       reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    ID_LP           reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    BOOL_LP         reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    CHAR_LP         reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    STRING_LP       reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    INT_LP          reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    FLOAT_LP        reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    FIN_DOT         reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    FOUT_DOT        reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    IDOF_LP         reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    SIZEOF_LP       reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    TYPEOF_LP       reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    PARENT_DOT      reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    ID_DOT          reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    ENDMETHOD       reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    ENDWHILE        reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    CATCH           reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    ENDIF           reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    ELSE            reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    ENDFOR          reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    ENDCATCH        reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)
    STRING_LIT      reduce using rule 129 (passig_stm -> storage PASSIG expression SEMI .)


state 368

    (130) passig_stm -> storage PASSIG ALLOC ID_LP . par_list SEMI
    (222) par_list -> . RP
    (223) par_list -> . expression RP
    (224) par_list -> . expression COMMA par_list_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    RP              shift and go to state 169
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    par_list                       shift and go to state 406
    expression                     shift and go to state 170
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 369

    (226) par_list_tail -> expression . RP
    (227) par_list_tail -> expression . COMMA par_list_tail
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RP              shift and go to state 407
    COMMA           shift and go to state 408
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 370

    (224) par_list -> expression COMMA par_list_tail .

    SEMI            reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    COMMA           reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    PLUS            reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    MINUS           reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    STAR            reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    DIV             reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    IDIV            reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    MOD             reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    AND             reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    OR              reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    LT              reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    LE              reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    GT              reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    GE              reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    EQ              reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    NEQ             reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    COLON           reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    RS              reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    RP              reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    THEN            reduce using rule 224 (par_list -> expression COMMA par_list_tail .)
    DO              reduce using rule 224 (par_list -> expression COMMA par_list_tail .)


state 371

    (225) par_list_tail -> RP .

    SEMI            reduce using rule 225 (par_list_tail -> RP .)
    COMMA           reduce using rule 225 (par_list_tail -> RP .)
    PLUS            reduce using rule 225 (par_list_tail -> RP .)
    MINUS           reduce using rule 225 (par_list_tail -> RP .)
    STAR            reduce using rule 225 (par_list_tail -> RP .)
    DIV             reduce using rule 225 (par_list_tail -> RP .)
    IDIV            reduce using rule 225 (par_list_tail -> RP .)
    MOD             reduce using rule 225 (par_list_tail -> RP .)
    AND             reduce using rule 225 (par_list_tail -> RP .)
    OR              reduce using rule 225 (par_list_tail -> RP .)
    LT              reduce using rule 225 (par_list_tail -> RP .)
    LE              reduce using rule 225 (par_list_tail -> RP .)
    GT              reduce using rule 225 (par_list_tail -> RP .)
    GE              reduce using rule 225 (par_list_tail -> RP .)
    EQ              reduce using rule 225 (par_list_tail -> RP .)
    NEQ             reduce using rule 225 (par_list_tail -> RP .)
    COLON           reduce using rule 225 (par_list_tail -> RP .)
    RS              reduce using rule 225 (par_list_tail -> RP .)
    RP              reduce using rule 225 (par_list_tail -> RP .)
    THEN            reduce using rule 225 (par_list_tail -> RP .)
    DO              reduce using rule 225 (par_list_tail -> RP .)


state 372

    (132) if_stm -> IF expression THEN stms . ENDIF
    (133) if_stm -> IF expression THEN stms . ELSE stms ENDIF

    ENDIF           shift and go to state 409
    ELSE            shift and go to state 410


state 373

    (134) while_stm -> WHILE expression DO stms . ENDWHILE

    ENDWHILE        shift and go to state 411


state 374

    (135) while_stm -> WHILE expression DO ENDWHILE .

    ENDMAIN         reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    ID_COLON        reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    PERMANENT       reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    CONST           reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    BOOL            reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    CHAR            reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    STRING          reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    INT             reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    FLOAT           reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    ID              reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    BOOL_LS         reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    CHAR_LS         reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    STRING_LS       reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    INT_LS          reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    FLOAT_LS        reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    ID_LS           reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    FILE            reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    SEMI            reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    RETURN          reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    PRETURN         reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    IF              reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    WHILE           reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    FOR             reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    GOTO            reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    BREAK           reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    CONTINUE        reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    GUARD           reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    RAISE           reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    TERMINATE       reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    ID_LP           reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    BOOL_LP         reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    CHAR_LP         reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    STRING_LP       reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    INT_LP          reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    FLOAT_LP        reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    FIN_DOT         reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    FOUT_DOT        reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    IDOF_LP         reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    SIZEOF_LP       reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    TYPEOF_LP       reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    PARENT_DOT      reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    ID_DOT          reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    ENDMETHOD       reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    ENDWHILE        reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    CATCH           reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    ENDIF           reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    ELSE            reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    ENDFOR          reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    ENDCATCH        reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)
    STRING_LIT      reduce using rule 135 (while_stm -> WHILE expression DO ENDWHILE .)


state 375

    (136) while_stm -> WHILE DO stms ENDWHILE .

    ENDMAIN         reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    ID_COLON        reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    PERMANENT       reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    CONST           reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    BOOL            reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    CHAR            reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    STRING          reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    INT             reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    FLOAT           reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    ID              reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    BOOL_LS         reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    CHAR_LS         reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    STRING_LS       reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    INT_LS          reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    FLOAT_LS        reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    ID_LS           reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    FILE            reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    SEMI            reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    RETURN          reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    PRETURN         reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    IF              reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    WHILE           reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    FOR             reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    GOTO            reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    BREAK           reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    CONTINUE        reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    GUARD           reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    RAISE           reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    TERMINATE       reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    ID_LP           reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    BOOL_LP         reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    CHAR_LP         reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    STRING_LP       reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    INT_LP          reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    FLOAT_LP        reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    FIN_DOT         reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    FOUT_DOT        reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    IDOF_LP         reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    SIZEOF_LP       reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    TYPEOF_LP       reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    PARENT_DOT      reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    ID_DOT          reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    ENDMETHOD       reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    ENDWHILE        reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    CATCH           reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    ENDIF           reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    ELSE            reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    ENDFOR          reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    ENDCATCH        reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)
    STRING_LIT      reduce using rule 136 (while_stm -> WHILE DO stms ENDWHILE .)


state 376

    (70) stms -> stm stms .

    ENDWHILE        reduce using rule 70 (stms -> stm stms .)
    CATCH           reduce using rule 70 (stms -> stm stms .)
    ENDIF           reduce using rule 70 (stms -> stm stms .)
    ELSE            reduce using rule 70 (stms -> stm stms .)
    ENDFOR          reduce using rule 70 (stms -> stm stms .)
    ENDCATCH        reduce using rule 70 (stms -> stm stms .)
    STRING_LIT      reduce using rule 70 (stms -> stm stms .)


state 377

    (138) for_stm -> FOR prologue condition epilogue . stms ENDFOR
    (139) for_stm -> FOR prologue condition epilogue . ENDFOR
    (70) stms -> . stm stms
    (71) stms -> . stm
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ENDFOR          shift and go to state 413
    ID_COLON        shift and go to state 68
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    ID_LS           shift and go to state 136
    ID              shift and go to state 119
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    stms                           shift and go to state 412
    stm                            shift and go to state 290
    ustm                           shift and go to state 69
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 378

    (147) epilogue -> storage . ASSIG expression epilogue_tail

    ASSIG           shift and go to state 414


state 379

    (148) epilogue -> DO .

    ENDFOR          reduce using rule 148 (epilogue -> DO .)
    ID_COLON        reduce using rule 148 (epilogue -> DO .)
    SEMI            reduce using rule 148 (epilogue -> DO .)
    RETURN          reduce using rule 148 (epilogue -> DO .)
    PRETURN         reduce using rule 148 (epilogue -> DO .)
    IF              reduce using rule 148 (epilogue -> DO .)
    WHILE           reduce using rule 148 (epilogue -> DO .)
    FOR             reduce using rule 148 (epilogue -> DO .)
    GOTO            reduce using rule 148 (epilogue -> DO .)
    BREAK           reduce using rule 148 (epilogue -> DO .)
    CONTINUE        reduce using rule 148 (epilogue -> DO .)
    GUARD           reduce using rule 148 (epilogue -> DO .)
    RAISE           reduce using rule 148 (epilogue -> DO .)
    TERMINATE       reduce using rule 148 (epilogue -> DO .)
    ID_LP           reduce using rule 148 (epilogue -> DO .)
    BOOL_LP         reduce using rule 148 (epilogue -> DO .)
    CHAR_LP         reduce using rule 148 (epilogue -> DO .)
    STRING_LP       reduce using rule 148 (epilogue -> DO .)
    INT_LP          reduce using rule 148 (epilogue -> DO .)
    FLOAT_LP        reduce using rule 148 (epilogue -> DO .)
    FIN_DOT         reduce using rule 148 (epilogue -> DO .)
    FOUT_DOT        reduce using rule 148 (epilogue -> DO .)
    IDOF_LP         reduce using rule 148 (epilogue -> DO .)
    SIZEOF_LP       reduce using rule 148 (epilogue -> DO .)
    TYPEOF_LP       reduce using rule 148 (epilogue -> DO .)
    ID_LS           reduce using rule 148 (epilogue -> DO .)
    ID              reduce using rule 148 (epilogue -> DO .)
    PARENT_DOT      reduce using rule 148 (epilogue -> DO .)
    ID_DOT          reduce using rule 148 (epilogue -> DO .)


state 380

    (145) condition -> expression SEMI .

    DO              reduce using rule 145 (condition -> expression SEMI .)
    ID_LS           reduce using rule 145 (condition -> expression SEMI .)
    ID              reduce using rule 145 (condition -> expression SEMI .)
    PARENT_DOT      reduce using rule 145 (condition -> expression SEMI .)
    ID_DOT          reduce using rule 145 (condition -> expression SEMI .)


state 381

    (141) prologue -> storage ASSIG expression . prologue_tail
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression
    (143) prologue_tail -> . COMMA storage ASSIG expression prologue_tail
    (144) prologue_tail -> . SEMI

    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225
    COMMA           shift and go to state 416
    SEMI            shift and go to state 417

    prologue_tail                  shift and go to state 415

state 382

    (156) guard_stm -> GUARD COLON stms CATCH . COLON catch_block

    COLON           shift and go to state 418


state 383

    (216) size_par -> qualifier ID_LS type_tail .

    RP              reduce using rule 216 (size_par -> qualifier ID_LS type_tail .)


state 384

    (193) arr -> qualifier ID_LS COLON RS .

    ASSIG           reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    PASSIG          reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    SEMI            reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    COMMA           reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    PLUS            reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    MINUS           reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    STAR            reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    DIV             reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    IDIV            reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    MOD             reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    AND             reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    OR              reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    LT              reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    LE              reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    GT              reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    GE              reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    EQ              reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    NEQ             reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    COLON           reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    RS              reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    RP              reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    THEN            reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)
    DO              reduce using rule 193 (arr -> qualifier ID_LS COLON RS .)


state 385

    (194) arr -> qualifier ID_LS COLON expression . RS
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RS              shift and go to state 419
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 386

    (195) arr -> qualifier ID_LS expression COLON . RS
    (196) arr -> qualifier ID_LS expression COLON . expression RS
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    RS              shift and go to state 421
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    qualifier                      shift and go to state 135
    expression                     shift and go to state 420
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134

state 387

    (198) arr -> qualifier ID_LS expression RS . arr_tail
    (199) arr_tail -> . LS expression RS arr_tail
    (200) arr_tail -> .

    LS              shift and go to state 365
    ASSIG           reduce using rule 200 (arr_tail -> .)
    PASSIG          reduce using rule 200 (arr_tail -> .)
    SEMI            reduce using rule 200 (arr_tail -> .)
    COMMA           reduce using rule 200 (arr_tail -> .)
    PLUS            reduce using rule 200 (arr_tail -> .)
    MINUS           reduce using rule 200 (arr_tail -> .)
    STAR            reduce using rule 200 (arr_tail -> .)
    DIV             reduce using rule 200 (arr_tail -> .)
    IDIV            reduce using rule 200 (arr_tail -> .)
    MOD             reduce using rule 200 (arr_tail -> .)
    AND             reduce using rule 200 (arr_tail -> .)
    OR              reduce using rule 200 (arr_tail -> .)
    LT              reduce using rule 200 (arr_tail -> .)
    LE              reduce using rule 200 (arr_tail -> .)
    GT              reduce using rule 200 (arr_tail -> .)
    GE              reduce using rule 200 (arr_tail -> .)
    EQ              reduce using rule 200 (arr_tail -> .)
    NEQ             reduce using rule 200 (arr_tail -> .)
    COLON           reduce using rule 200 (arr_tail -> .)
    RS              reduce using rule 200 (arr_tail -> .)
    RP              reduce using rule 200 (arr_tail -> .)
    THEN            reduce using rule 200 (arr_tail -> .)
    DO              reduce using rule 200 (arr_tail -> .)

    arr_tail                       shift and go to state 422

state 388

    (27) var_list_tail -> ID ASSIG expression SEMI .

    PERMANENT       reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    CONST           reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    CLASS           reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    BOOL            reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    CHAR            reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    STRING          reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    INT             reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    FLOAT           reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    ID              reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    BOOL_LS         reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    CHAR_LS         reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    STRING_LS       reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    INT_LS          reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    FLOAT_LS        reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    ID_LS           reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    FILE            reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    MAIN            reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    ENDMAIN         reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    ID_COLON        reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    SEMI            reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    RETURN          reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    PRETURN         reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    IF              reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    WHILE           reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    FOR             reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    GOTO            reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    BREAK           reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    CONTINUE        reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    GUARD           reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    RAISE           reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    TERMINATE       reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    ID_LP           reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    BOOL_LP         reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    CHAR_LP         reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    STRING_LP       reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    INT_LP          reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    FLOAT_LP        reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    FIN_DOT         reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    FOUT_DOT        reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    IDOF_LP         reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    SIZEOF_LP       reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    TYPEOF_LP       reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    PARENT_DOT      reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    ID_DOT          reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    ENDMETHOD       reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    ENDCLASS        reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    PUBLIC          reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    PRIVATE         reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    SHARED          reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)
    METHOD          reduce using rule 27 (var_list_tail -> ID ASSIG expression SEMI .)


state 389

    (28) var_list_tail -> ID ASSIG expression COMMA . var_list_tail
    (25) var_list_tail -> . ID SEMI
    (26) var_list_tail -> . ID COMMA var_list_tail
    (27) var_list_tail -> . ID ASSIG expression SEMI
    (28) var_list_tail -> . ID ASSIG expression COMMA var_list_tail
    (29) var_list_tail -> . ID PASSIG expression SEMI
    (30) var_list_tail -> . ID PASSIG expression COMMA var_list_tail
    (31) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (32) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 117

    var_list_tail                  shift and go to state 423

state 390

    (29) var_list_tail -> ID PASSIG expression SEMI .

    PERMANENT       reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    CONST           reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    CLASS           reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    BOOL            reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    CHAR            reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    STRING          reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    INT             reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    FLOAT           reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    ID              reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    BOOL_LS         reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    CHAR_LS         reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    STRING_LS       reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    INT_LS          reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    FLOAT_LS        reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    ID_LS           reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    FILE            reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    MAIN            reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    ENDMAIN         reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    ID_COLON        reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    SEMI            reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    RETURN          reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    PRETURN         reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    IF              reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    WHILE           reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    FOR             reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    GOTO            reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    BREAK           reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    CONTINUE        reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    GUARD           reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    RAISE           reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    TERMINATE       reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    ID_LP           reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    BOOL_LP         reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    CHAR_LP         reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    STRING_LP       reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    INT_LP          reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    FLOAT_LP        reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    FIN_DOT         reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    FOUT_DOT        reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    IDOF_LP         reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    SIZEOF_LP       reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    TYPEOF_LP       reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    PARENT_DOT      reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    ID_DOT          reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    ENDMETHOD       reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    ENDCLASS        reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    PUBLIC          reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    PRIVATE         reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    SHARED          reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)
    METHOD          reduce using rule 29 (var_list_tail -> ID PASSIG expression SEMI .)


state 391

    (30) var_list_tail -> ID PASSIG expression COMMA . var_list_tail
    (25) var_list_tail -> . ID SEMI
    (26) var_list_tail -> . ID COMMA var_list_tail
    (27) var_list_tail -> . ID ASSIG expression SEMI
    (28) var_list_tail -> . ID ASSIG expression COMMA var_list_tail
    (29) var_list_tail -> . ID PASSIG expression SEMI
    (30) var_list_tail -> . ID PASSIG expression COMMA var_list_tail
    (31) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (32) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 117

    var_list_tail                  shift and go to state 424

state 392

    (31) var_list_tail -> ID PASSIG ALLOC ID_LP . par_list SEMI
    (32) var_list_tail -> ID PASSIG ALLOC ID_LP . par_list COMMA var_list_tail
    (222) par_list -> . RP
    (223) par_list -> . expression RP
    (224) par_list -> . expression COMMA par_list_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    RP              shift and go to state 169
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    par_list                       shift and go to state 425
    expression                     shift and go to state 170
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 393

    (23) var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .

    PERMANENT       reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    CONST           reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    CLASS           reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    BOOL            reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    CHAR            reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    STRING          reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    INT             reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    FLOAT           reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ID              reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    BOOL_LS         reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    CHAR_LS         reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    STRING_LS       reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    INT_LS          reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    FLOAT_LS        reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ID_LS           reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    FILE            reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    MAIN            reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ENDMAIN         reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ID_COLON        reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    SEMI            reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    RETURN          reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    PRETURN         reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    IF              reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    WHILE           reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    FOR             reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    GOTO            reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    BREAK           reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    CONTINUE        reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    GUARD           reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    RAISE           reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    TERMINATE       reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ID_LP           reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    BOOL_LP         reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    CHAR_LP         reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    STRING_LP       reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    INT_LP          reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    FLOAT_LP        reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    FIN_DOT         reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    FOUT_DOT        reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    IDOF_LP         reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    SIZEOF_LP       reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    TYPEOF_LP       reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    PARENT_DOT      reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ID_DOT          reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ENDMETHOD       reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ENDCLASS        reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    PUBLIC          reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    PRIVATE         reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    SHARED          reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    METHOD          reduce using rule 23 (var_list -> ID PASSIG ALLOC ID_LP par_list SEMI .)


state 394

    (24) var_list -> ID PASSIG ALLOC ID_LP par_list COMMA . var_list_tail
    (25) var_list_tail -> . ID SEMI
    (26) var_list_tail -> . ID COMMA var_list_tail
    (27) var_list_tail -> . ID ASSIG expression SEMI
    (28) var_list_tail -> . ID ASSIG expression COMMA var_list_tail
    (29) var_list_tail -> . ID PASSIG expression SEMI
    (30) var_list_tail -> . ID PASSIG expression COMMA var_list_tail
    (31) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (32) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 117

    var_list_tail                  shift and go to state 426

state 395

    (79) attr_definition -> PUBLIC SHARED CONST type var_list .

    ENDCLASS        reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    PUBLIC          reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    PRIVATE         reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    SHARED          reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    CONST           reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    METHOD          reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    BOOL            reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    CHAR            reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    STRING          reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    INT             reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    FLOAT           reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    ID              reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    BOOL_LS         reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    CHAR_LS         reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    STRING_LS       reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    INT_LS          reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    FLOAT_LS        reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    ID_LS           reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)
    FILE            reduce using rule 79 (attr_definition -> PUBLIC SHARED CONST type var_list .)


state 396

    (80) attr_definition -> PUBLIC CONST SHARED type var_list .

    ENDCLASS        reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    PUBLIC          reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    PRIVATE         reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    SHARED          reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    CONST           reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    METHOD          reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    BOOL            reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    CHAR            reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    STRING          reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    INT             reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    FLOAT           reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    ID              reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    BOOL_LS         reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    CHAR_LS         reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    STRING_LS       reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    INT_LS          reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    FLOAT_LS        reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    ID_LS           reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)
    FILE            reduce using rule 80 (attr_definition -> PUBLIC CONST SHARED type var_list .)


state 397

    (81) attr_definition -> PRIVATE SHARED CONST type var_list .

    ENDCLASS        reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    PUBLIC          reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    PRIVATE         reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    SHARED          reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    CONST           reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    METHOD          reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    BOOL            reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    CHAR            reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    STRING          reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    INT             reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    FLOAT           reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    ID              reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    BOOL_LS         reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    CHAR_LS         reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    STRING_LS       reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    INT_LS          reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    FLOAT_LS        reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    ID_LS           reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)
    FILE            reduce using rule 81 (attr_definition -> PRIVATE SHARED CONST type var_list .)


state 398

    (82) attr_definition -> PRIVATE CONST SHARED type var_list .

    ENDCLASS        reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    PUBLIC          reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    PRIVATE         reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    SHARED          reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    CONST           reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    METHOD          reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    BOOL            reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    CHAR            reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    STRING          reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    INT             reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    FLOAT           reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    ID              reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    BOOL_LS         reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    CHAR_LS         reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    STRING_LS       reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    INT_LS          reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    FLOAT_LS        reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    ID_LS           reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)
    FILE            reduce using rule 82 (attr_definition -> PRIVATE CONST SHARED type var_list .)


state 399

    (94) method_header -> METHOD ID_LP arg_list ARROW type . COLON

    COLON           shift and go to state 427


state 400

    (97) arg_list -> atype ID RP .

    ARROW           reduce using rule 97 (arg_list -> atype ID RP .)
    COLON           reduce using rule 97 (arg_list -> atype ID RP .)


state 401

    (98) arg_list -> atype ID COMMA . arg_list_tail
    (101) arg_list_tail -> . RP
    (102) arg_list_tail -> . atype ID RP
    (103) arg_list_tail -> . atype ID COMMA arg_list_tail
    (104) arg_list_tail -> . CONST atype ID RP
    (105) arg_list_tail -> . CONST atype ID COMMA arg_list_tail
    (48) atype -> . BOOL
    (49) atype -> . CHAR
    (50) atype -> . STRING
    (51) atype -> . INT
    (52) atype -> . FLOAT
    (53) atype -> . ID
    (54) atype -> . BOOL_AT
    (55) atype -> . CHAR_AT
    (56) atype -> . STRING_AT
    (57) atype -> . INT_AT
    (58) atype -> . FLOAT_AT
    (59) atype -> . ID_AT
    (60) atype -> . BOOL_LS atype_tail
    (61) atype -> . CHAR_LS atype_tail
    (62) atype -> . STRING_LS atype_tail
    (63) atype -> . INT_LS atype_tail
    (64) atype -> . FLOAT_LS atype_tail
    (65) atype -> . ID_LS atype_tail
    (66) atype -> . FILE

    RP              shift and go to state 430
    CONST           shift and go to state 431
    BOOL            shift and go to state 256
    CHAR            shift and go to state 257
    STRING          shift and go to state 258
    INT             shift and go to state 259
    FLOAT           shift and go to state 260
    ID              shift and go to state 254
    BOOL_AT         shift and go to state 261
    CHAR_AT         shift and go to state 262
    STRING_AT       shift and go to state 263
    INT_AT          shift and go to state 264
    FLOAT_AT        shift and go to state 265
    ID_AT           shift and go to state 266
    BOOL_LS         shift and go to state 267
    CHAR_LS         shift and go to state 268
    STRING_LS       shift and go to state 269
    INT_LS          shift and go to state 270
    FLOAT_LS        shift and go to state 271
    ID_LS           shift and go to state 272
    FILE            shift and go to state 273

    atype                          shift and go to state 428
    arg_list_tail                  shift and go to state 429

state 402

    (99) arg_list -> CONST atype ID . RP
    (100) arg_list -> CONST atype ID . COMMA arg_list_tail

    RP              shift and go to state 432
    COMMA           shift and go to state 433


state 403

    (67) atype_tail -> RLS atype_tail .

    ID              reduce using rule 67 (atype_tail -> RLS atype_tail .)


state 404

    (192) arr -> ID_LS expression COLON expression RS .

    ASSIG           reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    PASSIG          reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    SEMI            reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    COMMA           reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    PLUS            reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    MINUS           reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    STAR            reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    DIV             reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    IDIV            reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    MOD             reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    AND             reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    OR              reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    LT              reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    LE              reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    GT              reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    GE              reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    EQ              reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    NEQ             reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    COLON           reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    RS              reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    RP              reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    THEN            reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)
    DO              reduce using rule 192 (arr -> ID_LS expression COLON expression RS .)


state 405

    (199) arr_tail -> LS expression . RS arr_tail
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RS              shift and go to state 434
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 406

    (130) passig_stm -> storage PASSIG ALLOC ID_LP par_list . SEMI

    SEMI            shift and go to state 435


state 407

    (226) par_list_tail -> expression RP .

    SEMI            reduce using rule 226 (par_list_tail -> expression RP .)
    COMMA           reduce using rule 226 (par_list_tail -> expression RP .)
    PLUS            reduce using rule 226 (par_list_tail -> expression RP .)
    MINUS           reduce using rule 226 (par_list_tail -> expression RP .)
    STAR            reduce using rule 226 (par_list_tail -> expression RP .)
    DIV             reduce using rule 226 (par_list_tail -> expression RP .)
    IDIV            reduce using rule 226 (par_list_tail -> expression RP .)
    MOD             reduce using rule 226 (par_list_tail -> expression RP .)
    AND             reduce using rule 226 (par_list_tail -> expression RP .)
    OR              reduce using rule 226 (par_list_tail -> expression RP .)
    LT              reduce using rule 226 (par_list_tail -> expression RP .)
    LE              reduce using rule 226 (par_list_tail -> expression RP .)
    GT              reduce using rule 226 (par_list_tail -> expression RP .)
    GE              reduce using rule 226 (par_list_tail -> expression RP .)
    EQ              reduce using rule 226 (par_list_tail -> expression RP .)
    NEQ             reduce using rule 226 (par_list_tail -> expression RP .)
    COLON           reduce using rule 226 (par_list_tail -> expression RP .)
    RS              reduce using rule 226 (par_list_tail -> expression RP .)
    RP              reduce using rule 226 (par_list_tail -> expression RP .)
    THEN            reduce using rule 226 (par_list_tail -> expression RP .)
    DO              reduce using rule 226 (par_list_tail -> expression RP .)


state 408

    (227) par_list_tail -> expression COMMA . par_list_tail
    (225) par_list_tail -> . RP
    (226) par_list_tail -> . expression RP
    (227) par_list_tail -> . expression COMMA par_list_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    RP              shift and go to state 371
    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 369
    par_list_tail                  shift and go to state 436
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 409

    (132) if_stm -> IF expression THEN stms ENDIF .

    ENDMAIN         reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    ID_COLON        reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    PERMANENT       reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    CONST           reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    BOOL            reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    CHAR            reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    STRING          reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    INT             reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    FLOAT           reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    ID              reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    BOOL_LS         reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    CHAR_LS         reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    STRING_LS       reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    INT_LS          reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    FLOAT_LS        reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    ID_LS           reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    FILE            reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    SEMI            reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    RETURN          reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    PRETURN         reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    IF              reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    WHILE           reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    FOR             reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    GOTO            reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    BREAK           reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    CONTINUE        reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    GUARD           reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    RAISE           reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    TERMINATE       reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    ID_LP           reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    BOOL_LP         reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    CHAR_LP         reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    STRING_LP       reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    INT_LP          reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    FLOAT_LP        reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    FIN_DOT         reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    FOUT_DOT        reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    IDOF_LP         reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    SIZEOF_LP       reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    TYPEOF_LP       reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    PARENT_DOT      reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    ID_DOT          reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    ENDMETHOD       reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    ENDWHILE        reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    CATCH           reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    ENDIF           reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    ELSE            reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    ENDFOR          reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    ENDCATCH        reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)
    STRING_LIT      reduce using rule 132 (if_stm -> IF expression THEN stms ENDIF .)


state 410

    (133) if_stm -> IF expression THEN stms ELSE . stms ENDIF
    (70) stms -> . stm stms
    (71) stms -> . stm
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ID_COLON        shift and go to state 68
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    ID_LS           shift and go to state 136
    ID              shift and go to state 119
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    stms                           shift and go to state 437
    stm                            shift and go to state 290
    ustm                           shift and go to state 69
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 411

    (134) while_stm -> WHILE expression DO stms ENDWHILE .

    ENDMAIN         reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    ID_COLON        reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    PERMANENT       reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    CONST           reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    BOOL            reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    CHAR            reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    STRING          reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    INT             reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    FLOAT           reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    ID              reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    BOOL_LS         reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    CHAR_LS         reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    STRING_LS       reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    INT_LS          reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    FLOAT_LS        reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    ID_LS           reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    FILE            reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    SEMI            reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    RETURN          reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    PRETURN         reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    IF              reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    WHILE           reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    FOR             reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    GOTO            reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    BREAK           reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    CONTINUE        reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    GUARD           reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    RAISE           reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    TERMINATE       reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    ID_LP           reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    BOOL_LP         reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    CHAR_LP         reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    STRING_LP       reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    INT_LP          reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    FLOAT_LP        reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    FIN_DOT         reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    FOUT_DOT        reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    IDOF_LP         reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    SIZEOF_LP       reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    TYPEOF_LP       reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    PARENT_DOT      reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    ID_DOT          reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    ENDMETHOD       reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    ENDWHILE        reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    CATCH           reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    ENDIF           reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    ELSE            reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    ENDFOR          reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    ENDCATCH        reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)
    STRING_LIT      reduce using rule 134 (while_stm -> WHILE expression DO stms ENDWHILE .)


state 412

    (138) for_stm -> FOR prologue condition epilogue stms . ENDFOR

    ENDFOR          shift and go to state 438


state 413

    (139) for_stm -> FOR prologue condition epilogue ENDFOR .

    ENDMAIN         reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    ID_COLON        reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    PERMANENT       reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    CONST           reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    BOOL            reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    CHAR            reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    STRING          reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    INT             reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    FLOAT           reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    ID              reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    BOOL_LS         reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    CHAR_LS         reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    STRING_LS       reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    INT_LS          reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    FLOAT_LS        reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    ID_LS           reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    FILE            reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    SEMI            reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    RETURN          reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    PRETURN         reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    IF              reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    WHILE           reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    FOR             reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    GOTO            reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    BREAK           reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    CONTINUE        reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    GUARD           reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    RAISE           reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    TERMINATE       reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    ID_LP           reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    BOOL_LP         reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    CHAR_LP         reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    STRING_LP       reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    INT_LP          reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    FLOAT_LP        reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    FIN_DOT         reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    FOUT_DOT        reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    IDOF_LP         reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    SIZEOF_LP       reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    TYPEOF_LP       reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    PARENT_DOT      reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    ID_DOT          reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    ENDMETHOD       reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    ENDWHILE        reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    CATCH           reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    ENDIF           reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    ELSE            reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    ENDFOR          reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    ENDCATCH        reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)
    STRING_LIT      reduce using rule 139 (for_stm -> FOR prologue condition epilogue ENDFOR .)


state 414

    (147) epilogue -> storage ASSIG . expression epilogue_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 439
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 415

    (141) prologue -> storage ASSIG expression prologue_tail .

    SEMI            reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    MINUS           reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    NOT             reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    LP              reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    INT_LIT         reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    FLOAT_LIT       reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    FALSE           reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    TRUE            reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    NOREF           reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    CHAR_LIT        reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    STRING_LIT      reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    ID              reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    ID_LS           reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    ID_LP           reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    BOOL_LP         reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    CHAR_LP         reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    STRING_LP       reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    INT_LP          reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    FLOAT_LP        reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    FIN_DOT         reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    FOUT_DOT        reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    IDOF_LP         reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    SIZEOF_LP       reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    TYPEOF_LP       reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    PARENT_DOT      reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)
    ID_DOT          reduce using rule 141 (prologue -> storage ASSIG expression prologue_tail .)


state 416

    (143) prologue_tail -> COMMA . storage ASSIG expression prologue_tail
    (151) storage -> . arr
    (152) storage -> . var
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ID_LS           shift and go to state 136
    ID              shift and go to state 119
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    storage                        shift and go to state 440
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 181

state 417

    (144) prologue_tail -> SEMI .

    SEMI            reduce using rule 144 (prologue_tail -> SEMI .)
    MINUS           reduce using rule 144 (prologue_tail -> SEMI .)
    NOT             reduce using rule 144 (prologue_tail -> SEMI .)
    LP              reduce using rule 144 (prologue_tail -> SEMI .)
    INT_LIT         reduce using rule 144 (prologue_tail -> SEMI .)
    FLOAT_LIT       reduce using rule 144 (prologue_tail -> SEMI .)
    FALSE           reduce using rule 144 (prologue_tail -> SEMI .)
    TRUE            reduce using rule 144 (prologue_tail -> SEMI .)
    NOREF           reduce using rule 144 (prologue_tail -> SEMI .)
    CHAR_LIT        reduce using rule 144 (prologue_tail -> SEMI .)
    STRING_LIT      reduce using rule 144 (prologue_tail -> SEMI .)
    ID              reduce using rule 144 (prologue_tail -> SEMI .)
    ID_LS           reduce using rule 144 (prologue_tail -> SEMI .)
    ID_LP           reduce using rule 144 (prologue_tail -> SEMI .)
    BOOL_LP         reduce using rule 144 (prologue_tail -> SEMI .)
    CHAR_LP         reduce using rule 144 (prologue_tail -> SEMI .)
    STRING_LP       reduce using rule 144 (prologue_tail -> SEMI .)
    INT_LP          reduce using rule 144 (prologue_tail -> SEMI .)
    FLOAT_LP        reduce using rule 144 (prologue_tail -> SEMI .)
    FIN_DOT         reduce using rule 144 (prologue_tail -> SEMI .)
    FOUT_DOT        reduce using rule 144 (prologue_tail -> SEMI .)
    IDOF_LP         reduce using rule 144 (prologue_tail -> SEMI .)
    SIZEOF_LP       reduce using rule 144 (prologue_tail -> SEMI .)
    TYPEOF_LP       reduce using rule 144 (prologue_tail -> SEMI .)
    PARENT_DOT      reduce using rule 144 (prologue_tail -> SEMI .)
    ID_DOT          reduce using rule 144 (prologue_tail -> SEMI .)


state 418

    (156) guard_stm -> GUARD COLON stms CATCH COLON . catch_block
    (157) catch_block -> . STRING_LIT COLON stms catch_block_tail

    STRING_LIT      shift and go to state 442

    catch_block                    shift and go to state 441

state 419

    (194) arr -> qualifier ID_LS COLON expression RS .

    ASSIG           reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    PASSIG          reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    SEMI            reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    COMMA           reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    PLUS            reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    MINUS           reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    STAR            reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    DIV             reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    IDIV            reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    MOD             reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    AND             reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    OR              reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    LT              reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    LE              reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    GT              reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    GE              reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    EQ              reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    NEQ             reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    COLON           reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    RS              reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    RP              reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    THEN            reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)
    DO              reduce using rule 194 (arr -> qualifier ID_LS COLON expression RS .)


state 420

    (196) arr -> qualifier ID_LS expression COLON expression . RS
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression

    RS              shift and go to state 443
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225


state 421

    (195) arr -> qualifier ID_LS expression COLON RS .

    ASSIG           reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    PASSIG          reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    SEMI            reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    COMMA           reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    PLUS            reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    MINUS           reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    STAR            reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    DIV             reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    IDIV            reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    MOD             reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    AND             reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    OR              reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    LT              reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    LE              reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    GT              reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    GE              reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    EQ              reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    NEQ             reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    COLON           reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    RS              reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    RP              reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    THEN            reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)
    DO              reduce using rule 195 (arr -> qualifier ID_LS expression COLON RS .)


state 422

    (198) arr -> qualifier ID_LS expression RS arr_tail .

    ASSIG           reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    PASSIG          reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    SEMI            reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    COMMA           reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    PLUS            reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    MINUS           reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    STAR            reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    DIV             reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    IDIV            reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    MOD             reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    AND             reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    OR              reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    LT              reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    LE              reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    GT              reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    GE              reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    EQ              reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    NEQ             reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    COLON           reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    RS              reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    RP              reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    THEN            reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)
    DO              reduce using rule 198 (arr -> qualifier ID_LS expression RS arr_tail .)


state 423

    (28) var_list_tail -> ID ASSIG expression COMMA var_list_tail .

    PERMANENT       reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    CONST           reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    CLASS           reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    BOOL            reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    CHAR            reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    STRING          reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    INT             reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    FLOAT           reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    ID              reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    BOOL_LS         reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    CHAR_LS         reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    STRING_LS       reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    INT_LS          reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    FLOAT_LS        reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    ID_LS           reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    FILE            reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    MAIN            reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    ENDMAIN         reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    ID_COLON        reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    SEMI            reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    RETURN          reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    PRETURN         reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    IF              reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    WHILE           reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    FOR             reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    GOTO            reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    BREAK           reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    CONTINUE        reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    GUARD           reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    RAISE           reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    TERMINATE       reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    ID_LP           reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    BOOL_LP         reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    CHAR_LP         reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    STRING_LP       reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    INT_LP          reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    FLOAT_LP        reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    FIN_DOT         reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    FOUT_DOT        reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    IDOF_LP         reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    SIZEOF_LP       reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    TYPEOF_LP       reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    PARENT_DOT      reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    ID_DOT          reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    ENDMETHOD       reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    ENDCLASS        reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    PUBLIC          reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    PRIVATE         reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    SHARED          reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)
    METHOD          reduce using rule 28 (var_list_tail -> ID ASSIG expression COMMA var_list_tail .)


state 424

    (30) var_list_tail -> ID PASSIG expression COMMA var_list_tail .

    PERMANENT       reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    CONST           reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    CLASS           reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    BOOL            reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    CHAR            reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    STRING          reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    INT             reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    FLOAT           reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    ID              reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    BOOL_LS         reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    CHAR_LS         reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    STRING_LS       reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    INT_LS          reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    FLOAT_LS        reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    ID_LS           reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    FILE            reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    MAIN            reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    ENDMAIN         reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    ID_COLON        reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    SEMI            reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    RETURN          reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    PRETURN         reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    IF              reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    WHILE           reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    FOR             reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    GOTO            reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    BREAK           reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    CONTINUE        reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    GUARD           reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    RAISE           reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    TERMINATE       reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    ID_LP           reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    BOOL_LP         reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    CHAR_LP         reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    STRING_LP       reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    INT_LP          reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    FLOAT_LP        reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    FIN_DOT         reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    FOUT_DOT        reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    IDOF_LP         reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    SIZEOF_LP       reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    TYPEOF_LP       reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    PARENT_DOT      reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    ID_DOT          reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    ENDMETHOD       reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    ENDCLASS        reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    PUBLIC          reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    PRIVATE         reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    SHARED          reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)
    METHOD          reduce using rule 30 (var_list_tail -> ID PASSIG expression COMMA var_list_tail .)


state 425

    (31) var_list_tail -> ID PASSIG ALLOC ID_LP par_list . SEMI
    (32) var_list_tail -> ID PASSIG ALLOC ID_LP par_list . COMMA var_list_tail

    SEMI            shift and go to state 444
    COMMA           shift and go to state 445


state 426

    (24) var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .

    PERMANENT       reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    CONST           reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    CLASS           reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    BOOL            reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    CHAR            reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    STRING          reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    INT             reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    FLOAT           reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ID              reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    BOOL_LS         reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    CHAR_LS         reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    STRING_LS       reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    INT_LS          reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    FLOAT_LS        reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ID_LS           reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    FILE            reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    MAIN            reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ENDMAIN         reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ID_COLON        reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    SEMI            reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    RETURN          reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    PRETURN         reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    IF              reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    WHILE           reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    FOR             reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    GOTO            reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    BREAK           reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    CONTINUE        reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    GUARD           reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    RAISE           reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    TERMINATE       reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ID_LP           reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    BOOL_LP         reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    CHAR_LP         reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    STRING_LP       reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    INT_LP          reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    FLOAT_LP        reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    FIN_DOT         reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    FOUT_DOT        reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    IDOF_LP         reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    SIZEOF_LP       reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    TYPEOF_LP       reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    PARENT_DOT      reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ID_DOT          reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ENDMETHOD       reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ENDCLASS        reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    PUBLIC          reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    PRIVATE         reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    SHARED          reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    METHOD          reduce using rule 24 (var_list -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)


state 427

    (94) method_header -> METHOD ID_LP arg_list ARROW type COLON .

    ENDMETHOD       reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    ID_COLON        reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    PERMANENT       reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    CONST           reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    BOOL            reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    CHAR            reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    STRING          reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    INT             reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    FLOAT           reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    ID              reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    BOOL_LS         reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    CHAR_LS         reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    STRING_LS       reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    INT_LS          reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    FLOAT_LS        reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    ID_LS           reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    FILE            reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    SEMI            reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    RETURN          reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    PRETURN         reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    IF              reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    WHILE           reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    FOR             reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    GOTO            reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    BREAK           reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    CONTINUE        reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    GUARD           reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    RAISE           reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    TERMINATE       reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    ID_LP           reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    BOOL_LP         reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    CHAR_LP         reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    STRING_LP       reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    INT_LP          reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    FLOAT_LP        reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    FIN_DOT         reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    FOUT_DOT        reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    IDOF_LP         reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    SIZEOF_LP       reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    TYPEOF_LP       reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    PARENT_DOT      reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)
    ID_DOT          reduce using rule 94 (method_header -> METHOD ID_LP arg_list ARROW type COLON .)


state 428

    (102) arg_list_tail -> atype . ID RP
    (103) arg_list_tail -> atype . ID COMMA arg_list_tail

    ID              shift and go to state 446


state 429

    (98) arg_list -> atype ID COMMA arg_list_tail .

    ARROW           reduce using rule 98 (arg_list -> atype ID COMMA arg_list_tail .)
    COLON           reduce using rule 98 (arg_list -> atype ID COMMA arg_list_tail .)


state 430

    (101) arg_list_tail -> RP .

    ARROW           reduce using rule 101 (arg_list_tail -> RP .)
    COLON           reduce using rule 101 (arg_list_tail -> RP .)


state 431

    (104) arg_list_tail -> CONST . atype ID RP
    (105) arg_list_tail -> CONST . atype ID COMMA arg_list_tail
    (48) atype -> . BOOL
    (49) atype -> . CHAR
    (50) atype -> . STRING
    (51) atype -> . INT
    (52) atype -> . FLOAT
    (53) atype -> . ID
    (54) atype -> . BOOL_AT
    (55) atype -> . CHAR_AT
    (56) atype -> . STRING_AT
    (57) atype -> . INT_AT
    (58) atype -> . FLOAT_AT
    (59) atype -> . ID_AT
    (60) atype -> . BOOL_LS atype_tail
    (61) atype -> . CHAR_LS atype_tail
    (62) atype -> . STRING_LS atype_tail
    (63) atype -> . INT_LS atype_tail
    (64) atype -> . FLOAT_LS atype_tail
    (65) atype -> . ID_LS atype_tail
    (66) atype -> . FILE

    BOOL            shift and go to state 256
    CHAR            shift and go to state 257
    STRING          shift and go to state 258
    INT             shift and go to state 259
    FLOAT           shift and go to state 260
    ID              shift and go to state 254
    BOOL_AT         shift and go to state 261
    CHAR_AT         shift and go to state 262
    STRING_AT       shift and go to state 263
    INT_AT          shift and go to state 264
    FLOAT_AT        shift and go to state 265
    ID_AT           shift and go to state 266
    BOOL_LS         shift and go to state 267
    CHAR_LS         shift and go to state 268
    STRING_LS       shift and go to state 269
    INT_LS          shift and go to state 270
    FLOAT_LS        shift and go to state 271
    ID_LS           shift and go to state 272
    FILE            shift and go to state 273

    atype                          shift and go to state 447

state 432

    (99) arg_list -> CONST atype ID RP .

    ARROW           reduce using rule 99 (arg_list -> CONST atype ID RP .)
    COLON           reduce using rule 99 (arg_list -> CONST atype ID RP .)


state 433

    (100) arg_list -> CONST atype ID COMMA . arg_list_tail
    (101) arg_list_tail -> . RP
    (102) arg_list_tail -> . atype ID RP
    (103) arg_list_tail -> . atype ID COMMA arg_list_tail
    (104) arg_list_tail -> . CONST atype ID RP
    (105) arg_list_tail -> . CONST atype ID COMMA arg_list_tail
    (48) atype -> . BOOL
    (49) atype -> . CHAR
    (50) atype -> . STRING
    (51) atype -> . INT
    (52) atype -> . FLOAT
    (53) atype -> . ID
    (54) atype -> . BOOL_AT
    (55) atype -> . CHAR_AT
    (56) atype -> . STRING_AT
    (57) atype -> . INT_AT
    (58) atype -> . FLOAT_AT
    (59) atype -> . ID_AT
    (60) atype -> . BOOL_LS atype_tail
    (61) atype -> . CHAR_LS atype_tail
    (62) atype -> . STRING_LS atype_tail
    (63) atype -> . INT_LS atype_tail
    (64) atype -> . FLOAT_LS atype_tail
    (65) atype -> . ID_LS atype_tail
    (66) atype -> . FILE

    RP              shift and go to state 430
    CONST           shift and go to state 431
    BOOL            shift and go to state 256
    CHAR            shift and go to state 257
    STRING          shift and go to state 258
    INT             shift and go to state 259
    FLOAT           shift and go to state 260
    ID              shift and go to state 254
    BOOL_AT         shift and go to state 261
    CHAR_AT         shift and go to state 262
    STRING_AT       shift and go to state 263
    INT_AT          shift and go to state 264
    FLOAT_AT        shift and go to state 265
    ID_AT           shift and go to state 266
    BOOL_LS         shift and go to state 267
    CHAR_LS         shift and go to state 268
    STRING_LS       shift and go to state 269
    INT_LS          shift and go to state 270
    FLOAT_LS        shift and go to state 271
    ID_LS           shift and go to state 272
    FILE            shift and go to state 273

    atype                          shift and go to state 428
    arg_list_tail                  shift and go to state 448

state 434

    (199) arr_tail -> LS expression RS . arr_tail
    (199) arr_tail -> . LS expression RS arr_tail
    (200) arr_tail -> .

    LS              shift and go to state 365
    ASSIG           reduce using rule 200 (arr_tail -> .)
    PASSIG          reduce using rule 200 (arr_tail -> .)
    SEMI            reduce using rule 200 (arr_tail -> .)
    COMMA           reduce using rule 200 (arr_tail -> .)
    PLUS            reduce using rule 200 (arr_tail -> .)
    MINUS           reduce using rule 200 (arr_tail -> .)
    STAR            reduce using rule 200 (arr_tail -> .)
    DIV             reduce using rule 200 (arr_tail -> .)
    IDIV            reduce using rule 200 (arr_tail -> .)
    MOD             reduce using rule 200 (arr_tail -> .)
    AND             reduce using rule 200 (arr_tail -> .)
    OR              reduce using rule 200 (arr_tail -> .)
    LT              reduce using rule 200 (arr_tail -> .)
    LE              reduce using rule 200 (arr_tail -> .)
    GT              reduce using rule 200 (arr_tail -> .)
    GE              reduce using rule 200 (arr_tail -> .)
    EQ              reduce using rule 200 (arr_tail -> .)
    NEQ             reduce using rule 200 (arr_tail -> .)
    COLON           reduce using rule 200 (arr_tail -> .)
    RS              reduce using rule 200 (arr_tail -> .)
    RP              reduce using rule 200 (arr_tail -> .)
    THEN            reduce using rule 200 (arr_tail -> .)
    DO              reduce using rule 200 (arr_tail -> .)

    arr_tail                       shift and go to state 449

state 435

    (130) passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .

    ENDMAIN         reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    ID_COLON        reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    PERMANENT       reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    CONST           reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    BOOL            reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    CHAR            reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    STRING          reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    INT             reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    FLOAT           reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    ID              reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    BOOL_LS         reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    CHAR_LS         reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    STRING_LS       reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    INT_LS          reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    FLOAT_LS        reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    ID_LS           reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    FILE            reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    SEMI            reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    RETURN          reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    PRETURN         reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    IF              reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    WHILE           reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    FOR             reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    GOTO            reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    BREAK           reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    CONTINUE        reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    GUARD           reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    RAISE           reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    TERMINATE       reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    ID_LP           reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    BOOL_LP         reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    CHAR_LP         reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    STRING_LP       reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    INT_LP          reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    FLOAT_LP        reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    FIN_DOT         reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    FOUT_DOT        reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    IDOF_LP         reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    SIZEOF_LP       reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    TYPEOF_LP       reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    PARENT_DOT      reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    ID_DOT          reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    ENDMETHOD       reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    ENDWHILE        reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    CATCH           reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    ENDIF           reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    ELSE            reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    ENDFOR          reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    ENDCATCH        reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)
    STRING_LIT      reduce using rule 130 (passig_stm -> storage PASSIG ALLOC ID_LP par_list SEMI .)


state 436

    (227) par_list_tail -> expression COMMA par_list_tail .

    SEMI            reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    COMMA           reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    PLUS            reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    MINUS           reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    STAR            reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    DIV             reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    IDIV            reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    MOD             reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    AND             reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    OR              reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    LT              reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    LE              reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    GT              reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    GE              reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    EQ              reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    NEQ             reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    COLON           reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    RS              reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    RP              reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    THEN            reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)
    DO              reduce using rule 227 (par_list_tail -> expression COMMA par_list_tail .)


state 437

    (133) if_stm -> IF expression THEN stms ELSE stms . ENDIF

    ENDIF           shift and go to state 450


state 438

    (138) for_stm -> FOR prologue condition epilogue stms ENDFOR .

    ENDMAIN         reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    ID_COLON        reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    PERMANENT       reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    CONST           reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    BOOL            reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    CHAR            reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    STRING          reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    INT             reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    FLOAT           reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    ID              reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    BOOL_LS         reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    CHAR_LS         reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    STRING_LS       reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    INT_LS          reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    FLOAT_LS        reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    ID_LS           reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    FILE            reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    SEMI            reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    RETURN          reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    PRETURN         reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    IF              reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    WHILE           reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    FOR             reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    GOTO            reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    BREAK           reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    CONTINUE        reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    GUARD           reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    RAISE           reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    TERMINATE       reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    ID_LP           reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    BOOL_LP         reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    CHAR_LP         reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    STRING_LP       reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    INT_LP          reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    FLOAT_LP        reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    FIN_DOT         reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    FOUT_DOT        reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    IDOF_LP         reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    SIZEOF_LP       reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    TYPEOF_LP       reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    PARENT_DOT      reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    ID_DOT          reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    ENDMETHOD       reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    ENDWHILE        reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    CATCH           reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    ENDIF           reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    ELSE            reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    ENDFOR          reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    ENDCATCH        reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)
    STRING_LIT      reduce using rule 138 (for_stm -> FOR prologue condition epilogue stms ENDFOR .)


state 439

    (147) epilogue -> storage ASSIG expression . epilogue_tail
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression
    (149) epilogue_tail -> . COMMA storage ASSIG expression epilogue_tail
    (150) epilogue_tail -> . DO

    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225
    COMMA           shift and go to state 452
    DO              shift and go to state 453

    epilogue_tail                  shift and go to state 451

state 440

    (143) prologue_tail -> COMMA storage . ASSIG expression prologue_tail

    ASSIG           shift and go to state 454


state 441

    (156) guard_stm -> GUARD COLON stms CATCH COLON catch_block .

    ENDMAIN         reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    ID_COLON        reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    PERMANENT       reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    CONST           reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    BOOL            reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    CHAR            reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    STRING          reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    INT             reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    FLOAT           reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    ID              reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    BOOL_LS         reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    CHAR_LS         reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    STRING_LS       reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    INT_LS          reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    FLOAT_LS        reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    ID_LS           reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    FILE            reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    SEMI            reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    RETURN          reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    PRETURN         reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    IF              reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    WHILE           reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    FOR             reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    GOTO            reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    BREAK           reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    CONTINUE        reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    GUARD           reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    RAISE           reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    TERMINATE       reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    ID_LP           reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    BOOL_LP         reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    CHAR_LP         reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    STRING_LP       reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    INT_LP          reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    FLOAT_LP        reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    FIN_DOT         reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    FOUT_DOT        reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    IDOF_LP         reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    SIZEOF_LP       reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    TYPEOF_LP       reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    PARENT_DOT      reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    ID_DOT          reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    ENDMETHOD       reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    ENDWHILE        reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    CATCH           reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    ENDIF           reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    ELSE            reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    ENDFOR          reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    ENDCATCH        reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)
    STRING_LIT      reduce using rule 156 (guard_stm -> GUARD COLON stms CATCH COLON catch_block .)


state 442

    (157) catch_block -> STRING_LIT . COLON stms catch_block_tail

    COLON           shift and go to state 455


state 443

    (196) arr -> qualifier ID_LS expression COLON expression RS .

    ASSIG           reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    PASSIG          reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    SEMI            reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    COMMA           reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    PLUS            reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    MINUS           reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    STAR            reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    DIV             reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    IDIV            reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    MOD             reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    AND             reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    OR              reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    LT              reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    LE              reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    GT              reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    GE              reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    EQ              reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    NEQ             reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    COLON           reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    RS              reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    RP              reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    THEN            reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)
    DO              reduce using rule 196 (arr -> qualifier ID_LS expression COLON expression RS .)


state 444

    (31) var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .

    PERMANENT       reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    CONST           reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    CLASS           reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    BOOL            reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    CHAR            reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    STRING          reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    INT             reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    FLOAT           reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ID              reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    BOOL_LS         reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    CHAR_LS         reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    STRING_LS       reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    INT_LS          reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    FLOAT_LS        reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ID_LS           reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    FILE            reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    MAIN            reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ENDMAIN         reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ID_COLON        reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    SEMI            reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    RETURN          reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    PRETURN         reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    IF              reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    WHILE           reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    FOR             reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    GOTO            reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    BREAK           reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    CONTINUE        reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    GUARD           reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    RAISE           reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    TERMINATE       reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ID_LP           reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    BOOL_LP         reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    CHAR_LP         reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    STRING_LP       reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    INT_LP          reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    FLOAT_LP        reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    FIN_DOT         reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    FOUT_DOT        reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    IDOF_LP         reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    SIZEOF_LP       reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    TYPEOF_LP       reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    PARENT_DOT      reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ID_DOT          reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ENDMETHOD       reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    ENDCLASS        reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    PUBLIC          reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    PRIVATE         reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    SHARED          reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)
    METHOD          reduce using rule 31 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list SEMI .)


state 445

    (32) var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA . var_list_tail
    (25) var_list_tail -> . ID SEMI
    (26) var_list_tail -> . ID COMMA var_list_tail
    (27) var_list_tail -> . ID ASSIG expression SEMI
    (28) var_list_tail -> . ID ASSIG expression COMMA var_list_tail
    (29) var_list_tail -> . ID PASSIG expression SEMI
    (30) var_list_tail -> . ID PASSIG expression COMMA var_list_tail
    (31) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list SEMI
    (32) var_list_tail -> . ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail

    ID              shift and go to state 117

    var_list_tail                  shift and go to state 456

state 446

    (102) arg_list_tail -> atype ID . RP
    (103) arg_list_tail -> atype ID . COMMA arg_list_tail

    RP              shift and go to state 457
    COMMA           shift and go to state 458


state 447

    (104) arg_list_tail -> CONST atype . ID RP
    (105) arg_list_tail -> CONST atype . ID COMMA arg_list_tail

    ID              shift and go to state 459


state 448

    (100) arg_list -> CONST atype ID COMMA arg_list_tail .

    ARROW           reduce using rule 100 (arg_list -> CONST atype ID COMMA arg_list_tail .)
    COLON           reduce using rule 100 (arg_list -> CONST atype ID COMMA arg_list_tail .)


state 449

    (199) arr_tail -> LS expression RS arr_tail .

    ASSIG           reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    PASSIG          reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    SEMI            reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    COMMA           reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    PLUS            reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    MINUS           reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    STAR            reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    DIV             reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    IDIV            reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    MOD             reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    AND             reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    OR              reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    LT              reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    LE              reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    GT              reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    GE              reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    EQ              reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    NEQ             reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    COLON           reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    RS              reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    RP              reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    THEN            reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)
    DO              reduce using rule 199 (arr_tail -> LS expression RS arr_tail .)


state 450

    (133) if_stm -> IF expression THEN stms ELSE stms ENDIF .

    ENDMAIN         reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    ID_COLON        reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    PERMANENT       reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    CONST           reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    BOOL            reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    CHAR            reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    STRING          reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    INT             reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    FLOAT           reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    ID              reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    BOOL_LS         reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    CHAR_LS         reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    STRING_LS       reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    INT_LS          reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    FLOAT_LS        reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    ID_LS           reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    FILE            reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    SEMI            reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    RETURN          reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    PRETURN         reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    IF              reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    WHILE           reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    FOR             reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    GOTO            reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    BREAK           reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    CONTINUE        reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    GUARD           reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    RAISE           reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    TERMINATE       reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    ID_LP           reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    BOOL_LP         reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    CHAR_LP         reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    STRING_LP       reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    INT_LP          reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    FLOAT_LP        reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    FIN_DOT         reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    FOUT_DOT        reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    IDOF_LP         reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    SIZEOF_LP       reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    TYPEOF_LP       reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    PARENT_DOT      reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    ID_DOT          reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    ENDMETHOD       reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    ENDWHILE        reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    CATCH           reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    ENDIF           reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    ELSE            reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    ENDFOR          reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    ENDCATCH        reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)
    STRING_LIT      reduce using rule 133 (if_stm -> IF expression THEN stms ELSE stms ENDIF .)


state 451

    (147) epilogue -> storage ASSIG expression epilogue_tail .

    ENDFOR          reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    ID_COLON        reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    SEMI            reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    RETURN          reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    PRETURN         reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    IF              reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    WHILE           reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    FOR             reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    GOTO            reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    BREAK           reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    CONTINUE        reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    GUARD           reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    RAISE           reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    TERMINATE       reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    ID_LP           reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    BOOL_LP         reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    CHAR_LP         reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    STRING_LP       reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    INT_LP          reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    FLOAT_LP        reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    FIN_DOT         reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    FOUT_DOT        reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    IDOF_LP         reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    SIZEOF_LP       reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    TYPEOF_LP       reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    ID_LS           reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    ID              reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    PARENT_DOT      reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)
    ID_DOT          reduce using rule 147 (epilogue -> storage ASSIG expression epilogue_tail .)


state 452

    (149) epilogue_tail -> COMMA . storage ASSIG expression epilogue_tail
    (151) storage -> . arr
    (152) storage -> . var
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ID_LS           shift and go to state 136
    ID              shift and go to state 119
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    storage                        shift and go to state 460
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 181

state 453

    (150) epilogue_tail -> DO .

    ENDFOR          reduce using rule 150 (epilogue_tail -> DO .)
    ID_COLON        reduce using rule 150 (epilogue_tail -> DO .)
    SEMI            reduce using rule 150 (epilogue_tail -> DO .)
    RETURN          reduce using rule 150 (epilogue_tail -> DO .)
    PRETURN         reduce using rule 150 (epilogue_tail -> DO .)
    IF              reduce using rule 150 (epilogue_tail -> DO .)
    WHILE           reduce using rule 150 (epilogue_tail -> DO .)
    FOR             reduce using rule 150 (epilogue_tail -> DO .)
    GOTO            reduce using rule 150 (epilogue_tail -> DO .)
    BREAK           reduce using rule 150 (epilogue_tail -> DO .)
    CONTINUE        reduce using rule 150 (epilogue_tail -> DO .)
    GUARD           reduce using rule 150 (epilogue_tail -> DO .)
    RAISE           reduce using rule 150 (epilogue_tail -> DO .)
    TERMINATE       reduce using rule 150 (epilogue_tail -> DO .)
    ID_LP           reduce using rule 150 (epilogue_tail -> DO .)
    BOOL_LP         reduce using rule 150 (epilogue_tail -> DO .)
    CHAR_LP         reduce using rule 150 (epilogue_tail -> DO .)
    STRING_LP       reduce using rule 150 (epilogue_tail -> DO .)
    INT_LP          reduce using rule 150 (epilogue_tail -> DO .)
    FLOAT_LP        reduce using rule 150 (epilogue_tail -> DO .)
    FIN_DOT         reduce using rule 150 (epilogue_tail -> DO .)
    FOUT_DOT        reduce using rule 150 (epilogue_tail -> DO .)
    IDOF_LP         reduce using rule 150 (epilogue_tail -> DO .)
    SIZEOF_LP       reduce using rule 150 (epilogue_tail -> DO .)
    TYPEOF_LP       reduce using rule 150 (epilogue_tail -> DO .)
    ID_LS           reduce using rule 150 (epilogue_tail -> DO .)
    ID              reduce using rule 150 (epilogue_tail -> DO .)
    PARENT_DOT      reduce using rule 150 (epilogue_tail -> DO .)
    ID_DOT          reduce using rule 150 (epilogue_tail -> DO .)


state 454

    (143) prologue_tail -> COMMA storage ASSIG . expression prologue_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 461
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 455

    (157) catch_block -> STRING_LIT COLON . stms catch_block_tail
    (70) stms -> . stm stms
    (71) stms -> . stm
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ID_COLON        shift and go to state 68
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    ID_LS           shift and go to state 136
    ID              shift and go to state 119
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    stms                           shift and go to state 462
    stm                            shift and go to state 290
    ustm                           shift and go to state 69
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 456

    (32) var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .

    PERMANENT       reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    CONST           reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    CLASS           reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    BOOL            reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    CHAR            reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    STRING          reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    INT             reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    FLOAT           reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ID              reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    BOOL_LS         reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    CHAR_LS         reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    STRING_LS       reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    INT_LS          reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    FLOAT_LS        reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ID_LS           reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    FILE            reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    MAIN            reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ENDMAIN         reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ID_COLON        reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    SEMI            reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    RETURN          reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    PRETURN         reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    IF              reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    WHILE           reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    FOR             reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    GOTO            reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    BREAK           reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    CONTINUE        reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    GUARD           reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    RAISE           reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    TERMINATE       reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ID_LP           reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    BOOL_LP         reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    CHAR_LP         reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    STRING_LP       reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    INT_LP          reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    FLOAT_LP        reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    FIN_DOT         reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    FOUT_DOT        reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    IDOF_LP         reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    SIZEOF_LP       reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    TYPEOF_LP       reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    PARENT_DOT      reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ID_DOT          reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ENDMETHOD       reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    ENDCLASS        reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    PUBLIC          reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    PRIVATE         reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    SHARED          reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)
    METHOD          reduce using rule 32 (var_list_tail -> ID PASSIG ALLOC ID_LP par_list COMMA var_list_tail .)


state 457

    (102) arg_list_tail -> atype ID RP .

    ARROW           reduce using rule 102 (arg_list_tail -> atype ID RP .)
    COLON           reduce using rule 102 (arg_list_tail -> atype ID RP .)


state 458

    (103) arg_list_tail -> atype ID COMMA . arg_list_tail
    (101) arg_list_tail -> . RP
    (102) arg_list_tail -> . atype ID RP
    (103) arg_list_tail -> . atype ID COMMA arg_list_tail
    (104) arg_list_tail -> . CONST atype ID RP
    (105) arg_list_tail -> . CONST atype ID COMMA arg_list_tail
    (48) atype -> . BOOL
    (49) atype -> . CHAR
    (50) atype -> . STRING
    (51) atype -> . INT
    (52) atype -> . FLOAT
    (53) atype -> . ID
    (54) atype -> . BOOL_AT
    (55) atype -> . CHAR_AT
    (56) atype -> . STRING_AT
    (57) atype -> . INT_AT
    (58) atype -> . FLOAT_AT
    (59) atype -> . ID_AT
    (60) atype -> . BOOL_LS atype_tail
    (61) atype -> . CHAR_LS atype_tail
    (62) atype -> . STRING_LS atype_tail
    (63) atype -> . INT_LS atype_tail
    (64) atype -> . FLOAT_LS atype_tail
    (65) atype -> . ID_LS atype_tail
    (66) atype -> . FILE

    RP              shift and go to state 430
    CONST           shift and go to state 431
    BOOL            shift and go to state 256
    CHAR            shift and go to state 257
    STRING          shift and go to state 258
    INT             shift and go to state 259
    FLOAT           shift and go to state 260
    ID              shift and go to state 254
    BOOL_AT         shift and go to state 261
    CHAR_AT         shift and go to state 262
    STRING_AT       shift and go to state 263
    INT_AT          shift and go to state 264
    FLOAT_AT        shift and go to state 265
    ID_AT           shift and go to state 266
    BOOL_LS         shift and go to state 267
    CHAR_LS         shift and go to state 268
    STRING_LS       shift and go to state 269
    INT_LS          shift and go to state 270
    FLOAT_LS        shift and go to state 271
    ID_LS           shift and go to state 272
    FILE            shift and go to state 273

    atype                          shift and go to state 428
    arg_list_tail                  shift and go to state 463

state 459

    (104) arg_list_tail -> CONST atype ID . RP
    (105) arg_list_tail -> CONST atype ID . COMMA arg_list_tail

    RP              shift and go to state 464
    COMMA           shift and go to state 465


state 460

    (149) epilogue_tail -> COMMA storage . ASSIG expression epilogue_tail

    ASSIG           shift and go to state 466


state 461

    (143) prologue_tail -> COMMA storage ASSIG expression . prologue_tail
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression
    (143) prologue_tail -> . COMMA storage ASSIG expression prologue_tail
    (144) prologue_tail -> . SEMI

    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225
    COMMA           shift and go to state 416
    SEMI            shift and go to state 417

    prologue_tail                  shift and go to state 467

state 462

    (157) catch_block -> STRING_LIT COLON stms . catch_block_tail
    (158) catch_block_tail -> . ENDCATCH
    (159) catch_block_tail -> . STRING_LIT COLON stms catch_block_tail

    ENDCATCH        shift and go to state 470
    STRING_LIT      shift and go to state 468

    catch_block_tail               shift and go to state 469

state 463

    (103) arg_list_tail -> atype ID COMMA arg_list_tail .

    ARROW           reduce using rule 103 (arg_list_tail -> atype ID COMMA arg_list_tail .)
    COLON           reduce using rule 103 (arg_list_tail -> atype ID COMMA arg_list_tail .)


state 464

    (104) arg_list_tail -> CONST atype ID RP .

    ARROW           reduce using rule 104 (arg_list_tail -> CONST atype ID RP .)
    COLON           reduce using rule 104 (arg_list_tail -> CONST atype ID RP .)


state 465

    (105) arg_list_tail -> CONST atype ID COMMA . arg_list_tail
    (101) arg_list_tail -> . RP
    (102) arg_list_tail -> . atype ID RP
    (103) arg_list_tail -> . atype ID COMMA arg_list_tail
    (104) arg_list_tail -> . CONST atype ID RP
    (105) arg_list_tail -> . CONST atype ID COMMA arg_list_tail
    (48) atype -> . BOOL
    (49) atype -> . CHAR
    (50) atype -> . STRING
    (51) atype -> . INT
    (52) atype -> . FLOAT
    (53) atype -> . ID
    (54) atype -> . BOOL_AT
    (55) atype -> . CHAR_AT
    (56) atype -> . STRING_AT
    (57) atype -> . INT_AT
    (58) atype -> . FLOAT_AT
    (59) atype -> . ID_AT
    (60) atype -> . BOOL_LS atype_tail
    (61) atype -> . CHAR_LS atype_tail
    (62) atype -> . STRING_LS atype_tail
    (63) atype -> . INT_LS atype_tail
    (64) atype -> . FLOAT_LS atype_tail
    (65) atype -> . ID_LS atype_tail
    (66) atype -> . FILE

    RP              shift and go to state 430
    CONST           shift and go to state 431
    BOOL            shift and go to state 256
    CHAR            shift and go to state 257
    STRING          shift and go to state 258
    INT             shift and go to state 259
    FLOAT           shift and go to state 260
    ID              shift and go to state 254
    BOOL_AT         shift and go to state 261
    CHAR_AT         shift and go to state 262
    STRING_AT       shift and go to state 263
    INT_AT          shift and go to state 264
    FLOAT_AT        shift and go to state 265
    ID_AT           shift and go to state 266
    BOOL_LS         shift and go to state 267
    CHAR_LS         shift and go to state 268
    STRING_LS       shift and go to state 269
    INT_LS          shift and go to state 270
    FLOAT_LS        shift and go to state 271
    ID_LS           shift and go to state 272
    FILE            shift and go to state 273

    atype                          shift and go to state 428
    arg_list_tail                  shift and go to state 471

state 466

    (149) epilogue_tail -> COMMA storage ASSIG . expression epilogue_tail
    (161) expression -> . simple_expression
    (162) expression -> . expression PLUS expression
    (163) expression -> . expression MINUS expression
    (164) expression -> . expression STAR expression
    (165) expression -> . expression DIV expression
    (166) expression -> . expression IDIV expression
    (167) expression -> . expression MOD expression
    (168) expression -> . expression AND expression
    (169) expression -> . expression OR expression
    (170) expression -> . expression LT expression
    (171) expression -> . expression LE expression
    (172) expression -> . expression GT expression
    (173) expression -> . expression GE expression
    (174) expression -> . expression EQ expression
    (175) expression -> . expression NEQ expression
    (176) expression -> . MINUS simple_expression
    (177) expression -> . NOT simple_expression
    (178) simple_expression -> . LP expression RP
    (179) simple_expression -> . INT_LIT
    (180) simple_expression -> . FLOAT_LIT
    (181) simple_expression -> . FALSE
    (182) simple_expression -> . TRUE
    (183) simple_expression -> . NOREF
    (184) simple_expression -> . CHAR_LIT
    (185) simple_expression -> . STRING_LIT
    (186) simple_expression -> . var
    (187) simple_expression -> . arr
    (188) simple_expression -> . call
    (220) var -> . ID
    (221) var -> . qualifier ID
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    MINUS           shift and go to state 122
    NOT             shift and go to state 123
    LP              shift and go to state 124
    INT_LIT         shift and go to state 125
    FLOAT_LIT       shift and go to state 126
    FALSE           shift and go to state 127
    TRUE            shift and go to state 128
    NOREF           shift and go to state 129
    CHAR_LIT        shift and go to state 130
    STRING_LIT      shift and go to state 131
    ID              shift and go to state 119
    ID_LS           shift and go to state 136
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    expression                     shift and go to state 472
    simple_expression              shift and go to state 121
    var                            shift and go to state 132
    arr                            shift and go to state 133
    call                           shift and go to state 134
    qualifier                      shift and go to state 135

state 467

    (143) prologue_tail -> COMMA storage ASSIG expression prologue_tail .

    SEMI            reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    MINUS           reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    NOT             reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    LP              reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    INT_LIT         reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    FLOAT_LIT       reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    FALSE           reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    TRUE            reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    NOREF           reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    CHAR_LIT        reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    STRING_LIT      reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    ID              reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    ID_LS           reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    ID_LP           reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    BOOL_LP         reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    CHAR_LP         reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    STRING_LP       reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    INT_LP          reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    FLOAT_LP        reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    FIN_DOT         reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    FOUT_DOT        reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    IDOF_LP         reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    SIZEOF_LP       reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    TYPEOF_LP       reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    PARENT_DOT      reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)
    ID_DOT          reduce using rule 143 (prologue_tail -> COMMA storage ASSIG expression prologue_tail .)


state 468

    (159) catch_block_tail -> STRING_LIT . COLON stms catch_block_tail

    COLON           shift and go to state 473


state 469

    (157) catch_block -> STRING_LIT COLON stms catch_block_tail .

    ENDMAIN         reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    ID_COLON        reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    PERMANENT       reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    CONST           reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    BOOL            reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    CHAR            reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    STRING          reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    INT             reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    FLOAT           reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    ID              reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    BOOL_LS         reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    CHAR_LS         reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    STRING_LS       reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    INT_LS          reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    FLOAT_LS        reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    ID_LS           reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    FILE            reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    SEMI            reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    RETURN          reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    PRETURN         reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    IF              reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    WHILE           reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    FOR             reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    GOTO            reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    BREAK           reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    CONTINUE        reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    GUARD           reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    RAISE           reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    TERMINATE       reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    ID_LP           reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    BOOL_LP         reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    CHAR_LP         reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    STRING_LP       reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    INT_LP          reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    FLOAT_LP        reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    FIN_DOT         reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    FOUT_DOT        reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    IDOF_LP         reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    SIZEOF_LP       reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    TYPEOF_LP       reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    PARENT_DOT      reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    ID_DOT          reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    ENDMETHOD       reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    ENDWHILE        reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    CATCH           reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    ENDIF           reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    ELSE            reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    ENDFOR          reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    ENDCATCH        reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)
    STRING_LIT      reduce using rule 157 (catch_block -> STRING_LIT COLON stms catch_block_tail .)


state 470

    (158) catch_block_tail -> ENDCATCH .

    ENDMAIN         reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    ID_COLON        reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    PERMANENT       reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    CONST           reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    BOOL            reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    CHAR            reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    STRING          reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    INT             reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    FLOAT           reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    ID              reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    BOOL_LS         reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    CHAR_LS         reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    STRING_LS       reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    INT_LS          reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    FLOAT_LS        reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    ID_LS           reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    FILE            reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    SEMI            reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    RETURN          reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    PRETURN         reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    IF              reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    WHILE           reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    FOR             reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    GOTO            reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    BREAK           reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    CONTINUE        reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    GUARD           reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    RAISE           reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    TERMINATE       reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    ID_LP           reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    BOOL_LP         reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    CHAR_LP         reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    STRING_LP       reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    INT_LP          reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    FLOAT_LP        reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    FIN_DOT         reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    FOUT_DOT        reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    IDOF_LP         reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    SIZEOF_LP       reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    TYPEOF_LP       reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    PARENT_DOT      reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    ID_DOT          reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    ENDMETHOD       reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    ENDWHILE        reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    CATCH           reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    ENDIF           reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    ELSE            reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    ENDFOR          reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    ENDCATCH        reduce using rule 158 (catch_block_tail -> ENDCATCH .)
    STRING_LIT      reduce using rule 158 (catch_block_tail -> ENDCATCH .)


state 471

    (105) arg_list_tail -> CONST atype ID COMMA arg_list_tail .

    ARROW           reduce using rule 105 (arg_list_tail -> CONST atype ID COMMA arg_list_tail .)
    COLON           reduce using rule 105 (arg_list_tail -> CONST atype ID COMMA arg_list_tail .)


state 472

    (149) epilogue_tail -> COMMA storage ASSIG expression . epilogue_tail
    (162) expression -> expression . PLUS expression
    (163) expression -> expression . MINUS expression
    (164) expression -> expression . STAR expression
    (165) expression -> expression . DIV expression
    (166) expression -> expression . IDIV expression
    (167) expression -> expression . MOD expression
    (168) expression -> expression . AND expression
    (169) expression -> expression . OR expression
    (170) expression -> expression . LT expression
    (171) expression -> expression . LE expression
    (172) expression -> expression . GT expression
    (173) expression -> expression . GE expression
    (174) expression -> expression . EQ expression
    (175) expression -> expression . NEQ expression
    (149) epilogue_tail -> . COMMA storage ASSIG expression epilogue_tail
    (150) epilogue_tail -> . DO

    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    STAR            shift and go to state 214
    DIV             shift and go to state 215
    IDIV            shift and go to state 216
    MOD             shift and go to state 217
    AND             shift and go to state 218
    OR              shift and go to state 219
    LT              shift and go to state 220
    LE              shift and go to state 221
    GT              shift and go to state 222
    GE              shift and go to state 223
    EQ              shift and go to state 224
    NEQ             shift and go to state 225
    COMMA           shift and go to state 452
    DO              shift and go to state 453

    epilogue_tail                  shift and go to state 474

state 473

    (159) catch_block_tail -> STRING_LIT COLON . stms catch_block_tail
    (70) stms -> . stm stms
    (71) stms -> . stm
    (72) stm -> . ID_COLON ustm
    (73) stm -> . ustm
    (109) ustm -> . null_stm
    (110) ustm -> . assig_stm
    (111) ustm -> . passig_stm
    (112) ustm -> . return_stm
    (113) ustm -> . preturn_stm
    (114) ustm -> . call_stm
    (115) ustm -> . if_stm
    (116) ustm -> . while_stm
    (117) ustm -> . for_stm
    (118) ustm -> . goto_stm
    (119) ustm -> . break_stm
    (120) ustm -> . continue_stm
    (121) ustm -> . guard_stm
    (122) ustm -> . raise_stm
    (123) ustm -> . terminate_stm
    (127) null_stm -> . SEMI
    (128) assig_stm -> . storage ASSIG expression SEMI
    (129) passig_stm -> . storage PASSIG expression SEMI
    (130) passig_stm -> . storage PASSIG ALLOC ID_LP par_list SEMI
    (153) return_stm -> . RETURN SEMI
    (154) return_stm -> . RETURN expression SEMI
    (155) preturn_stm -> . PRETURN expression SEMI
    (131) call_stm -> . call SEMI
    (132) if_stm -> . IF expression THEN stms ENDIF
    (133) if_stm -> . IF expression THEN stms ELSE stms ENDIF
    (134) while_stm -> . WHILE expression DO stms ENDWHILE
    (135) while_stm -> . WHILE expression DO ENDWHILE
    (136) while_stm -> . WHILE DO stms ENDWHILE
    (137) while_stm -> . WHILE DO ENDWHILE
    (138) for_stm -> . FOR prologue condition epilogue stms ENDFOR
    (139) for_stm -> . FOR prologue condition epilogue ENDFOR
    (140) goto_stm -> . GOTO ID SEMI
    (124) break_stm -> . BREAK SEMI
    (125) continue_stm -> . CONTINUE SEMI
    (156) guard_stm -> . GUARD COLON stms CATCH COLON catch_block
    (160) raise_stm -> . RAISE expression SEMI
    (126) terminate_stm -> . TERMINATE SEMI
    (151) storage -> . arr
    (152) storage -> . var
    (201) call -> . ID_LP par_list
    (202) call -> . BOOL_LP expression RP
    (203) call -> . CHAR_LP expression RP
    (204) call -> . STRING_LP expression RP
    (205) call -> . INT_LP expression RP
    (206) call -> . FLOAT_LP expression RP
    (207) call -> . FIN_DOT ID_LP par_list
    (208) call -> . FOUT_DOT ID_LP par_list
    (209) call -> . IDOF_LP expression RP
    (210) call -> . SIZEOF_LP size_par RP
    (211) call -> . TYPEOF_LP expression RP
    (212) call -> . qualifier ID_LP par_list
    (189) arr -> . ID_LS COLON RS
    (190) arr -> . ID_LS COLON expression RS
    (191) arr -> . ID_LS expression COLON RS
    (192) arr -> . ID_LS expression COLON expression RS
    (193) arr -> . qualifier ID_LS COLON RS
    (194) arr -> . qualifier ID_LS COLON expression RS
    (195) arr -> . qualifier ID_LS expression COLON RS
    (196) arr -> . qualifier ID_LS expression COLON expression RS
    (197) arr -> . ID_LS expression RS arr_tail
    (198) arr -> . qualifier ID_LS expression RS arr_tail
    (220) var -> . ID
    (221) var -> . qualifier ID
    (217) qualifier -> . PARENT_DOT qualifier
    (218) qualifier -> . ID_DOT qualifier
    (219) qualifier -> . ID_DOT

    ID_COLON        shift and go to state 68
    SEMI            shift and go to state 87
    RETURN          shift and go to state 90
    PRETURN         shift and go to state 91
    IF              shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95
    GOTO            shift and go to state 96
    BREAK           shift and go to state 97
    CONTINUE        shift and go to state 98
    GUARD           shift and go to state 99
    RAISE           shift and go to state 100
    TERMINATE       shift and go to state 101
    ID_LP           shift and go to state 89
    BOOL_LP         shift and go to state 104
    CHAR_LP         shift and go to state 105
    STRING_LP       shift and go to state 106
    INT_LP          shift and go to state 107
    FLOAT_LP        shift and go to state 108
    FIN_DOT         shift and go to state 109
    FOUT_DOT        shift and go to state 110
    IDOF_LP         shift and go to state 111
    SIZEOF_LP       shift and go to state 112
    TYPEOF_LP       shift and go to state 113
    ID_LS           shift and go to state 136
    ID              shift and go to state 119
    PARENT_DOT      shift and go to state 115
    ID_DOT          shift and go to state 116

    stms                           shift and go to state 475
    stm                            shift and go to state 290
    ustm                           shift and go to state 69
    null_stm                       shift and go to state 70
    assig_stm                      shift and go to state 71
    passig_stm                     shift and go to state 72
    return_stm                     shift and go to state 73
    preturn_stm                    shift and go to state 74
    call_stm                       shift and go to state 75
    if_stm                         shift and go to state 76
    while_stm                      shift and go to state 77
    for_stm                        shift and go to state 78
    goto_stm                       shift and go to state 79
    break_stm                      shift and go to state 80
    continue_stm                   shift and go to state 81
    guard_stm                      shift and go to state 82
    raise_stm                      shift and go to state 83
    terminate_stm                  shift and go to state 84
    storage                        shift and go to state 88
    call                           shift and go to state 92
    arr                            shift and go to state 102
    var                            shift and go to state 103
    qualifier                      shift and go to state 114

state 474

    (149) epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .

    ENDFOR          reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    ID_COLON        reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    SEMI            reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    RETURN          reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    PRETURN         reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    IF              reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    WHILE           reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    FOR             reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    GOTO            reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    BREAK           reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    CONTINUE        reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    GUARD           reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    RAISE           reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    TERMINATE       reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    ID_LP           reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    BOOL_LP         reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    CHAR_LP         reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    STRING_LP       reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    INT_LP          reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    FLOAT_LP        reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    FIN_DOT         reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    FOUT_DOT        reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    IDOF_LP         reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    SIZEOF_LP       reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    TYPEOF_LP       reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    ID_LS           reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    ID              reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    PARENT_DOT      reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)
    ID_DOT          reduce using rule 149 (epilogue_tail -> COMMA storage ASSIG expression epilogue_tail .)


state 475

    (159) catch_block_tail -> STRING_LIT COLON stms . catch_block_tail
    (158) catch_block_tail -> . ENDCATCH
    (159) catch_block_tail -> . STRING_LIT COLON stms catch_block_tail

    ENDCATCH        shift and go to state 470
    STRING_LIT      shift and go to state 468

    catch_block_tail               shift and go to state 476

state 476

    (159) catch_block_tail -> STRING_LIT COLON stms catch_block_tail .

    ENDMAIN         reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    ID_COLON        reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    PERMANENT       reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    CONST           reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    BOOL            reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    CHAR            reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    STRING          reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    INT             reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    FLOAT           reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    ID              reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    BOOL_LS         reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    CHAR_LS         reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    STRING_LS       reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    INT_LS          reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    FLOAT_LS        reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    ID_LS           reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    FILE            reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    SEMI            reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    RETURN          reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    PRETURN         reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    IF              reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    WHILE           reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    FOR             reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    GOTO            reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    BREAK           reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    CONTINUE        reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    GUARD           reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    RAISE           reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    TERMINATE       reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    ID_LP           reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    BOOL_LP         reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    CHAR_LP         reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    STRING_LP       reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    INT_LP          reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    FLOAT_LP        reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    FIN_DOT         reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    FOUT_DOT        reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    IDOF_LP         reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    SIZEOF_LP       reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    TYPEOF_LP       reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    PARENT_DOT      reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    ID_DOT          reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    ENDMETHOD       reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    ENDWHILE        reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    CATCH           reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    ENDIF           reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    ELSE            reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    ENDFOR          reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    ENDCATCH        reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)
    STRING_LIT      reduce using rule 159 (catch_block_tail -> STRING_LIT COLON stms catch_block_tail .)

